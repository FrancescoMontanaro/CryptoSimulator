{"ast":null,"code":"var _jsxFileName = \"/Users/francescomontanaro/Desktop/Universita\\u0300/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/PriceViewer.js\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from 'react';\nexport default function PriceViewer(props) {\n  var swipeIndex = props.swipeIndex;\n  var data = props.data;\n\n  if (swipeIndex >= 0 && swipeIndex <= data.length) {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.currentPrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }\n    }, parsePrice(data[swipeIndex][1])), React.createElement(Text, {\n      style: styles.currentDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }\n    }, getDate(data[swipeIndex][0])));\n  } else {\n    return null;\n  }\n}\n;\nvar styles = StyleSheet.create({});\n\nfunction getDate(timestamp) {\n  var date = new Date(timestamp);\n  var textDate = days[date.getDay()] + \" \" + date.getDate() + \" \" + months[date.getMonth()] + \" \" + date.getFullYear();\n  return textDate;\n}\n\nfunction parsePrice(price) {\n  price = price.toFixed(2);\n  var integer = String(Math.trunc(price));\n  var decimal = price.split(\".\")[1];\n\n  if (integer.length > 3) {\n    integer = [integer.slice(0, integer.length - 3), \".\", integer.slice(integer.length - 3)].join('');\n  }\n\n  return integer + \",\" + decimal + \"$\";\n}","map":{"version":3,"sources":["/Users/francescomontanaro/Desktop/UniversitaÌ€/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/PriceViewer.js"],"names":["React","PriceViewer","props","swipeIndex","data","length","styles","currentPrice","parsePrice","currentDate","getDate","StyleSheet","create","timestamp","date","Date","textDate","days","getDay","months","getMonth","getFullYear","price","toFixed","integer","String","Math","trunc","decimal","split","slice","join"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AACtC,MAAMC,UAAU,GAAGD,KAAK,CAACC,UAAzB;AACA,MAAMC,IAAI,GAAGF,KAAK,CAACE,IAAnB;;AAEA,MAAGD,UAAU,IAAI,CAAd,IAAmBA,UAAU,IAAIC,IAAI,CAACC,MAAzC,EAAgD;AAC5C,WACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCC,UAAU,CAACJ,IAAI,CAACD,UAAD,CAAJ,CAAiB,CAAjB,CAAD,CAA7C,CADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEG,MAAM,CAACG,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCC,OAAO,CAACN,IAAI,CAACD,UAAD,CAAJ,CAAiB,CAAjB,CAAD,CAAzC,CAFJ,CADJ;AAOH,GARD,MASI;AACA,WAAO,IAAP;AACH;AACJ;AAAA;AAED,IAAMG,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;;AAKA,SAASF,OAAT,CAAiBG,SAAjB,EAA2B;AACvB,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,SAAT,CAAX;AACA,MAAIG,QAAQ,GAAGC,IAAI,CAACH,IAAI,CAACI,MAAL,EAAD,CAAJ,GAAsB,GAAtB,GAA4BJ,IAAI,CAACJ,OAAL,EAA5B,GAA6C,GAA7C,GAAmDS,MAAM,CAACL,IAAI,CAACM,QAAL,EAAD,CAAzD,GAA6E,GAA7E,GAAmFN,IAAI,CAACO,WAAL,EAAlG;AACA,SAAOL,QAAP;AACH;;AAGD,SAASR,UAAT,CAAoBc,KAApB,EAA0B;AACtBA,EAAAA,KAAK,GAAGA,KAAK,CAACC,OAAN,CAAc,CAAd,CAAR;AACA,MAAIC,OAAO,GAAGC,MAAM,CAACC,IAAI,CAACC,KAAL,CAAWL,KAAX,CAAD,CAApB;AACA,MAAIM,OAAO,GAAGN,KAAK,CAACO,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAd;;AACA,MAAGL,OAAO,CAACnB,MAAR,GAAiB,CAApB,EAAsB;AAClBmB,IAAAA,OAAO,GAAG,CAACA,OAAO,CAACM,KAAR,CAAc,CAAd,EAAkBN,OAAO,CAACnB,MAAR,GAAiB,CAAnC,CAAD,EAAyC,GAAzC,EAA8CmB,OAAO,CAACM,KAAR,CAAeN,OAAO,CAACnB,MAAR,GAAiB,CAAhC,CAA9C,EAAmF0B,IAAnF,CAAwF,EAAxF,CAAV;AACH;;AACD,SAAOP,OAAO,GAAG,GAAV,GAAgBI,OAAhB,GAA0B,GAAjC;AACH","sourcesContent":["import {Text, View} from 'react-native';\nimport React from 'react';\n\nexport default function PriceViewer(props){\n    const swipeIndex = props.swipeIndex;\n    const data = props.data;\n\n    if(swipeIndex >= 0 && swipeIndex <= data.length){\n        return(\n            <View>\n                <Text style={styles.currentPrice}>{parsePrice(data[swipeIndex][1])}</Text>\n                <Text style={styles.currentDate}>{getDate(data[swipeIndex][0])}\n                 </Text>\n            </View>\n        )\n    }\n    else{\n        return(null);\n    }\n};\n\nconst styles = StyleSheet.create({\n\n})\n\n\nfunction getDate(timestamp){\n    var date = new Date(timestamp);\n    var textDate = days[date.getDay()] + \" \" + date.getDate() + \" \" + months[date.getMonth()] + \" \" + date.getFullYear();\n    return textDate;\n}\n\n\nfunction parsePrice(price){\n    price = price.toFixed(2);\n    var integer = String(Math.trunc(price));\n    var decimal = price.split(\".\")[1];\n    if(integer.length > 3){\n        integer = [integer.slice(0, (integer.length - 3)), \".\", integer.slice((integer.length - 3))].join('');\n    }\n    return integer + \",\" + decimal + \"$\";\n}"]},"metadata":{},"sourceType":"module"}