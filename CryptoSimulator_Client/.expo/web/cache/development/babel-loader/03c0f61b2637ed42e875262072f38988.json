{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"/Users/francescomontanaro/Desktop/Universita\\u0300/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/Predictions.js\",\n    _this = this;\n\nimport 'react-native-gesture-handler';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useState, useEffect } from 'react';\nimport { useFonts, Poppins_300Light, Poppins_400Regular, Poppins_500Medium, Poppins_600SemiBold } from '@expo-google-fonts/poppins';\nimport { AppLoading } from 'expo';\nimport * as firebase from 'firebase';\nimport \"firebase/functions\";\nimport { AreaChart, Grid, LineChart } from 'react-native-svg-charts';\nimport * as shape from 'd3-shape';\nimport { Defs, LinearGradient, Stop, Path, G, Line, Circle } from 'react-native-svg';\nexport default function Predictions() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cryptoData = _useState4[0],\n      setCryptoData = _useState4[1];\n\n  var _useFonts = useFonts({\n    Poppins_300Light: Poppins_300Light,\n    Poppins_400Regular: Poppins_400Regular,\n    Poppins_500Medium: Poppins_500Medium,\n    Poppins_600SemiBold: Poppins_600SemiBold\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  useEffect(function () {\n    if (loading && !fontsLoaded) {\n      firebase.functions().httpsCallable('getCryptoData')({\n        asset: 'bitcoin',\n        start: '2020-01-01',\n        end: '2020-02-01',\n        interval: '1d'\n      }).then(function (response) {\n        if (response.data.statusCode == 200) {\n          setCryptoData(response.data.body);\n          setLoading(false);\n        } else {\n          console.error(response.data.body);\n        }\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, []);\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }\n    });\n  } else {\n    if (!loading) {\n      var data = [];\n      console.log(cryptoData);\n      cryptoData.values.forEach(function (sample) {\n        data.push(sample[4]);\n      });\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }\n      }, React.createElement(Chart, {\n        name: cryptoData.name,\n        symbol: cryptoData.symbol,\n        currentPrice: \"17.000,00â‚¬\",\n        data: data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }));\n    } else {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, \"LOADING...\"));\n    }\n  }\n}\n;\n\nvar Chart = function Chart(props) {\n  var data = props.data;\n\n  var ChartLine = function ChartLine(_ref) {\n    var line = _ref.line;\n    return React.createElement(Path, {\n      key: 'line',\n      d: line,\n      stroke: 'rgb(41, 114, 255)',\n      fill: 'none',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }\n    });\n  };\n\n  var Gradient = function Gradient(_ref2) {\n    var index = _ref2.index;\n    return React.createElement(Defs, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }\n    }, React.createElement(LinearGradient, {\n      id: 'gradient',\n      x1: '0%',\n      y1: '0%',\n      x2: '0%',\n      y2: '100%',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, React.createElement(Stop, {\n      offset: '0%',\n      stopColor: 'rgb(41, 114, 255)',\n      stopOpacity: 0.2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }), React.createElement(Stop, {\n      offset: '28%',\n      stopColor: 'rgb(41, 114, 255)',\n      stopOpacity: 0,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  var Tooltip = function Tooltip(_ref3) {\n    var x = _ref3.x,\n        y = _ref3.y;\n    return React.createElement(G, {\n      key: 'tooltip',\n      onPress: function onPress() {\n        return console.log('tooltip clicked');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }\n    }, React.createElement(G, {\n      y: 50,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      x: 75 / 2,\n      dy: 20,\n      alignmentBaseline: 'middle',\n      textAnchor: 'middle',\n      stroke: 'rgb(134, 65, 244)',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, data[5] + \"\\xBAC\")), React.createElement(G, {\n      x: 75 / 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, React.createElement(Line, {\n      y1: 50 + 40,\n      y2: y(data[5]),\n      stroke: 'grey',\n      strokeWidth: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }), React.createElement(Circle, {\n      cy: y(data[5]),\n      r: 4,\n      stroke: 'rgb(41, 114, 255)',\n      strokeWidth: 2,\n      fill: 'rgb(41, 114, 255)',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  return React.createElement(View, {\n    style: styles.chartContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      textAlign: 'left'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.cryptoSymbol,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, props.symbol), React.createElement(Text, {\n    style: styles.cryptoName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, props.name)), React.createElement(View, {\n    style: {\n      height: 120,\n      flexDirection: 'row',\n      marginBottom: 15,\n      marginTop: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      marginLeft: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, React.createElement(AreaChart, {\n    style: {\n      height: 120\n    },\n    data: props.data,\n    contentInset: {\n      top: 10,\n      bottom: 10\n    },\n    curve: shape.curveNatural,\n    svg: {\n      fill: 'url(#gradient)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, React.createElement(Tooltip, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }), React.createElement(ChartLine, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }), React.createElement(Gradient, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  })))), React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      marginTop: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.buttonsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, \"1D\"), React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, \"1W\"), React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, \"1M\"), React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, \"1Y\"), React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, \"ALWAYS\"))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#e9f0ff',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    paddingTop: 30\n  },\n  chartContainer: {\n    backgroundColor: '#ffffff',\n    width: '90%',\n    borderRadius: 20,\n    padding: 20,\n    marginBottom: 20\n  },\n  cryptoSymbol: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 25,\n    color: '#000000'\n  },\n  cryptoName: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 20,\n    color: '#000000'\n  },\n  priceContainer: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  currentPrice: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 18,\n    color: '#000000',\n    margin: 0\n  },\n  text: {\n    fontFamily: 'Poppins_600SemiBold',\n    fontSize: 30,\n    color: '#000000'\n  },\n  buttonsContainer: {\n    width: '80%',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  buttonText: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 12,\n    color: '#000000'\n  },\n  tooltip: {\n    flex: 1,\n    position: 'absolute',\n    zIndex: '100'\n  }\n});","map":{"version":3,"sources":["/Users/francescomontanaro/Desktop/UniversitaÌ€/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/Predictions.js"],"names":["React","useState","useEffect","useFonts","Poppins_300Light","Poppins_400Regular","Poppins_500Medium","Poppins_600SemiBold","AppLoading","firebase","AreaChart","Grid","LineChart","shape","Defs","LinearGradient","Stop","Path","G","Line","Circle","Predictions","loading","setLoading","cryptoData","setCryptoData","fontsLoaded","functions","httpsCallable","asset","start","end","interval","then","response","data","statusCode","body","console","error","catch","log","values","forEach","sample","push","styles","container","name","symbol","text","Chart","props","ChartLine","line","Gradient","index","Tooltip","x","y","chartContainer","flex","textAlign","cryptoSymbol","cryptoName","height","flexDirection","marginBottom","marginTop","marginLeft","top","bottom","curveNatural","fill","alignItems","buttonsContainer","buttonText","StyleSheet","create","backgroundColor","justifyContent","paddingTop","width","borderRadius","padding","fontFamily","fontSize","color","priceContainer","currentPrice","margin","tooltip","position","zIndex"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\nimport { StyleSheet, Text, View, ScrollView } from 'react-native';\nimport React, {useState,useEffect} from 'react';\nimport { useFonts, Poppins_300Light, Poppins_400Regular, Poppins_500Medium, Poppins_600SemiBold} from '@expo-google-fonts/poppins';\nimport { AppLoading } from 'expo';\nimport * as firebase from 'firebase'\nimport \"firebase/functions\";\nimport { AreaChart, Grid, LineChart} from 'react-native-svg-charts'\nimport * as shape from 'd3-shape'\nimport { Defs, LinearGradient, Stop, Path, G, Line, Circle} from 'react-native-svg'\n\n\nexport default function Predictions() {\n  const [loading, setLoading] = useState(true);\n  const [cryptoData, setCryptoData] = useState({});\n  let [fontsLoaded] = useFonts({\n    Poppins_300Light,\n    Poppins_400Regular,\n    Poppins_500Medium,\n    Poppins_600SemiBold\n  });\n\n  useEffect(()=>{\n    if(loading && !fontsLoaded){\n    firebase.functions().httpsCallable('getCryptoData')({asset: 'bitcoin', start: '2020-01-01', end: '2020-02-01', interval: '1d'}).then(response =>{\n      if(response.data.statusCode == 200){\n        setCryptoData(response.data.body);\n        setLoading(false);\n      }\n      else{\n        console.error(response.data.body);\n      }\n    }).catch(error =>{\n      console.error(error);\n    })\n  }},[])\n\n  if (!fontsLoaded) {\n    return <AppLoading/>;\n  }\n  else{\n    if(!loading){\n      let data = [];\n      console.log(cryptoData);\n      (cryptoData.values).forEach(sample =>{\n        data.push(sample[4]);\n      })\n\n    return (\n      <View style={styles.container}>\n        <Chart name={cryptoData.name} symbol={cryptoData.symbol} currentPrice={\"17.000,00â‚¬\"} data={data}></Chart>\n      </View>\n    );\n    }\n    else{\n      return(\n        <View style={styles.container}>\n          <Text style={styles.text}>\n              LOADING...\n          </Text>\n        </View>\n      );\n    }\n  }\n};\n\n\nconst Chart = (props) => {\n  const data = props.data;\n  \n  const ChartLine = ({ line }) => (\n    <Path\n        key={'line'}\n        d={line}\n        stroke={'rgb(41, 114, 255)'}\n        fill={'none'}\n    />\n  )\n\n  const Gradient = ({ index }) => (\n    <Defs key={index}>\n        <LinearGradient id={'gradient'} x1={'0%'} y1={'0%'} x2={'0%'} y2={'100%'}>\n            <Stop offset={'0%'} stopColor={'rgb(41, 114, 255)'} stopOpacity={0.2}/>\n            <Stop offset={'28%'} stopColor={'rgb(41, 114, 255)'} stopOpacity={0}/>\n        </LinearGradient>\n    </Defs>\n  )\n\n  const Tooltip = ({ x, y }) => (\n    <G\n        key={ 'tooltip' }\n        onPress={ () => console.log('tooltip clicked') }\n    >\n        <G y={ 50 }>\n            <Text\n                x={ 75 / 2 }\n                dy={ 20 }\n                alignmentBaseline={ 'middle' }\n                textAnchor={ 'middle' }\n                stroke={ 'rgb(134, 65, 244)' }\n            >\n                { `${data[5]}ÂºC` }\n            </Text>\n        </G>\n        <G x={ 75 / 2 }>\n            <Line\n                y1={ 50 + 40 }\n                y2={ y(data[ 5 ]) }\n                stroke={ 'grey' }\n                strokeWidth={ 2 }\n            />\n            <Circle\n                cy={ y(data[ 5 ]) }\n                r={ 4 }\n                stroke={ 'rgb(41, 114, 255)' }\n                strokeWidth={ 2 }\n                fill={ 'rgb(41, 114, 255)' }\n            />\n        </G>\n    </G>\n)\n\n\n  return (\n    <View style={styles.chartContainer}>\n\n      <View style={{flex: 1, textAlign: 'left'}}>\n        <Text style={styles.cryptoSymbol}>{props.symbol}</Text>\n        <Text style={styles.cryptoName}>{props.name}</Text>\n      </View>\n\n      <View style={{ height: 120, flexDirection: 'row', marginBottom: 15, marginTop: 15 }}>\n          <View style={{ flex: 1, marginLeft: 10 }}>\n            <AreaChart\n              style={{ height: 120 }}\n              data={props.data}\n              contentInset={{ top: 10, bottom: 10 }}\n              curve={shape.curveNatural}\n              svg={{ fill: 'url(#gradient)' }}\n              >\n              <Tooltip/>\n              <ChartLine/>\n              <Gradient/>\n            </AreaChart>\n          </View>\n      </View>\n\n      <View style={{flex: 1, alignItems: 'center', marginTop: 20}}>\n        <View style={styles.buttonsContainer}>\n          <Text style={styles.buttonText}>\n            1D\n          </Text>\n          <Text style={styles.buttonText}>\n            1W\n          </Text>\n          <Text style={styles.buttonText}>\n            1M\n          </Text>\n          <Text style={styles.buttonText}>\n            1Y\n          </Text>\n          <Text style={styles.buttonText}>\n            ALWAYS\n          </Text>\n        </View>\n      </View>\n    </View>\n  );\n};\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex:1,\n    backgroundColor: '#e9f0ff',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    paddingTop: 30\n  },\n  chartContainer: {\n    backgroundColor: '#ffffff',\n    width: '90%',\n    borderRadius: 20,\n    padding: 20,\n    marginBottom: 20\n  },\n  cryptoSymbol: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 25,\n    color: '#000000'\n  },\n  cryptoName: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 20,\n    color: '#000000'\n  },\n  priceContainer: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  currentPrice: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 18,\n    color: '#000000',\n    margin: 0\n  },\n  text: {\n    fontFamily: 'Poppins_600SemiBold',\n    fontSize: 30,\n    color: '#000000'\n  },\n  buttonsContainer: {\n    width: '80%', \n    flexDirection: 'row', \n    justifyContent: 'space-between'\n  },\n  buttonText: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 12,\n    color: '#000000'\n  },\n  tooltip: {\n    flex: 1,\n    position: 'absolute',\n    zIndex: '100'\n  }\n});"]},"metadata":{},"sourceType":"module"}