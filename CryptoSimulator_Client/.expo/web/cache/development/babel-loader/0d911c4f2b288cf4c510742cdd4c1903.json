{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/francescomontanaro/Desktop/Universita\\u0300/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/CryptoList.js\";\nimport 'react-native-gesture-handler';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useFonts, Poppins_300Light, Poppins_400Regular, Poppins_600SemiBold } from '@expo-google-fonts/poppins';\nimport { AppLoading } from 'expo';\nimport Crypto from \"./Crypto\";\nimport Firebase from \"../APIs/Firebase\";\nvar cryptos = [{\n  name: 'btc',\n  value: 10\n}, {\n  name: 'btc',\n  value: 10\n}, {\n  name: 'btc',\n  value: 10\n}, {\n  name: 'btc',\n  value: 10\n}, {\n  name: 'btc',\n  value: 10\n}, {\n  name: 'btc',\n  value: 10\n}, {\n  name: 'btc',\n  value: 10\n}];\nexport default function CryptoList() {\n  var _this = this;\n\n  var _useFonts = useFonts({\n    Poppins_300Light: Poppins_300Light,\n    Poppins_400Regular: Poppins_400Regular,\n    Poppins_600SemiBold: Poppins_600SemiBold\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }\n    });\n  } else {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.cryptoContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, React.createElement(FlatList, {\n      data: cryptos,\n      showsVerticalScrollIndicator: false,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return React.createElement(Crypto, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 111\n          }\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    })));\n  }\n}\n;\n\nfunction getCryptoList() {\n  Firebase.functions.httpsCallable('getCryptoList')().then(function (response) {\n    alert(response);\n  }).catch(function (error) {\n    alert(error);\n  });\n  return cryptoList;\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f3f6ff',\n    paddingLeft: 20,\n    paddingRight: 20,\n    paddingTop: 30\n  },\n  cryptoContainer: {\n    height: '90%'\n  }\n});","map":{"version":3,"sources":["/Users/francescomontanaro/Desktop/UniversitaÌ€/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/CryptoList.js"],"names":["React","useFonts","Poppins_300Light","Poppins_400Regular","Poppins_600SemiBold","AppLoading","Crypto","Firebase","cryptos","name","value","CryptoList","fontsLoaded","styles","container","cryptoContainer","item","id","getCryptoList","functions","httpsCallable","then","response","alert","catch","error","cryptoList","StyleSheet","create","flex","backgroundColor","paddingLeft","paddingRight","paddingTop","height"],"mappings":";;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,QAAT,EAAmBC,gBAAnB,EAAqCC,kBAArC,EAAyDC,mBAAzD,QAAmF,4BAAnF;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAOC,MAAP;AACA,OAAOC,QAAP;AAEA,IAAMC,OAAO,GAAC,CACV;AACIC,EAAAA,IAAI,EAAC,KADT;AAEIC,EAAAA,KAAK,EAAC;AAFV,CADU,EAKV;AACID,EAAAA,IAAI,EAAC,KADT;AAEIC,EAAAA,KAAK,EAAC;AAFV,CALU,EASV;AACID,EAAAA,IAAI,EAAC,KADT;AAEIC,EAAAA,KAAK,EAAC;AAFV,CATU,EAaV;AACID,EAAAA,IAAI,EAAC,KADT;AAEIC,EAAAA,KAAK,EAAC;AAFV,CAbU,EAiBV;AACID,EAAAA,IAAI,EAAC,KADT;AAEIC,EAAAA,KAAK,EAAC;AAFV,CAjBU,EAqBV;AACID,EAAAA,IAAI,EAAC,KADT;AAEIC,EAAAA,KAAK,EAAC;AAFV,CArBU,EAyBV;AACID,EAAAA,IAAI,EAAC,KADT;AAEIC,EAAAA,KAAK,EAAC;AAFV,CAzBU,CAAd;AAgCA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAAA,kBACbV,QAAQ,CAAC;AACrBC,IAAAA,gBAAgB,EAAhBA,gBADqB;AAErBC,IAAAA,kBAAkB,EAAlBA,kBAFqB;AAGrBC,IAAAA,mBAAmB,EAAnBA;AAHqB,GAAD,CADK;AAAA;AAAA,MAC5BQ,WAD4B;;AAOjC,MAAI,CAACA,WAAL,EAAkB;AACd,WAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,MAGI;AACA,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEP,OAAhB;AAAyB,MAAA,4BAA4B,EAAG,KAAxD;AAA+D,MAAA,UAAU,EAAE;AAAA,YAAGQ,IAAH,QAAGA,IAAH;AAAA,eAAe,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAf;AAAA,OAA3E;AAAuG,MAAA,YAAY,EAAE,sBAAAA,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAT;AAAA,OAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ;AAOH;AACJ;AAAA;;AAED,SAASC,aAAT,GAAwB;AACpBX,EAAAA,QAAQ,CAACY,SAAT,CAAmBC,aAAnB,CAAiC,eAAjC,IAAoDC,IAApD,CAAyD,UAAAC,QAAQ,EAAG;AAChEC,IAAAA,KAAK,CAACD,QAAD,CAAL;AACH,GAFD,EAEGE,KAFH,CAES,UAAAC,KAAK,EAAG;AACbF,IAAAA,KAAK,CAACE,KAAD,CAAL;AACH,GAJD;AAKA,SAAOC,UAAP;AACH;;AAED,IAAMb,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC7Bd,EAAAA,SAAS,EAAE;AACPe,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE,SAFV;AAGPC,IAAAA,WAAW,EAAE,EAHN;AAIPC,IAAAA,YAAY,EAAE,EAJP;AAKPC,IAAAA,UAAU,EAAE;AALL,GADkB;AAQ7BlB,EAAAA,eAAe,EAAE;AACbmB,IAAAA,MAAM,EAAE;AADK;AARY,CAAlB,CAAf","sourcesContent":["import 'react-native-gesture-handler';\nimport React from 'react';\nimport { StyleSheet,FlatList,ScrollView, View } from 'react-native';\nimport { useFonts, Poppins_300Light, Poppins_400Regular, Poppins_600SemiBold} from '@expo-google-fonts/poppins';\nimport { AppLoading } from 'expo';\nimport Crypto from './Crypto';\nimport Firebase from '../APIs/Firebase'\n\nconst cryptos=[\n    {\n        name:'btc',\n        value:10\n    },\n    {\n        name:'btc',\n        value:10\n    },\n    {\n        name:'btc',\n        value:10\n    },\n    {\n        name:'btc',\n        value:10\n    },\n    {\n        name:'btc',\n        value:10\n    },\n    {\n        name:'btc',\n        value:10\n    },\n    {\n        name:'btc',\n        value:10\n    }\n];\n\n\nexport default function CryptoList() {\n    let [fontsLoaded] = useFonts({\n            Poppins_300Light,\n            Poppins_400Regular,\n            Poppins_600SemiBold\n        });\n    \n    if (!fontsLoaded) {\n        return <AppLoading/>;\n    }\n    else{\n        return (\n            <View style={styles.container}>\n                <View style={styles.cryptoContainer}>\n                    <FlatList data={cryptos} showsVerticalScrollIndicator ={false} renderItem={({ item }) => (<Crypto/>) } keyExtractor={item => item.id}/>\n                </View>\n            </View>\n        );\n    }\n};\n\nfunction getCryptoList(){\n    Firebase.functions.httpsCallable('getCryptoList')().then(response =>{\n        alert(response);\n    }).catch(error =>{\n        alert(error);\n    })\n    return cryptoList;\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#f3f6ff',\n        paddingLeft: 20,\n        paddingRight: 20,\n        paddingTop: 30\n    },\n    cryptoContainer: {\n        height: '90%'\n    }\n});\n"]},"metadata":{},"sourceType":"module"}