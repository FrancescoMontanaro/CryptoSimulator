{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/francescomontanaro/Desktop/Universita\\u0300/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/node_modules/react-native-draggable-dynamic-flatlist/src/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport YellowBox from \"react-native-web/dist/exports/YellowBox\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport UIManager from \"react-native-web/dist/exports/UIManager\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nYellowBox.ignoreWarnings(['Warning: isMounted(...) is deprecated']);\nUIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\nvar initialState = {\n  hoverComponent: null,\n  extraData: null\n};\n\nvar DraggableFlatList = function (_Component) {\n  _inherits(DraggableFlatList, _Component);\n\n  var _super = _createSuper(DraggableFlatList);\n\n  function DraggableFlatList(props) {\n    var _this;\n\n    _classCallCheck(this, DraggableFlatList);\n\n    _this = _super.call(this, props);\n    _this._moveAnim = new Animated.Value(0);\n    _this._offset = new Animated.Value(0);\n    _this._hoverAnim = Animated.add(_this._moveAnim, _this._offset);\n    _this._spacerIndex = -1;\n    _this._previousIndex = -1;\n    _this._nextIndex = -1;\n    _this._tappedRow = -1;\n    _this._tappedRowSize = 0;\n    _this._scrollOffset = 0;\n    _this._headerSize = 0;\n    _this._move = 0;\n    _this._hasMoved = false;\n    _this._additionalOffset = 0;\n    _this._releaseVal = 0;\n    _this._releaseAnim = null;\n    _this._currentEvent = null;\n    _this._container = null;\n    _this._spacerLayout = null;\n    _this._size = [];\n    _this._position = [];\n    _this._order = [];\n\n    _this.componentDidUpdate = function (prevProps, prevState) {\n      if (prevProps.extraData !== _this.props.extraData) {\n        _this.setState({\n          extraData: _this.props.extraData\n        });\n      }\n    };\n\n    _this.initPositions = function () {\n      var currentPos = _this._containerOffset + _this._headerSize;\n\n      for (var i = 0; i < _this._order.length; i++) {\n        var index = _this._order[i];\n\n        if (_this._size[index] > 0) {\n          _this._position[index] = currentPos;\n          currentPos += _this._size[index];\n\n          if (index === _this._tappedRow) {\n            _this._position[index] = -1;\n          }\n        }\n      }\n    };\n\n    _this.onRelease = function () {\n      if (_this._currentEvent === null) return;\n      _this._currentEvent = null;\n      if (_this._tappedRow === -1) return;\n      var horizontal = _this.props.horizontal;\n      var _this$_spacerLayout = _this._spacerLayout,\n          pageX = _this$_spacerLayout.pageX,\n          pageY = _this$_spacerLayout.pageY,\n          scrollOffset = _this$_spacerLayout.scrollOffset;\n      var position = horizontal ? pageX : pageY - _this._scrollOffset + scrollOffset;\n      _this._releaseVal = position - _this._containerOffset;\n      if (_this._releaseAnim) _this._releaseAnim.stop();\n      _this._releaseAnim = Animated.parallel([Animated.spring(_this._offset, {\n        toValue: 0,\n        stiffness: 5000,\n        damping: 500,\n        mass: 3,\n        useNativeDriver: true\n      }), Animated.spring(_this._moveAnim, {\n        toValue: _this._releaseVal,\n        stiffness: 5000,\n        damping: 500,\n        mass: 3,\n        useNativeDriver: true\n      })]);\n\n      _this._releaseAnim.start(_this.onReleaseAnimationEnd);\n    };\n\n    _this.move = function (hoverComponent, index) {\n      var _this$props = _this.props,\n          onMoveBegin = _this$props.onMoveBegin,\n          data = _this$props.data;\n\n      if (_this._releaseAnim) {\n        _this._releaseAnim.stop();\n\n        _this.onReleaseAnimationEnd();\n\n        return;\n      }\n\n      for (var i = 0; i < data.length; i++) {\n        _this._order[i] = i;\n      }\n\n      _this.initPositions();\n\n      _this._tappedRow = index;\n      _this._spacerIndex = index;\n      _this._nextIndex = _this._spacerIndex + 1;\n      _this._previousIndex = _this._spacerIndex - 1;\n\n      if (_this._currentEvent && _this._currentEvent.nativeEvent) {\n        var _this$_currentEvent$n = _this._currentEvent.nativeEvent,\n            pageX = _this$_currentEvent$n.pageX,\n            pageY = _this$_currentEvent$n.pageY;\n        var horizontal = _this.props.horizontal;\n        _this._tappedRowSize = _this._size[_this._tappedRow];\n        var position = _this._position[_this._tappedRow] - _this._scrollOffset;\n        _this._position[_this._tappedRow] = -1;\n\n        if (_this._tappedRow === -1) {\n          return false;\n        }\n\n        var tappedPixel = horizontal ? pageX : pageY;\n\n        _this._moveAnim.setValue(tappedPixel);\n\n        _this._move = tappedPixel;\n        _this._additionalOffset = position - tappedPixel - _this._containerOffset;\n\n        _this._offset.setValue(_this._additionalOffset);\n\n        _this.getSpacerIndex(tappedPixel);\n\n        _this.setState({\n          hoverComponent: hoverComponent\n        }, function () {\n          return onMoveBegin && onMoveBegin(index);\n        });\n      }\n    };\n\n    _this.animate = function () {\n      var _this$props2 = _this.props,\n          scrollPercent = _this$props2.scrollPercent,\n          scrollSpeed = _this$props2.scrollSpeed;\n      var scrollRatio = scrollPercent / 100;\n      if (_this._tappedRow === -1) return;\n      var shouldScrollUp = _this._move - _this._containerOffset < _this._containerSize * scrollRatio;\n      var shouldScrollDown = _this._move - _this._containerOffset > _this._containerSize * (1 - scrollRatio);\n      if (shouldScrollUp) _this.scroll(-scrollSpeed, _this._spacerIndex);else if (shouldScrollDown) _this.scroll(scrollSpeed, _this._spacerIndex);\n\n      _this.getSpacerIndex(_this._move);\n\n      requestAnimationFrame(_this.animate);\n    };\n\n    _this.scroll = function (scrollAmt, spacerIndex) {\n      if (spacerIndex === -1) return;\n      var newOffset = _this._scrollOffset + scrollAmt;\n      var offset = Math.max(0, newOffset);\n\n      _this._flatList.scrollToOffset({\n        offset: offset,\n        animated: false\n      });\n    };\n\n    _this.getSpacerIndex = function (move) {\n      var data = _this.props.data;\n      var spacerIndex = _this._order[_this._spacerIndex];\n      var previousIndex = _this._order[_this._previousIndex];\n      var nextIndex = _this._order[_this._nextIndex];\n      var sizePrevious = _this._size[previousIndex];\n      var positionPrevious = _this._position[previousIndex];\n      var sizeNext = _this._size[nextIndex];\n      var positionNext = _this._position[nextIndex];\n\n      if (!sizePrevious || sizePrevious <= 0 || !positionPrevious || positionPrevious <= 0) {\n        _this._previousIndex = _this._previousIndex - 1;\n\n        if (_this._previousIndex < 0) {\n          _this._previousIndex = _this._spacerIndex - 1;\n\n          if (!_this._noPrevious) {\n            _this._noPrevious = true;\n\n            _this.forceUpdate();\n          }\n        }\n      } else {\n        if (positionPrevious >= 0) {\n          _this._noPrevious = false;\n\n          if (move + _this._scrollOffset < positionPrevious + sizePrevious / 2) {\n            _this._order[_this._spacerIndex] = previousIndex;\n            _this._order[_this._previousIndex] = spacerIndex;\n            _this._spacerIndex = _this._previousIndex;\n            _this._previousIndex = _this._spacerIndex - 1;\n            _this._nextIndex = _this._previousIndex + 1;\n            var found = false;\n\n            for (var i = _this._previousIndex; i >= 0; i--) {\n              var nextIndexTest = _this._order[i];\n              var sizePreviousTest = _this._size[nextIndexTest];\n\n              if (sizePreviousTest > 0 && nextIndexTest !== _this._tappedRow) {\n                found = true;\n              }\n            }\n\n            _this._noNext = false;\n            _this._noPrevious = !found;\n\n            _this.forceUpdate();\n\n            return;\n          }\n        }\n      }\n\n      if (!sizeNext || sizeNext <= 0 || !positionNext || positionNext <= 0) {\n        _this._nextIndex = _this._nextIndex + 1;\n\n        if (_this._nextIndex >= data.length) {\n          _this._nextIndex = _this._spacerIndex + 1;\n\n          if (!_this._noNext) {\n            _this._noNext = true;\n\n            _this.forceUpdate();\n          }\n        }\n      } else {\n        if (positionNext >= 0) {\n          _this._noNext = false;\n\n          if (move + _this._scrollOffset > positionNext + sizeNext / 2) {\n            _this._order[_this._spacerIndex] = nextIndex;\n            _this._order[_this._nextIndex] = spacerIndex;\n            _this._spacerIndex = _this._nextIndex;\n            _this._nextIndex = _this._spacerIndex + 1;\n            _this._previousIndex = _this._nextIndex - 1;\n            var _found = false;\n\n            for (var _i = _this._nextIndex; _i < data.length; _i++) {\n              var _nextIndexTest = _this._order[_i];\n              var sizeNextTest = _this._size[_nextIndexTest];\n\n              if (sizeNextTest > 0 && _nextIndexTest !== _this._tappedRow) {\n                _found = true;\n              }\n            }\n\n            _this._noPrevious = false;\n            _this._noNext = !_found;\n\n            _this.forceUpdate();\n\n            return;\n          }\n        }\n      }\n    };\n\n    _this.onReleaseAnimationEnd = function () {\n      var _this$props3 = _this.props,\n          data = _this$props3.data,\n          onMoveEnd = _this$props3.onMoveEnd;\n      var tappedRowSave = _this._tappedRow;\n      var from = _this._tappedRow;\n      var to = _this._spacerIndex;\n\n      var sortedData = _this.arrayMove(_toConsumableArray(data), from, to);\n\n      _this._size = _this.arrayMove(_this._size, from, to);\n\n      for (var i = 0; i < data.length; i++) {\n        _this._order[i] = i;\n      }\n\n      _this._moveAnim.setValue(_this._releaseVal);\n\n      _this._spacerIndex = -1;\n      _this._nextIndex = -1;\n      _this._previousIndex = -1;\n      _this._tappedRow = -1;\n      _this._hasMoved = false;\n      _this._move = 0;\n      _this._releaseAnim = null;\n\n      _this.initPositions();\n\n      _this.setState(initialState, function () {\n        onMoveEnd && onMoveEnd({\n          row: data[tappedRowSave],\n          from: from,\n          to: to,\n          data: sortedData\n        });\n      });\n    };\n\n    _this.arrayMove = function (arr, old_index, new_index) {\n      if (new_index >= arr.length) {\n        var k = new_index - arr.length + 1;\n\n        while (k--) {\n          arr.push(undefined);\n        }\n      }\n\n      arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n      return arr;\n    };\n\n    _this.moveEnd = function () {\n      if (!_this._hasMoved) {\n        _this._moveAnim.setValue(0);\n\n        _this._spacerIndex = -1;\n        _this._nextIndex = -1;\n        _this._previousIndex = -1;\n        _this._tappedRow = -1;\n        _this._hasMoved = false;\n        _this._move = 0;\n        _this._releaseAnim = null;\n\n        _this.setState(initialState);\n      }\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      var _this$props4 = _this.props,\n          renderItem = _this$props4.renderItem,\n          horizontal = _this$props4.horizontal,\n          data = _this$props4.data,\n          spacerStyle = _this$props4.spacerStyle;\n\n      var _spacerIndex = _this._tappedRow === data.length - 1 ? _this._spacerIndex - 1 : _this._spacerIndex;\n\n      var isActiveRow = _this._tappedRow === index;\n      var isSpacerRow = _spacerIndex === index;\n      var firstItem = _this._noPrevious && _this._tappedRow !== -1;\n      var spacer = React.createElement(View, {\n        style: _defineProperty({}, horizontal ? 'width' : 'height', _this._tappedRowSize),\n        onLayout: function onLayout(e) {\n          _this._spacerRef.measure(function (x, y, width, height, pageX, pageY) {\n            _this._spacerLayout = {\n              x: x,\n              y: y,\n              width: width,\n              height: height,\n              pageX: pageX,\n              pageY: pageY,\n              scrollOffset: _this._scrollOffset\n            };\n          });\n        },\n        ref: function ref(_ref3) {\n          _this._spacerRef = _ref3;\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: spacerStyle,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 17\n        }\n      }));\n      return React.createElement(View, {\n        onLayout: function onLayout(e) {\n          if (index !== _this._tappedRow) {\n            _this._size[index] = e.nativeEvent.layout[horizontal ? 'width' : 'height'] - (firstItem && index === 0 || !firstItem && isSpacerRow ? _this._tappedRowSize : 0);\n\n            _this.initPositions();\n          }\n        },\n        style: [styles.fullOpacity, {\n          flexDirection: horizontal ? 'row' : 'column'\n        }],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 13\n        }\n      }, firstItem && index === 0 ? spacer : null, React.createElement(RowItem, {\n        horizontal: horizontal,\n        index: index,\n        isActiveRow: isActiveRow,\n        renderItem: renderItem,\n        item: item,\n        move: _this.move,\n        moveEnd: _this.moveEnd,\n        extraData: _this.state.extraData,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 17\n        }\n      }), !firstItem && isSpacerRow ? spacer : null);\n    };\n\n    _this.renderHoverComponent = function () {\n      var hoverComponent = _this.state.hoverComponent;\n      var _this$props5 = _this.props,\n          horizontal = _this$props5.horizontal,\n          scaleSelectionFactor = _this$props5.scaleSelectionFactor;\n      return !!hoverComponent && React.createElement(Animated.View, {\n        style: [horizontal ? styles.hoverComponentHorizontal : styles.hoverComponentVertical, {\n          transform: [horizontal ? {\n            translateX: _this._hoverAnim\n          } : {\n            translateY: _this._hoverAnim\n          }, {\n            scaleX: scaleSelectionFactor\n          }, {\n            scaleY: scaleSelectionFactor\n          }]\n        }],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }\n      }, hoverComponent);\n    };\n\n    _this.renderHeaderComponent = function () {\n      var _this$props6 = _this.props,\n          ListHeaderComponent = _this$props6.ListHeaderComponent,\n          horizontal = _this$props6.horizontal;\n      return !!ListHeaderComponent && React.createElement(View, {\n        onLayout: function onLayout(e) {\n          _this._headerSize = e.nativeEvent.layout[horizontal ? 'width' : 'height'];\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 13\n        }\n      }, React.createElement(ListHeaderComponent, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 17\n        }\n      }));\n    };\n\n    _this.keyExtractor = function (item, index) {\n      return \"sortable-flatlist-item-\" + index;\n    };\n\n    var _data = _this.props.data;\n\n    for (var i = 0; i < _data.length; i++) {\n      _this._order[i] = i;\n    }\n\n    _this._panResponder = PanResponder.create({\n      onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture(evt, _ref4) {\n        var numberActiveTouches = _ref4.numberActiveTouches;\n\n        if (numberActiveTouches > 1) {\n          return true;\n        }\n\n        evt.persist();\n        _this._currentEvent = evt;\n        return false;\n      },\n      onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(evt, gestureState) {\n        var horizontal = _this.props.horizontal;\n        var moveX = gestureState.moveX,\n            moveY = gestureState.moveY,\n            numberActiveTouches = gestureState.numberActiveTouches;\n        var move = horizontal ? moveX : moveY;\n\n        if (numberActiveTouches > 1) {\n          _this.onRelease();\n\n          return false;\n        }\n\n        var shouldSet = _this._tappedRow > -1;\n\n        if (shouldSet) {\n          _this._moveAnim.setValue(move);\n\n          _this.animate();\n\n          _this._hasMoved = true;\n        }\n\n        return shouldSet;\n      },\n      onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n        if (gestureState.numberActiveTouches > 1) {\n          _this.onRelease();\n\n          return;\n        }\n\n        Animated.event([null, _defineProperty({}, props.horizontal ? 'moveX' : 'moveY', _this._moveAnim)], {\n          listener: function listener(evt, gestureState) {\n            var moveX = gestureState.moveX,\n                moveY = gestureState.moveY;\n            var horizontal = _this.props.horizontal;\n            _this._move = horizontal ? moveX : moveY;\n          }\n        })(evt, gestureState);\n      },\n      onPanResponderTerminationRequest: function onPanResponderTerminationRequest(_ref6, gestureState) {\n        var nativeEvent = _ref6.nativeEvent;\n        return false;\n      },\n      onPanResponderRelease: _this.onRelease\n    });\n    _this.state = initialState;\n    return _this;\n  }\n\n  _createClass(DraggableFlatList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props7 = this.props,\n          horizontal = _this$props7.horizontal,\n          keyExtractor = _this$props7.keyExtractor,\n          removeClippedSubviews = _this$props7.removeClippedSubviews;\n      return React.createElement(View, _extends({\n        onLayout: function onLayout(e) {\n          _this2._container.measure(function (x, y, width, height, pageX, pageY) {\n            _this2._containerOffset = horizontal ? pageX : pageY;\n            _this2._containerSize = horizontal ? width : height;\n\n            _this2.initPositions();\n          });\n        },\n        ref: function ref(_ref9) {\n          _this2._container = _ref9;\n        },\n        collapsable: false\n      }, this._panResponder.panHandlers, {\n        style: styles.wrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }\n      }), React.createElement(FlatList, _extends({}, this.props, {\n        ListHeaderComponent: this.renderHeaderComponent,\n        removeClippedSubviews: removeClippedSubviews,\n        scrollEnabled: this._tappedRow === -1,\n        ref: function ref(_ref8) {\n          return _this2._flatList = _ref8;\n        },\n        renderItem: this.renderItem,\n        extraData: this.state,\n        keyExtractor: keyExtractor || this.keyExtractor,\n        onScroll: function onScroll(_ref7) {\n          var nativeEvent = _ref7.nativeEvent;\n          _this2._scrollOffset = nativeEvent.contentOffset[horizontal ? 'x' : 'y'];\n        },\n        scrollEventThrottle: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 17\n        }\n      })), this.renderHoverComponent());\n    }\n  }]);\n\n  return DraggableFlatList;\n}(Component);\n\nexport default DraggableFlatList;\nDraggableFlatList.defaultProps = {\n  scrollPercent: 5,\n  scrollSpeed: 10,\n  scaleSelectionFactor: 0.95,\n  removeClippedSubviews: false\n};\n\nvar RowItem = function (_React$PureComponent) {\n  _inherits(RowItem, _React$PureComponent);\n\n  var _super2 = _createSuper(RowItem);\n\n  function RowItem() {\n    var _this3;\n\n    _classCallCheck(this, RowItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this3 = _super2.call.apply(_super2, [this].concat(args));\n\n    _this3.move = function () {\n      var _this3$props = _this3.props,\n          move = _this3$props.move,\n          moveEnd = _this3$props.moveEnd,\n          renderItem = _this3$props.renderItem,\n          item = _this3$props.item,\n          index = _this3$props.index;\n      var hoverComponent = renderItem({\n        isActive: true,\n        item: item,\n        index: index,\n        move: function move() {\n          return null;\n        },\n        moveEnd: moveEnd\n      });\n      move(hoverComponent, index);\n    };\n\n    return _this3;\n  }\n\n  _createClass(RowItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          moveEnd = _this$props8.moveEnd,\n          isActiveRow = _this$props8.isActiveRow,\n          horizontal = _this$props8.horizontal,\n          renderItem = _this$props8.renderItem,\n          item = _this$props8.item,\n          index = _this$props8.index;\n      var component = renderItem({\n        isActive: false,\n        item: item,\n        index: index,\n        move: this.move,\n        moveEnd: moveEnd\n      });\n      var wrapperStyle = {\n        opacity: 1\n      };\n      if (isActiveRow) wrapperStyle = {\n        display: 'none'\n      };\n      return React.createElement(View, {\n        collapsable: false,\n        style: {\n          opacity: 1,\n          flexDirection: horizontal ? 'row' : 'column'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: wrapperStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 17\n        }\n      }, component));\n    }\n  }]);\n\n  return RowItem;\n}(React.PureComponent);\n\nvar styles = StyleSheet.create({\n  hoverComponentVertical: {\n    position: 'absolute',\n    left: 0,\n    right: 0\n  },\n  hoverComponentHorizontal: {\n    position: 'absolute',\n    bottom: 0,\n    top: 0\n  },\n  wrapper: {\n    flex: 1,\n    opacity: 1\n  },\n  fullOpacity: {\n    opacity: 1\n  }\n});","map":{"version":3,"sources":["/Users/francescomontanaro/Desktop/Università/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/node_modules/react-native-draggable-dynamic-flatlist/src/index.js"],"names":["React","Component","YellowBox","ignoreWarnings","UIManager","setLayoutAnimationEnabledExperimental","initialState","hoverComponent","extraData","DraggableFlatList","props","_moveAnim","Animated","Value","_offset","_hoverAnim","add","_spacerIndex","_previousIndex","_nextIndex","_tappedRow","_tappedRowSize","_scrollOffset","_headerSize","_move","_hasMoved","_additionalOffset","_releaseVal","_releaseAnim","_currentEvent","_container","_spacerLayout","_size","_position","_order","componentDidUpdate","prevProps","prevState","setState","initPositions","currentPos","_containerOffset","i","length","index","onRelease","horizontal","pageX","pageY","scrollOffset","position","stop","parallel","spring","toValue","stiffness","damping","mass","useNativeDriver","start","onReleaseAnimationEnd","move","onMoveBegin","data","nativeEvent","tappedPixel","setValue","getSpacerIndex","animate","scrollPercent","scrollSpeed","scrollRatio","shouldScrollUp","_containerSize","shouldScrollDown","scroll","requestAnimationFrame","scrollAmt","spacerIndex","newOffset","offset","Math","max","_flatList","scrollToOffset","animated","previousIndex","nextIndex","sizePrevious","positionPrevious","sizeNext","positionNext","_noPrevious","forceUpdate","found","nextIndexTest","sizePreviousTest","_noNext","sizeNextTest","onMoveEnd","tappedRowSave","from","to","sortedData","arrayMove","row","arr","old_index","new_index","k","push","undefined","splice","moveEnd","renderItem","item","spacerStyle","isActiveRow","isSpacerRow","firstItem","spacer","e","_spacerRef","measure","x","y","width","height","ref","layout","styles","fullOpacity","flexDirection","state","renderHoverComponent","scaleSelectionFactor","hoverComponentHorizontal","hoverComponentVertical","transform","translateX","translateY","scaleX","scaleY","renderHeaderComponent","ListHeaderComponent","keyExtractor","_panResponder","PanResponder","create","onStartShouldSetPanResponderCapture","evt","numberActiveTouches","persist","onMoveShouldSetPanResponder","gestureState","moveX","moveY","shouldSet","onPanResponderMove","event","listener","onPanResponderTerminationRequest","onPanResponderRelease","removeClippedSubviews","panHandlers","wrapper","contentOffset","defaultProps","RowItem","isActive","component","wrapperStyle","opacity","display","PureComponent","StyleSheet","left","right","bottom","top","flex"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n    YellowBox,\n    Animated,\n    FlatList,\n    View,\n    PanResponder,\n    UIManager,\n    StyleSheet,\n} from 'react-native'\n\n// Measure function triggers false positives\nYellowBox.ignoreWarnings(['Warning: isMounted(...) is deprecated']);\nUIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\n\nconst initialState = {\n    hoverComponent: null,\n    extraData: null,\n};\n\nclass DraggableFlatList extends Component {\n    _moveAnim = new Animated.Value(0);\n    _offset = new Animated.Value(0);\n    _hoverAnim = Animated.add(this._moveAnim, this._offset);\n\n    _spacerIndex = -1;\n    _previousIndex = -1;\n    _nextIndex = -1;\n\n    _tappedRow = -1;\n    _tappedRowSize = 0;\n\n    _scrollOffset = 0;\n    _containerSize;\n    _containerOffset;\n    _headerSize = 0;\n\n    _move = 0;\n    _hasMoved = false;\n    _additionalOffset = 0;\n    _releaseVal = 0;\n    _releaseAnim = null;\n\n    _currentEvent = null;\n    _container = null;\n    _spacerLayout = null;\n\n    _size = [];\n    _position = [];\n    _order = [];\n\n    constructor(props) {\n        super(props);\n\n        const { data } = this.props;\n        for (let i = 0; i < data.length; i++) {\n            this._order[i] = i;\n        }\n\n        this._panResponder = PanResponder.create({\n            onStartShouldSetPanResponderCapture: (evt, {numberActiveTouches}) => {\n                if (numberActiveTouches > 1) {\n                    return true;\n                }\n                evt.persist();\n                this._currentEvent = evt;\n                return false\n            },\n            onMoveShouldSetPanResponder: (evt, gestureState) => {\n                const { horizontal } = this.props;\n                const { moveX, moveY, numberActiveTouches } = gestureState;\n                const move = horizontal ? moveX : moveY;\n                if (numberActiveTouches > 1) {\n                    this.onRelease();\n                    return false;\n                }\n                const shouldSet = this._tappedRow > -1;\n                if (shouldSet) {\n                    this._moveAnim.setValue(move);\n                    this.animate();\n                    this._hasMoved = true\n                }\n                return shouldSet;\n            },\n            onPanResponderMove: (evt, gestureState) => {\n                if (gestureState.numberActiveTouches > 1) {\n                    this.onRelease();\n                    return;\n                }\n                Animated.event([null, { [props.horizontal ? 'moveX' : 'moveY']: this._moveAnim }], {\n                    listener: (evt, gestureState) => {\n                        const { moveX, moveY } = gestureState;\n                        const { horizontal } = this.props;\n                        this._move = horizontal ? moveX : moveY;\n                    }\n                })(evt, gestureState)\n            },\n            onPanResponderTerminationRequest: ({ nativeEvent }, gestureState) => {\n                return false;\n            },\n            onPanResponderRelease: this.onRelease\n        });\n        this.state = initialState\n    }\n\n    componentDidUpdate = (prevProps, prevState) => {\n        if (prevProps.extraData !== this.props.extraData) {\n            this.setState({ extraData: this.props.extraData })\n        }\n    };\n\n    initPositions = () => {\n        let currentPos = this._containerOffset + this._headerSize;\n        for (let i = 0; i < this._order.length; i++) {\n            const index = this._order[i];\n            if (this._size[index] > 0) {\n                this._position[index] = currentPos;\n                currentPos += this._size[index];\n                if (index === this._tappedRow) {\n                    this._position[index] = -1;\n                }\n            }\n        }\n    };\n\n    onRelease = () => {\n        if (this._currentEvent === null) return;\n        this._currentEvent = null;\n        if (this._tappedRow === -1) return;\n\n        const { horizontal } = this.props;\n        const { pageX, pageY, scrollOffset } = this._spacerLayout;\n        const position = horizontal ? pageX : pageY - this._scrollOffset + scrollOffset;\n        this._releaseVal = position - (this._containerOffset);\n        if (this._releaseAnim) this._releaseAnim.stop();\n        this._releaseAnim = Animated.parallel([\n            // after decay, in parallel:\n            Animated.spring(this._offset, {\n                toValue: 0,\n                stiffness: 5000,\n                damping: 500,\n                mass: 3,\n                useNativeDriver: true,\n            }),\n            Animated.spring(this._moveAnim, {\n                toValue: this._releaseVal,\n                stiffness: 5000,\n                damping: 500,\n                mass: 3,\n                useNativeDriver: true,\n            }),\n        ]);\n\n        this._releaseAnim.start(this.onReleaseAnimationEnd)\n    };\n\n    move = (hoverComponent, index) => {\n        const { onMoveBegin, data } = this.props;\n        if (this._releaseAnim) {\n            this._releaseAnim.stop();\n            this.onReleaseAnimationEnd();\n            return\n        }\n\n        for (let i = 0; i < data.length; i++) {\n            this._order[i] = i;\n        }\n        this.initPositions();\n\n        this._tappedRow = index;\n        this._spacerIndex = index;\n        this._nextIndex = this._spacerIndex + 1;\n        this._previousIndex = this._spacerIndex - 1;\n\n        if (this._currentEvent && this._currentEvent.nativeEvent) {\n            const { pageX, pageY } = this._currentEvent.nativeEvent;\n            const { horizontal } = this.props;\n            this._tappedRowSize = this._size[this._tappedRow];\n            const position = this._position[this._tappedRow] - this._scrollOffset;\n            this._position[this._tappedRow] = -1;\n            if (this._tappedRow === -1) {\n                return false;\n            }\n            const tappedPixel = horizontal ? pageX : pageY;\n            this._moveAnim.setValue(tappedPixel);\n            this._move = tappedPixel;\n            this._additionalOffset = position - tappedPixel - (this._containerOffset);\n            this._offset.setValue(this._additionalOffset);\n            this.getSpacerIndex(tappedPixel);\n            this.setState({\n                    hoverComponent,\n                }, () => onMoveBegin && onMoveBegin(index)\n            );\n        }\n    };\n\n    animate = () => {\n        const { scrollPercent, scrollSpeed } = this.props;\n        const scrollRatio = scrollPercent / 100;\n        if (this._tappedRow === -1) return;\n        const shouldScrollUp = this._move - this._containerOffset < (this._containerSize * scrollRatio);\n        const shouldScrollDown = this._move - this._containerOffset > (this._containerSize * (1 - scrollRatio));\n        if (shouldScrollUp) this.scroll(-scrollSpeed, this._spacerIndex);\n        else if (shouldScrollDown) this.scroll(scrollSpeed, this._spacerIndex);\n        this.getSpacerIndex(this._move);\n\n        requestAnimationFrame(this.animate)\n    };\n\n    scroll = (scrollAmt, spacerIndex) => {\n        if (spacerIndex === -1) return;\n        const newOffset = this._scrollOffset + scrollAmt;\n        const offset = Math.max(0, newOffset);\n        this._flatList.scrollToOffset({ offset, animated: false })\n    };\n\n    getSpacerIndex = (move) => {\n        const { data } = this.props;\n        const spacerIndex = this._order[this._spacerIndex];\n        const previousIndex = this._order[this._previousIndex];\n        const nextIndex = this._order[this._nextIndex];\n\n        const sizePrevious = this._size[previousIndex];\n        const positionPrevious = this._position[previousIndex];\n        const sizeNext = this._size[nextIndex];\n        const positionNext = this._position[nextIndex];\n\n        if (!sizePrevious || sizePrevious <= 0 || !positionPrevious || positionPrevious <= 0) {\n            this._previousIndex = this._previousIndex - 1;\n            if (this._previousIndex < 0) {\n                this._previousIndex = this._spacerIndex - 1;\n                if (!this._noPrevious) {\n                    this._noPrevious = true;\n                    this.forceUpdate();\n                }\n            }\n        } else {\n            if (positionPrevious >= 0) {\n                this._noPrevious = false;\n                if (move + this._scrollOffset < (positionPrevious + (sizePrevious / 2))) {\n\n                    this._order[this._spacerIndex] = previousIndex;\n                    this._order[this._previousIndex] = spacerIndex;\n\n                    this._spacerIndex = this._previousIndex;\n                    this._previousIndex = this._spacerIndex - 1;\n                    this._nextIndex = this._previousIndex + 1;\n\n                    let found = false;\n                    for (let i = this._previousIndex; i >= 0; i--) {\n                        const nextIndexTest = this._order[i];\n                        const sizePreviousTest = this._size[nextIndexTest];\n                        if (sizePreviousTest > 0 && nextIndexTest !== this._tappedRow) {\n                            found = true;\n                        }\n                    }\n                    this._noNext = false;\n                    this._noPrevious = !found;\n                    this.forceUpdate();\n                    return;\n                }\n            }\n        }\n\n        if (!sizeNext || sizeNext <= 0 || !positionNext || positionNext <= 0) {\n            this._nextIndex = this._nextIndex + 1;\n            if (this._nextIndex >= data.length) {\n                this._nextIndex = this._spacerIndex + 1;\n                if (!this._noNext) {\n                    this._noNext = true;\n                    this.forceUpdate();\n                }\n            }\n        } else {\n            if (positionNext >= 0) {\n                this._noNext = false;\n                if (move + this._scrollOffset > (positionNext + (sizeNext / 2))) {\n\n                    this._order[this._spacerIndex] = nextIndex;\n                    this._order[this._nextIndex] = spacerIndex;\n                    this._spacerIndex = this._nextIndex;\n                    this._nextIndex = this._spacerIndex + 1;\n                    this._previousIndex = this._nextIndex - 1;\n\n                    let found = false;\n                    for (let i = this._nextIndex; i < data.length; i++) {\n                        const nextIndexTest = this._order[i];\n                        const sizeNextTest = this._size[nextIndexTest];\n                        if (sizeNextTest > 0 && nextIndexTest !== this._tappedRow) {\n                            found = true;\n                        }\n                    }\n                    this._noPrevious = false;\n                    this._noNext = !found;\n                    this.forceUpdate();\n                    return;\n                }\n            }\n        }\n    };\n\n    onReleaseAnimationEnd = () => {\n        const { data, onMoveEnd } = this.props;\n        const tappedRowSave = this._tappedRow;\n        const from = this._tappedRow;\n        const to = this._spacerIndex;\n        const sortedData = this.arrayMove([...data], from, to);\n        this._size = this.arrayMove(this._size, from, to);\n        for (let i = 0; i < data.length; i++) {\n            this._order[i] = i;\n        }\n        this._moveAnim.setValue(this._releaseVal);\n        this._spacerIndex = -1;\n        this._nextIndex = -1;\n        this._previousIndex = -1;\n        this._tappedRow = -1;\n        this._hasMoved = false;\n        this._move = 0;\n        this._releaseAnim = null;\n\n        this.initPositions();\n        this.setState(initialState, () => {\n            onMoveEnd && onMoveEnd({\n                row: data[tappedRowSave],\n                from,\n                to,\n                data: sortedData,\n            })\n        })\n    };\n\n    arrayMove = (arr, old_index, new_index) => {\n        if (new_index >= arr.length) {\n            let k = new_index - arr.length + 1;\n            while (k--) {\n                arr.push(undefined);\n            }\n        }\n        arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n        return arr;\n    };\n\n    moveEnd = () => {\n        if (!this._hasMoved) {\n            this._moveAnim.setValue(0);\n            this._spacerIndex = -1;\n            this._nextIndex = -1;\n            this._previousIndex = -1;\n            this._tappedRow = -1;\n            this._hasMoved = false;\n            this._move = 0;\n            this._releaseAnim = null;\n            this.setState(initialState);\n        }\n    };\n\n    renderItem = ({ item, index }) => {\n        const { renderItem, horizontal, data, spacerStyle } = this.props;\n        const _spacerIndex = this._tappedRow === data.length -1? this._spacerIndex-1: this._spacerIndex;\n        const isActiveRow = this._tappedRow === index;\n        const isSpacerRow = _spacerIndex === index;\n        const firstItem = this._noPrevious && this._tappedRow !== -1;\n\n        const spacer = (\n            <View\n                style={{\n                    [horizontal ? 'width' : 'height']: this._tappedRowSize\n                }}\n                onLayout={e => {\n                    this._spacerRef.measure((x, y, width, height, pageX, pageY) => {\n                        this._spacerLayout = { x, y, width, height, pageX, pageY, scrollOffset: this._scrollOffset };\n                    })\n                }}\n                ref={(ref) => { this._spacerRef = ref; }}>\n                <View style={spacerStyle} />\n            </View>\n        );\n\n        return (\n            <View\n                onLayout={e => {\n                    if (index !== this._tappedRow) {\n                        this._size[index] = e.nativeEvent.layout[horizontal ? 'width' : 'height'] - (((firstItem && index === 0) || (!firstItem && isSpacerRow))? this._tappedRowSize: 0);\n                        this.initPositions();\n                    }\n                }}\n                style={[styles.fullOpacity, { flexDirection: horizontal ? 'row' : 'column' }]} >\n                {\n                    (firstItem && index === 0)? ( spacer ): null\n                }\n                <RowItem\n                    horizontal={horizontal}\n                    index={index}\n                    isActiveRow={isActiveRow}\n                    renderItem={renderItem}\n                    item={item}\n                    move={this.move}\n                    moveEnd={this.moveEnd}\n                    extraData={this.state.extraData}\n                />\n                {\n                    (!firstItem && isSpacerRow)? ( spacer ): null\n                }\n            </View>\n        )\n    };\n\n    renderHoverComponent = () => {\n        const { hoverComponent } = this.state;\n        const { horizontal, scaleSelectionFactor } = this.props;\n        return !!hoverComponent && (\n            <Animated.View style={[\n                horizontal ? styles.hoverComponentHorizontal : styles.hoverComponentVertical,\n                {\n                    transform: [\n                        horizontal ? { translateX: this._hoverAnim } : { translateY: this._hoverAnim },\n                        { scaleX: scaleSelectionFactor },\n                        { scaleY: scaleSelectionFactor }\n                    ]\n                }\n            ]}>\n                {hoverComponent}\n            </Animated.View>\n        )\n    };\n\n    renderHeaderComponent = () => {\n        const { ListHeaderComponent, horizontal } = this.props;\n        return !!ListHeaderComponent && (\n            <View\n                onLayout={e => {\n                    this._headerSize = e.nativeEvent.layout[horizontal ? 'width' : 'height'];\n                }}>\n                <ListHeaderComponent />\n            </View>\n        )\n    };\n\n    keyExtractor = (item, index) => `sortable-flatlist-item-${index}`;\n\n    render() {\n        const { horizontal, keyExtractor, removeClippedSubviews } = this.props;\n\n        return (\n            <View\n                onLayout={e => {\n                    this._container.measure((x, y, width, height, pageX, pageY) => {\n                        this._containerOffset = horizontal ? pageX : pageY;\n                        this._containerSize = horizontal ? width : height;\n                        this.initPositions();\n                    })\n                }}\n                ref={(ref) => {\n                    this._container = ref;\n                }}\n                collapsable={false}\n                {...this._panResponder.panHandlers}\n                style={styles.wrapper}>\n                <FlatList\n                    {...this.props}\n                    ListHeaderComponent={this.renderHeaderComponent}\n                    removeClippedSubviews={removeClippedSubviews}\n                    scrollEnabled={this._tappedRow === -1}\n                    ref={ref => this._flatList = ref}\n                    renderItem={this.renderItem}\n                    extraData={this.state}\n                    keyExtractor={keyExtractor || this.keyExtractor}\n                    onScroll={({ nativeEvent }) => {\n                        this._scrollOffset = nativeEvent.contentOffset[horizontal ? 'x' : 'y'];\n                    } }\n                    scrollEventThrottle={16}\n                />\n                {this.renderHoverComponent()}\n            </View>\n        )\n    }\n}\n\nexport default DraggableFlatList\n\nDraggableFlatList.defaultProps = {\n    scrollPercent: 5,\n    scrollSpeed: 10,\n    scaleSelectionFactor: 0.95,\n    removeClippedSubviews: false\n};\n\nclass RowItem extends React.PureComponent {\n\n    move = () => {\n        const { move, moveEnd, renderItem, item, index } = this.props;\n        const hoverComponent = renderItem({ isActive: true, item, index, move: () => null, moveEnd });\n        move(hoverComponent, index)\n    };\n\n    render() {\n        const { moveEnd, isActiveRow, horizontal, renderItem, item, index } = this.props;\n        const component = renderItem({\n            isActive: false,\n            item,\n            index,\n            move: this.move,\n            moveEnd,\n        });\n        let wrapperStyle = { opacity: 1 };\n        if (isActiveRow) wrapperStyle = { display: 'none' };\n\n        // Rendering the final row requires padding to be applied at the bottom\n        return (\n            <View collapsable={false} style={{ opacity: 1, flexDirection: horizontal ? 'row' : 'column' }}>\n                <View style={wrapperStyle}>\n                    {component}\n                </View>\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    hoverComponentVertical: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n    },\n    hoverComponentHorizontal: {\n        position: 'absolute',\n        bottom: 0,\n        top: 0,\n    },\n    wrapper: { flex: 1, opacity: 1 },\n    fullOpacity: { opacity: 1 }\n});\n"]},"metadata":{},"sourceType":"module"}