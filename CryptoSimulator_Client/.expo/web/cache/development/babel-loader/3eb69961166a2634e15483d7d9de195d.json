{"ast":null,"code":"import 'react-native-gesture-handler';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useState, useEffect } from 'react';\nimport { useFonts, Poppins_300Light, Poppins_400Regular, Poppins_500Medium, Poppins_600SemiBold } from '@expo-google-fonts/poppins';\nimport { AppLoading } from 'expo';\nimport * as firebase from 'firebase';\nimport \"firebase/functions\";\nimport { AreaChart, Grid, XAxis, YAxis } from 'react-native-svg-charts';\nimport * as shape from 'd3-shape';\nimport { Defs, LinearGradient, Stop, Path, G, Line, Circle } from 'react-native-svg';","map":{"version":3,"sources":["/Users/francescomontanaro/Desktop/UniversitaÌ€/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/Predictions.js"],"names":["React","useState","useEffect","useFonts","Poppins_300Light","Poppins_400Regular","Poppins_500Medium","Poppins_600SemiBold","AppLoading","firebase","AreaChart","Grid","XAxis","YAxis","shape","Defs","LinearGradient","Stop","Path","G","Line","Circle"],"mappings":"AAAA,OAAO,8BAAP;;;;;AAEA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAASC,QAAT,EAAmBC,gBAAnB,EAAqCC,kBAArC,EAAyDC,iBAAzD,EAA4EC,mBAA5E,QAAsG,4BAAtG;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAO,oBAAP;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,KAAjC,QAA6C,yBAA7C;AACA,OAAO,KAAKC,KAAZ,MAAuB,UAAvB;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,IAA/B,EAAqCC,IAArC,EAA2CC,CAA3C,EAA8CC,IAA9C,EAAoDC,MAApD,QAAkE,kBAAlE","sourcesContent":["import 'react-native-gesture-handler';\nimport { StyleSheet, Text, View, ScrollView } from 'react-native';\nimport React, {useState,useEffect} from 'react';\nimport { useFonts, Poppins_300Light, Poppins_400Regular, Poppins_500Medium, Poppins_600SemiBold} from '@expo-google-fonts/poppins';\nimport { AppLoading } from 'expo';\nimport * as firebase from 'firebase'\nimport \"firebase/functions\";\nimport { AreaChart, Grid, XAxis, YAxis} from 'react-native-svg-charts'\nimport * as shape from 'd3-shape'\nimport { Defs, LinearGradient, Stop, Path, G, Line, Circle } from 'react-native-svg'\n\n/*\nexport default function Predictions() {\n  const [loading, setLoading] = useState(true);\n  const [cryptoData, setCryptoData] = useState({});\n  let [fontsLoaded] = useFonts({\n    Poppins_300Light,\n    Poppins_400Regular,\n    Poppins_500Medium,\n    Poppins_600SemiBold\n  });\n\n  useEffect(()=>{\n    if(loading && !fontsLoaded){\n    firebase.functions().httpsCallable('getCryptoData')({asset: 'bitcoin', start: '2020-01-01', end: '2020-02-01', interval: '1d'}).then(response =>{\n      if(response.data.statusCode == 200){\n        setCryptoData(response.data.body);\n        setLoading(false);\n      }\n      else{\n        console.error(response.data.body);\n      }\n    }).catch(error =>{\n      console.error(error);\n    })\n  }},[])\n\n  if (!fontsLoaded) {\n    return <AppLoading/>;\n  }\n  else{\n    if(!loading){\n      let data = [];\n      (cryptoData.values).forEach(sample =>{\n        data.push(sample[4]);\n      })\n\n      const axesSvg = { fontSize: 10, fill: 'grey', fontFamily:  'Poppins_400Regular'};\n\n      const ChartLine = ({ line }) => (\n        <Path\n            key={'line'}\n            d={line}\n            stroke={'rgb(41, 114, 255)'}\n            fill={'none'}\n        />\n      )\n    \n      const Gradient = ({ index }) => (\n        <Defs key={index}>\n            <LinearGradient id={'gradient'} x1={'0%'} y1={'0%'} x2={'0%'} y2={'100%'}>\n                <Stop offset={'0%'} stopColor={'rgb(41, 114, 255)'} stopOpacity={0.2}/>\n                <Stop offset={'28%'} stopColor={'rgb(41, 114, 255)'} stopOpacity={0}/>\n            </LinearGradient>\n        </Defs>\n      )\n\n    return (\n      <View style={styles.container}>\n        <View style={styles.chartContainer}>\n          <Text style={styles.cryptoSymbol}>{cryptoData.symbol}</Text>\n          <Text style={styles.cryptoName}>{cryptoData.name}</Text>\n\n          <View style={{ height: 120, flexDirection: 'row', marginBottom: 15, marginTop: 15 }}>\n              <View style={{ flex: 1, marginLeft: 10 }}>\n                <AreaChart\n                  style={{ height: 120 }}\n                  data={data}\n                  contentInset={{ top: 10, bottom: 10 }}\n                  curve={shape.curveNatural}\n                  svg={{ fill: 'url(#gradient)' }}\n                  >\n                  <ChartLine/>\n                  <Gradient/>\n                </AreaChart>\n              </View>\n          </View>\n\n          <View style={{flex: 1, alignItems: 'center', marginTop: 20}}>\n            <View style={styles.buttonsContainer}>\n            <Text style={styles.buttonText}>\n              1D\n            </Text>\n            <Text style={styles.buttonText}>\n              1W\n            </Text>\n            <Text style={styles.buttonText}>\n              1M\n            </Text>\n            <Text style={styles.buttonText}>\n              1Y\n            </Text>\n            <Text style={styles.buttonText}>\n              ALL\n            </Text>\n            </View>\n          </View>\n        </View>\n      </View>\n    );\n    }\n    else{\n      return(\n        <View style={styles.container}>\n          <Text style={styles.text}>\n              LOADING...\n          </Text>\n        </View>\n      );\n    }\n  }\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex:1,\n    backgroundColor: '#e9f0ff',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    paddingTop: 30\n  },\n  chartContainer: {\n    backgroundColor: '#ffffff',\n    width: '90%',\n    borderRadius: 20,\n    padding: 20,\n    textAlign: 'left',\n    marginBottom: 20\n  },\n  cryptoSymbol: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 25,\n    color: '#000000'\n  },\n  cryptoName: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 20,\n    color: '#000000'\n  },\n  text: {\n    fontFamily: 'Poppins_600SemiBold',\n    fontSize: 30,\n    color: '#000000'\n  },\n  buttonsContainer: {\n    width: '80%', \n    flexDirection: 'row', \n    justifyContent: 'space-between'\n  },\n  buttonText: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 12,\n    color: '#000000'\n  }\n});*/"]},"metadata":{},"sourceType":"module"}