{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"/Users/francescomontanaro/Desktop/Universita\\u0300/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/Predictions.js\",\n    _this = this;\n\nimport 'react-native-gesture-handler';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport React, { useState, useEffect } from 'react';\nimport { useFonts, Poppins_300Light, Poppins_400Regular, Poppins_500Medium, Poppins_600SemiBold } from '@expo-google-fonts/poppins';\nimport { AppLoading } from 'expo';\nimport * as firebase from 'firebase';\nimport \"firebase/functions\";\nimport { AreaChart } from 'react-native-svg-charts';\nimport * as shape from 'd3-shape';\nimport { Defs, LinearGradient, Stop, Path, G, Line, Circle } from 'react-native-svg';\nexport default function Predictions() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cryptoData = _useState4[0],\n      setCryptoData = _useState4[1];\n\n  var _useFonts = useFonts({\n    Poppins_300Light: Poppins_300Light,\n    Poppins_400Regular: Poppins_400Regular,\n    Poppins_500Medium: Poppins_500Medium,\n    Poppins_600SemiBold: Poppins_600SemiBold\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  var endDate = new Date();\n  endDate = endDate.getFullYear() + \"-\" + (endDate.getMonth() + 1) + \"-\" + endDate.getDate();\n  var startDate = new Date(new Date().getTime() - 5 * 365 * 24 * 60 * 60 * 1000);\n  startDate = startDate.getFullYear() + \"-\" + (startDate.getMonth() + 1) + \"-\" + startDate.getDate();\n  useEffect(function () {\n    if (loading && !fontsLoaded) {\n      firebase.functions().httpsCallable('getCryptoData')({\n        asset: 'bitcoin',\n        start: startDate,\n        end: endDate,\n        interval: '1d'\n      }).then(function (response) {\n        if (response.data.statusCode == 200) {\n          setCryptoData(response.data.body);\n          setLoading(false);\n        } else {\n          console.error(response.data.body);\n        }\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, []);\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 12\n      }\n    });\n  } else {\n    if (!loading) {\n      var data = [];\n      cryptoData.values.forEach(function (sample) {\n        data.push([sample[0], sample[4]]);\n      });\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, React.createElement(Chart, {\n        name: cryptoData.name,\n        symbol: cryptoData.symbol,\n        data: data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }));\n    } else {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }, \"LOADING...\"));\n    }\n  }\n}\n;\n\nvar Chart = function Chart(props) {\n  var allData = props.data;\n\n  var _useState5 = useState(allData.filter(function (sample) {\n    return sample[0] >= new Date().getTime() - 30 * 24 * 60 * 60 * 1000;\n  })),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  var _useState7 = useState(-1),\n      _useState8 = _slicedToArray(_useState7, 2),\n      swipeIndex = _useState8[0],\n      setSwipeIndex = _useState8[1];\n\n  var _useState9 = useState([0, 1, 0, 0, 0]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      period = _useState10[0],\n      setPeriod = _useState10[1];\n\n  var chartWidth;\n  var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  var months = [\"Gen\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  var ChartLine = function ChartLine(_ref) {\n    var line = _ref.line;\n    return React.createElement(Path, {\n      key: 'line',\n      d: line,\n      stroke: 'rgb(41, 114, 255)',\n      fill: 'none',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }\n    });\n  };\n\n  var Gradient = function Gradient(_ref2) {\n    var index = _ref2.index;\n    return React.createElement(Defs, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }\n    }, React.createElement(LinearGradient, {\n      id: 'gradient',\n      x1: '0%',\n      y1: '0%',\n      x2: '0%',\n      y2: '100%',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, React.createElement(Stop, {\n      offset: '0%',\n      stopColor: 'rgb(41, 114, 255)',\n      stopOpacity: 0.2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }), React.createElement(Stop, {\n      offset: '28%',\n      stopColor: 'rgb(41, 114, 255)',\n      stopOpacity: 0,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  var Tooltip = function Tooltip(_ref3) {\n    var x = _ref3.x,\n        y = _ref3.y;\n    return swipeIndex >= 0 && swipeIndex <= data.length ? React.createElement(G, {\n      x: x(swipeIndex) - 75 / 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, React.createElement(G, {\n      x: 75 / 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, React.createElement(Line, {\n      y1: 120,\n      y2: 0,\n      stroke: 'rgba(41, 114, 255, 0.7)',\n      strokeWidth: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }), React.createElement(Circle, {\n      cy: y(data[swipeIndex][1]),\n      r: 4,\n      fill: 'rgb(41, 114, 255)',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }))) : null;\n  };\n\n  var PriceViewer = function PriceViewer() {\n    return swipeIndex >= 0 && swipeIndex <= data.length ? React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.currentPrice,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, data[swipeIndex][1].toFixed(2) + \"$\"), React.createElement(Text, {\n      style: styles.currentDate,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, getDate(data[swipeIndex][0]))) : null;\n  };\n\n  var panResponder = React.useRef(PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n      return true;\n    },\n    onPanResponderGrant: function onPanResponderGrant(evt) {\n      if (evt.nativeEvent.locationX >= 0 && evt.nativeEvent.locationX <= chartWidth) {\n        var index = Math.floor(evt.nativeEvent.locationX / chartWidth * data.length);\n        setSwipeIndex(index);\n      }\n    },\n    onPanResponderMove: function onPanResponderMove(evt) {\n      if (evt.nativeEvent.locationX >= 0 && evt.nativeEvent.locationX <= chartWidth) {\n        var index = Math.floor(evt.nativeEvent.locationX / chartWidth * data.length);\n        setSwipeIndex(index);\n      }\n    },\n    onPanResponderRelease: function onPanResponderRelease() {\n      setSwipeIndex(-1);\n    }\n  })).current;\n\n  function buttonCLicked(index) {\n    var newPeriod = [0, 0, 0, 0, 0];\n    newPeriod[index] = 1;\n    setPeriod(newPeriod);\n    var currentDate = new Date().getTime();\n\n    if (index == 0) {\n      var end = currentDate - 7 * 24 * 60 * 60 * 1000;\n      var newData = allData.filter(function (sample) {\n        return sample[0] >= end;\n      });\n      setData(newData);\n    } else if (index == 1) {\n      var end = currentDate - 30 * 24 * 60 * 60 * 1000;\n      var newData = allData.filter(function (sample) {\n        return sample[0] >= end;\n      });\n      setData(newData);\n    } else if (index == 2) {\n      var end = currentDate - 90 * 24 * 60 * 60 * 1000;\n      var newData = allData.filter(function (sample) {\n        return sample[0] >= end;\n      });\n      setData(newData);\n    } else if (index == 3) {\n      var end = currentDate - 365 * 24 * 60 * 60 * 1000;\n      var newData = allData.filter(function (sample) {\n        return sample[0] >= end;\n      });\n      setData(newData);\n    } else if (index == 4) {\n      setData(allData);\n    }\n  }\n\n  function getDate(timestamp) {\n    var date = new Date(timestamp);\n    var textDate = days[date.getDay()] + \" \" + date.getDate() + \" \" + months[date.getMonth()] + \" \" + date.getFullYear();\n    return textDate;\n  }\n\n  return React.createElement(View, {\n    style: styles.chartContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      textAlign: 'left'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.cryptoSymbol,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, props.symbol), React.createElement(Text, {\n    style: styles.cryptoName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, props.name)), React.createElement(View, {\n    style: {\n      flex: 1,\n      height: 20,\n      textAlign: 'center',\n      marginTop: 10,\n      marginBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, React.createElement(PriceViewer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      height: 120,\n      flexDirection: 'row',\n      marginBottom: 15,\n      marginTop: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }\n  }, React.createElement(View, _extends({\n    style: {\n      flex: 1\n    }\n  }, panResponder.panHandlers, {\n    onLayout: function onLayout(event) {\n      chartWidth = event.nativeEvent.layout.width;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }), React.createElement(AreaChart, {\n    style: {\n      flex: 1,\n      height: 120\n    },\n    data: data.map(function (x) {\n      return x[1];\n    }),\n    contentInset: {\n      top: 10,\n      bottom: 10\n    },\n    curve: shape.curveNatural,\n    svg: {\n      fill: 'url(#gradient)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, React.createElement(Tooltip, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }), React.createElement(ChartLine, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }), React.createElement(Gradient, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  })))), React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      marginTop: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.buttonsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: period[0] == 1 ? [styles.button, {\n      backgroundColor: 'rgb(41, 114, 255)'\n    }] : styles.button,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      return buttonCLicked(0);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: period[0] == 1 ? [styles.buttonText, {\n      color: '#ffffff'\n    }] : styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, \"1W\")), React.createElement(View, {\n    style: period[1] == 1 ? [styles.button, {\n      backgroundColor: 'rgb(41, 114, 255)'\n    }] : styles.button,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      return buttonCLicked(1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: period[1] == 1 ? [styles.buttonText, {\n      color: '#ffffff'\n    }] : styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, \"1M\")), React.createElement(View, {\n    style: period[2] == 1 ? [styles.button, {\n      backgroundColor: 'rgb(41, 114, 255)'\n    }] : styles.button,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      return buttonCLicked(2);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: period[2] == 1 ? [styles.buttonText, {\n      color: '#ffffff'\n    }] : styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, \"3M\")), React.createElement(View, {\n    style: period[3] == 1 ? [styles.button, {\n      backgroundColor: 'rgb(41, 114, 255)'\n    }] : styles.button,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      return buttonCLicked(3);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: period[3] == 1 ? [styles.buttonText, {\n      color: '#ffffff'\n    }] : styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, \"1Y\")), React.createElement(View, {\n    style: period[4] == 1 ? [styles.button, {\n      backgroundColor: 'rgb(41, 114, 255)'\n    }] : styles.button,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      return buttonCLicked(4);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: period[4] == 1 ? [styles.buttonText, {\n      color: '#ffffff'\n    }] : styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, \"5Y\")))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#e9f0ff',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    paddingTop: 30\n  },\n  chartContainer: {\n    backgroundColor: '#ffffff',\n    width: '90%',\n    borderRadius: 20,\n    padding: 20,\n    marginBottom: 20\n  },\n  cryptoSymbol: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 25,\n    color: '#000000'\n  },\n  cryptoName: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 20,\n    color: '#000000'\n  },\n  priceContainer: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  currentPrice: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 18,\n    color: '#000000',\n    margin: 0\n  },\n  currentDate: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 12,\n    color: '#000000',\n    margin: 0\n  },\n  text: {\n    fontFamily: 'Poppins_600SemiBold',\n    fontSize: 30,\n    color: '#000000'\n  },\n  buttonsContainer: {\n    width: '80%',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  button: {\n    paddingTop: 5,\n    paddingBottom: 5,\n    paddingLeft: 10,\n    paddingRight: 10,\n    borderRadius: 30\n  },\n  buttonText: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 12,\n    color: '#000000'\n  }\n});","map":{"version":3,"sources":["/Users/francescomontanaro/Desktop/Università/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/Predictions.js"],"names":["React","useState","useEffect","useFonts","Poppins_300Light","Poppins_400Regular","Poppins_500Medium","Poppins_600SemiBold","AppLoading","firebase","AreaChart","shape","Defs","LinearGradient","Stop","Path","G","Line","Circle","Predictions","loading","setLoading","cryptoData","setCryptoData","fontsLoaded","endDate","Date","getFullYear","getMonth","getDate","startDate","getTime","functions","httpsCallable","asset","start","end","interval","then","response","data","statusCode","body","console","error","catch","values","forEach","sample","push","styles","container","name","symbol","text","Chart","props","allData","filter","setData","swipeIndex","setSwipeIndex","period","setPeriod","chartWidth","days","months","ChartLine","line","Gradient","index","Tooltip","x","y","length","PriceViewer","currentPrice","toFixed","currentDate","panResponder","useRef","PanResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","evt","nativeEvent","locationX","Math","floor","onPanResponderMove","onPanResponderRelease","current","buttonCLicked","newPeriod","newData","timestamp","date","textDate","getDay","chartContainer","flex","textAlign","cryptoSymbol","cryptoName","height","marginTop","marginBottom","flexDirection","panHandlers","event","layout","width","map","top","bottom","curveNatural","fill","alignItems","buttonsContainer","button","backgroundColor","buttonText","color","StyleSheet","justifyContent","paddingTop","borderRadius","padding","fontFamily","fontSize","priceContainer","margin","paddingBottom","paddingLeft","paddingRight"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\nimport { StyleSheet, Text, View, ScrollView, PanResponder } from 'react-native';\nimport React, {useState,useEffect} from 'react';\nimport { useFonts, Poppins_300Light, Poppins_400Regular, Poppins_500Medium, Poppins_600SemiBold} from '@expo-google-fonts/poppins';\nimport { AppLoading } from 'expo';\nimport * as firebase from 'firebase'\nimport \"firebase/functions\";\nimport { AreaChart} from 'react-native-svg-charts'\nimport * as shape from 'd3-shape'\nimport { Defs, LinearGradient, Stop, Path, G, Line, Circle} from 'react-native-svg'\n\n\nexport default function Predictions() {\n  const [loading, setLoading] = useState(true);\n  const [cryptoData, setCryptoData] = useState({});\n  let [fontsLoaded] = useFonts({\n    Poppins_300Light,\n    Poppins_400Regular,\n    Poppins_500Medium,\n    Poppins_600SemiBold\n  });\n\n  var endDate = new Date();\n  endDate = endDate.getFullYear() + \"-\" + (endDate.getMonth() + 1) + \"-\" + endDate.getDate();\n\n  var startDate = new Date((new Date()).getTime() - 5*365*24*60*60*1000);\n  startDate = startDate.getFullYear() + \"-\" + (startDate.getMonth() + 1) + \"-\" + startDate.getDate();\n\n  useEffect(()=>{\n    if(loading && !fontsLoaded){\n    firebase.functions().httpsCallable('getCryptoData')({asset: 'bitcoin', start: startDate, end: endDate, interval: '1d'}).then(response =>{\n      if(response.data.statusCode == 200){\n        setCryptoData(response.data.body);\n        setLoading(false);\n      }\n      else{\n        console.error(response.data.body);\n      }\n    }).catch(error =>{\n      console.error(error);\n    })\n  }},[])\n\n  if (!fontsLoaded) {\n    return <AppLoading/>;\n  }\n  else{\n    if(!loading){\n      let data = [];\n      (cryptoData.values).forEach(sample =>{\n        data.push([sample[0], sample[4]]);\n      })\n\n    return (\n      <View style={styles.container}>\n        <Chart name={cryptoData.name} symbol={cryptoData.symbol} data={data}></Chart>\n      </View>\n    );\n    }\n    else{\n      return(\n        <View style={styles.container}>\n          <Text style={styles.text}>\n              LOADING...\n          </Text>\n        </View>\n      );\n    }\n  }\n};\n\n\nconst Chart = (props) => {\n  const allData = props.data;\n  const [data, setData] = useState(allData.filter(sample => sample[0] >= ((new Date).getTime() - 30*24*60*60*1000)));\n  const [swipeIndex, setSwipeIndex] = useState(-1);\n  const [period, setPeriod] = useState([0,1,0,0,0]);\n  var chartWidth;\n  var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  var months = [\"Gen\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  \n  const ChartLine = ({ line }) => (\n    <Path\n        key={'line'}\n        d={line}\n        stroke={'rgb(41, 114, 255)'}\n        fill={'none'}\n    />\n  )\n\n  const Gradient = ({ index }) => (\n    <Defs key={index}>\n        <LinearGradient id={'gradient'} x1={'0%'} y1={'0%'} x2={'0%'} y2={'100%'}>\n            <Stop offset={'0%'} stopColor={'rgb(41, 114, 255)'} stopOpacity={0.2}/>\n            <Stop offset={'28%'} stopColor={'rgb(41, 114, 255)'} stopOpacity={0}/>\n        </LinearGradient>\n    </Defs>\n  )\n\n  const Tooltip = ({ x, y }) => (\n    swipeIndex >= 0 && swipeIndex <= data.length ? (\n      <G x={ x(swipeIndex) - (75 / 2) }>\n      <G x={ 75 / 2 }>\n          <Line\n            y1={ 120 }\n            y2={ 0 }\n            stroke={ 'rgba(41, 114, 255, 0.7)' }\n            strokeWidth={ 1 }\n          />\n          <Circle\n              cy={ y(data[swipeIndex][1])}\n              r={ 4 }\n              fill={ 'rgb(41, 114, 255)' }\n          />\n      </G>\n    </G>\n    ):null\n  )\n\n  const PriceViewer = () => {\n    return(\n      swipeIndex >= 0 && swipeIndex <= data.length ? (\n        <View>\n          <Text style={styles.currentPrice}>{data[swipeIndex][1].toFixed(2) + \"$\"}</Text>\n          <Text style={styles.currentDate}>{getDate(data[swipeIndex][0])}\n          </Text>\n        </View>\n      ):null\n    );\n  }\n\n  const panResponder = React.useRef(\n    PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderGrant: (evt) => {\n        if(evt.nativeEvent.locationX >= 0 && evt.nativeEvent.locationX <= chartWidth){\n          var index = Math.floor((evt.nativeEvent.locationX / chartWidth) * data.length);\n          setSwipeIndex(index);\n        }\n      },\n      onPanResponderMove: (evt) => {\n        if(evt.nativeEvent.locationX >= 0 && evt.nativeEvent.locationX <= chartWidth){\n          var index = Math.floor((evt.nativeEvent.locationX / chartWidth) * data.length);\n          setSwipeIndex(index);\n        }\n      },\n      onPanResponderRelease: () => {\n        setSwipeIndex(-1);\n      }\n    })\n  ).current;\n\n\n  function buttonCLicked(index){\n    var newPeriod = [0,0,0,0,0];\n    newPeriod[index] = 1;\n    setPeriod(newPeriod);\n    var currentDate = (new Date()).getTime();\n    if(index == 0){\n      var end = (currentDate - 7*24*60*60*1000);\n      var newData = allData.filter(sample => sample[0] >= end);\n      setData(newData);\n    }\n    else if(index == 1){\n      var end = (currentDate - 30*24*60*60*1000);\n      var newData = allData.filter(sample => sample[0] >= end);\n      setData(newData);\n    }\n    else if(index == 2){\n      var end = (currentDate - 90*24*60*60*1000);\n      var newData = allData.filter(sample => sample[0] >= end);\n      setData(newData);\n    }\n    else if(index == 3){\n      var end = (currentDate - 365*24*60*60*1000);\n      var newData = allData.filter(sample => sample[0] >= end);\n      setData(newData);\n    }\n    else if(index == 4){\n      setData(allData);\n    }\n  }\n\n  function getDate(timestamp){\n    var date = new Date(timestamp);\n    var textDate = days[date.getDay()] + \" \" + date.getDate() + \" \" + months[date.getMonth()] + \" \" + date.getFullYear();\n    return textDate;\n  }\n\n  return (\n    <View style={styles.chartContainer}>\n      <View style={{flex: 1, textAlign: 'left'}}>\n        <Text style={styles.cryptoSymbol}>{props.symbol}</Text>\n        <Text style={styles.cryptoName}>{props.name}</Text>\n      </View>\n\n      <View style={{flex: 1, height: 20, textAlign: 'center', marginTop: 10, marginBottom: 20}}>\n        <PriceViewer></PriceViewer>\n      </View>\n\n      <View style={{ height: 120, flexDirection: 'row', marginBottom: 15, marginTop: 15 }}>\n          <View style={{ flex: 1}} {...panResponder.panHandlers} onLayout={(event) => {chartWidth = event.nativeEvent.layout.width}}>\n            <AreaChart\n              style={{ flex:1, height: 120}}\n              data={data.map(x => x[1])}\n              contentInset={{ top: 10, bottom: 10 }}\n              curve={shape.curveNatural}\n              svg={{ fill: 'url(#gradient)' }}\n              >\n              <Tooltip/>\n              <ChartLine/>\n              <Gradient/>\n            </AreaChart>\n          </View>\n      </View>\n\n      <View style={{flex: 1, alignItems: 'center', marginTop: 20}}>\n        <View style={styles.buttonsContainer}>\n          <View style={period[0] == 1 ? [styles.button, {backgroundColor: 'rgb(41, 114, 255)'}]:styles.button} onStartShouldSetResponder={() => buttonCLicked(0)}>\n            <Text style={period[0] == 1 ? [styles.buttonText, {color: '#ffffff'}]:styles.buttonText}>\n              1W\n            </Text>\n          </View>\n          <View style={period[1] == 1 ? [styles.button, {backgroundColor: 'rgb(41, 114, 255)'}]:styles.button} onStartShouldSetResponder={() => buttonCLicked(1)}>\n            <Text style={period[1] == 1 ? [styles.buttonText, {color: '#ffffff'}]:styles.buttonText}>\n              1M\n            </Text>\n          </View>\n          <View style={period[2] == 1 ? [styles.button, {backgroundColor: 'rgb(41, 114, 255)'}]:styles.button} onStartShouldSetResponder={() => buttonCLicked(2)}>\n            <Text style={period[2] == 1 ? [styles.buttonText, {color: '#ffffff'}]:styles.buttonText}>\n              3M\n            </Text>\n          </View>\n          <View style={period[3] == 1 ? [styles.button, {backgroundColor: 'rgb(41, 114, 255)'}]:styles.button} onStartShouldSetResponder={() => buttonCLicked(3)}>\n            <Text style={period[3] == 1 ? [styles.buttonText, {color: '#ffffff'}]:styles.buttonText}>\n              1Y\n            </Text>\n          </View>\n          <View style={period[4] == 1 ? [styles.button, {backgroundColor: 'rgb(41, 114, 255)'}]:styles.button} onStartShouldSetResponder={() => buttonCLicked(4)}>\n            <Text style={period[4] == 1 ? [styles.buttonText, {color: '#ffffff'}]:styles.buttonText}>\n              5Y\n            </Text>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n};\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex:1,\n    backgroundColor: '#e9f0ff',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    paddingTop: 30\n  },\n  chartContainer: {\n    backgroundColor: '#ffffff',\n    width: '90%',\n    borderRadius: 20,\n    padding: 20,\n    marginBottom: 20\n  },\n  cryptoSymbol: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 25,\n    color: '#000000'\n  },\n  cryptoName: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 20,\n    color: '#000000'\n  },\n  priceContainer: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  currentPrice: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 18,\n    color: '#000000',\n    margin: 0\n  },\n  currentDate: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 12,\n    color: '#000000',\n    margin: 0\n  },\n  text: {\n    fontFamily: 'Poppins_600SemiBold',\n    fontSize: 30,\n    color: '#000000'\n  },\n  buttonsContainer: {\n    width: '80%', \n    flexDirection: 'row', \n    justifyContent: 'space-between'\n  },\n  button: {\n    paddingTop: 5,\n    paddingBottom: 5,\n    paddingLeft: 10,\n    paddingRight: 10,\n    borderRadius: 30\n  },\n  buttonText: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 12,\n    color: '#000000'\n  }\n});"]},"metadata":{},"sourceType":"module"}