{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/francescomontanaro/Desktop/Universita\\u0300/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/Crypto.js\";\nimport 'react-native-gesture-handler';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useFonts, Poppins_300Light, Poppins_400Regular, Poppins_500Medium, Poppins_600SemiBold } from '@expo-google-fonts/poppins';\nimport { AppLoading } from 'expo';\nexport default function Crypto(data) {\n  var _useFonts = useFonts({\n    Poppins_300Light: Poppins_300Light,\n    Poppins_400Regular: Poppins_400Regular,\n    Poppins_500Medium: Poppins_500Medium,\n    Poppins_600SemiBold: Poppins_600SemiBold\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return React.createElement(View, {\n      style: styles.cryptoContainer,\n      onStartShouldSetResponder: function onStartShouldSetResponder() {\n        return function () {\n          return;\n        };\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      style: styles.plus,\n      source: require(\"../assets/icons/plus.png\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      style: styles.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, \"Dio cane\"));\n  }\n}\n;\nvar styles = StyleSheet.create({\n  cryptoContainer: {\n    backgroundColor: '#ffffff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 200,\n    borderRadius: 10,\n    marginTop: 10,\n    marginBottom: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.08,\n    shadowRadius: 2.22,\n    elevation: 1\n  },\n  plus: {\n    width: 50,\n    height: 50\n  },\n  text: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 22,\n    color: '#000000'\n  }\n});","map":{"version":3,"sources":["/Users/francescomontanaro/Desktop/UniversitaÌ€/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/Crypto.js"],"names":["React","useFonts","Poppins_300Light","Poppins_400Regular","Poppins_500Medium","Poppins_600SemiBold","AppLoading","Crypto","data","fontsLoaded","styles","cryptoContainer","plus","require","text","StyleSheet","create","backgroundColor","alignItems","justifyContent","height","borderRadius","marginTop","marginBottom","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","elevation","fontFamily","fontSize","color"],"mappings":";;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,QAAT,EAAmBC,gBAAnB,EAAqCC,kBAArC,EAAyDC,iBAAzD,EAA4EC,mBAA5E,QAAsG,4BAAtG;AACA,SAASC,UAAT,QAA2B,MAA3B;AAGA,eAAe,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AAAA,kBACfP,QAAQ,CAAC;AAC3BC,IAAAA,gBAAgB,EAAhBA,gBAD2B;AAE3BC,IAAAA,kBAAkB,EAAlBA,kBAF2B;AAG3BC,IAAAA,iBAAiB,EAAjBA,iBAH2B;AAI3BC,IAAAA,mBAAmB,EAAnBA;AAJ2B,GAAD,CADO;AAAA;AAAA,MAC9BI,WAD8B;;AAQnC,MAAI,CAACA,WAAL,EAAkB;AAChB,WAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAGI;AACF,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,eAApB;AAAsC,MAAA,yBAAyB,EAAE;AAAA,eAAM,YAAU;AAAE;AAAS,SAA3B;AAAA,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAED,MAAM,CAACE,IAArB;AAA2B,MAAA,MAAM,EAAEC,OAAO,4BAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACI,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADF;AAMD;AACF;AAAA;AAED,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,eAAe,EAAE;AACfM,IAAAA,eAAe,EAAE,SADF;AAEfC,IAAAA,UAAU,EAAE,QAFG;AAGfC,IAAAA,cAAc,EAAE,QAHD;AAIfC,IAAAA,MAAM,EAAE,GAJO;AAKfC,IAAAA,YAAY,EAAE,EALC;AAMfC,IAAAA,SAAS,EAAE,EANI;AAOfC,IAAAA,YAAY,EAAE,EAPC;AAQfC,IAAAA,WAAW,EAAE,MARE;AASfC,IAAAA,YAAY,EAAE;AACZC,MAAAA,KAAK,EAAE,CADK;AAEZN,MAAAA,MAAM,EAAE;AAFI,KATC;AAafO,IAAAA,aAAa,EAAE,IAbA;AAcfC,IAAAA,YAAY,EAAE,IAdC;AAefC,IAAAA,SAAS,EAAE;AAfI,GADc;AAkB/BjB,EAAAA,IAAI,EAAE;AACJc,IAAAA,KAAK,EAAE,EADH;AAEJN,IAAAA,MAAM,EAAE;AAFJ,GAlByB;AAsB/BN,EAAAA,IAAI,EAAE;AACJgB,IAAAA,UAAU,EAAE,mBADR;AAEJC,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,KAAK,EAAE;AAHH;AAtByB,CAAlB,CAAf","sourcesContent":["import 'react-native-gesture-handler';\nimport React from 'react';\nimport { StyleSheet, Text, View, Image} from 'react-native';\nimport { useFonts, Poppins_300Light, Poppins_400Regular, Poppins_500Medium, Poppins_600SemiBold} from '@expo-google-fonts/poppins';\nimport { AppLoading } from 'expo';\n\n\nexport default function Crypto(data) {\n  let [fontsLoaded] = useFonts({\n    Poppins_300Light,\n    Poppins_400Regular,\n    Poppins_500Medium,\n    Poppins_600SemiBold\n  });\n\n  if (!fontsLoaded) {\n    return <AppLoading/>;\n  }\n  else{\n    return (\n      <View style={styles.cryptoContainer}  onStartShouldSetResponder={() => function(){ return; }}>\n        <Image style={styles.plus} source={require('../assets/icons/plus.png')}></Image>\n        <Text style={styles.text}>Dio cane</Text>\n      </View>\n    );\n  }\n};\n\nconst styles = StyleSheet.create({\n  cryptoContainer: {\n    backgroundColor: '#ffffff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 200,\n    borderRadius: 10,\n    marginTop: 10,\n    marginBottom: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.08,\n    shadowRadius: 2.22,\n    elevation: 1\n  },\n  plus: {\n    width: 50,\n    height: 50\n  },\n  text: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 22,\n    color: '#000000'\n  },\n});\n"]},"metadata":{},"sourceType":"module"}