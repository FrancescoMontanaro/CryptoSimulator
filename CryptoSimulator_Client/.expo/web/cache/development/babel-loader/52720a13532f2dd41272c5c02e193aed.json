{"ast":null,"code":"var _jsxFileName = \"/Users/francescomontanaro/Desktop/Universita\\u0300/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/Statistics.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Carousel from 'react-native-snap-carousel';\nvar dimensions = Dimensions.get(\"window\");\nexport default function Simulations() {\n  var _this = this;\n\n  var carouselRef = React.useRef();\n  var carouselItems = [{\n    title: \"Bitcoin\",\n    text: \"Text 1\",\n    icon: 'https://cryptoicons.org/api/icon/btc/1000'\n  }, {\n    title: \"Ethereum\",\n    text: \"Text 2\",\n    icon: 'https://cryptoicons.org/api/icon/eth/1000'\n  }, {\n    title: \"Litecoin\",\n    text: \"Text 3\",\n    icon: 'https://cryptoicons.org/api/icon/ltc/1000'\n  }, {\n    title: \"Caradano\",\n    text: \"Text 4\",\n    icon: 'https://cryptoicons.org/api/icon/ada/1000'\n  }, {\n    title: \"Stellar\",\n    text: \"Text 5\",\n    icon: 'https://cryptoicons.org/api/icon/xlm/1000'\n  }];\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    return React.createElement(View, {\n      style: styles.predictionCard,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.titleContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, React.createElement(Image, {\n      style: styles.tinyLogo,\n      source: {\n        uri: item.icon\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }), React.createElement(Text, {\n      style: [styles.text, {\n        marginLeft: 10,\n        marginTop: 5\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, item.title)));\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: '#e9f0ff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.topBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [styles.text, {\n      fontSize: 18\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"CryptoSimulator\")), React.createElement(Carousel, {\n    ref: carouselRef,\n    data: carouselItems,\n    renderItem: renderItem,\n    sliderWidth: dimensions.width,\n    itemWidth: dimensions.width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  topBar: {\n    position: 'absolute',\n    zIndex: 200,\n    top: 0,\n    height: 60,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    width: '100%',\n    flex: 1,\n    backgroundColor: \"#fff\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 5,\n    paddingBottom: 8\n  },\n  text: {\n    fontFamily: 'Poppins_600SemiBold',\n    fontSize: 30,\n    color: '#000000'\n  },\n  titleContainer: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'flex-start'\n  },\n  tinyLogo: {\n    width: 50,\n    height: 50\n  },\n  predictionCard: {\n    backgroundColor: '#e9f0ff',\n    padding: 30,\n    height: '100%'\n  },\n  text: {\n    fontFamily: 'Poppins_600SemiBold',\n    fontSize: 30,\n    color: '#000000'\n  }\n});","map":{"version":3,"sources":["/Users/francescomontanaro/Desktop/UniversitaÌ€/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/Statistics.js"],"names":["React","Carousel","dimensions","Dimensions","get","Simulations","carouselRef","useRef","carouselItems","title","text","icon","renderItem","item","index","styles","predictionCard","titleContainer","tinyLogo","uri","marginLeft","marginTop","flex","backgroundColor","topBar","fontSize","width","StyleSheet","create","container","alignItems","justifyContent","position","zIndex","top","height","shadowColor","shadowOffset","shadowOpacity","shadowRadius","paddingBottom","fontFamily","color","flexDirection","padding"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {StyleSheet, Text, View, Dimensions, Image} from 'react-native';\nimport Carousel from 'react-native-snap-carousel';\n\nconst dimensions = Dimensions.get(\"window\");\n\nexport default function Simulations() {\n  const carouselRef = React.useRef();\n\n  const carouselItems = [\n    {\n        title:\"Bitcoin\",\n        text: \"Text 1\",\n        icon: 'https://cryptoicons.org/api/icon/btc/1000'\n    },\n    {\n        title:\"Ethereum\",\n        text: \"Text 2\",\n        icon: 'https://cryptoicons.org/api/icon/eth/1000'\n    },\n    {\n        title:\"Litecoin\",\n        text: \"Text 3\",\n        icon: 'https://cryptoicons.org/api/icon/ltc/1000'\n    },\n    {\n        title:\"Caradano\",\n        text: \"Text 4\",\n        icon: 'https://cryptoicons.org/api/icon/ada/1000'\n    },\n    {\n      title:\"Stellar\",\n      text: \"Text 5\",\n      icon: 'https://cryptoicons.org/api/icon/xlm/1000'\n  }\n  ]\n\n  const renderItem = ({item, index}) => {\n    return (\n      <View style={styles.predictionCard}>\n        <View style={styles.titleContainer}>\n          <Image style={styles.tinyLogo} source={{uri: item.icon}}/>\n          <Text style={[styles.text, {marginLeft: 10, marginTop: 5}]}>{item.title}</Text>\n        </View>\n      </View>\n    );\n  };\n\n\n  return (\n    <View style={{flex: 1, backgroundColor: '#e9f0ff'}}>\n        <View style={styles.topBar}>\n          <Text style={[styles.text, {fontSize: 18}]}>CryptoSimulator</Text>\n        </View>\n        <Carousel\n          ref={carouselRef}\n          data={carouselItems}\n          renderItem={renderItem}\n          sliderWidth={dimensions.width}\n          itemWidth={dimensions.width}\n        />\n    </View>\n/*     <View style={styles.container}>\n      <View>\n        <Carousel\n          ref={carouselRef}\n          data={carouselItems}\n          renderItem={renderItem}\n          sliderWidth={dimensions.width}\n          itemWidth={dimensions.width}\n          style={{justifyContent: 'center', backgroundColor: '#e9f0ff'}}\n        />\n      </View>\n    </View> */\n);\n}\n\nconst styles = StyleSheet.create({ \n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  topBar: {\n    position: 'absolute',\n    zIndex: 200,\n    top: 0,\n    height: 60,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    width: '100%',\n    flex: 1,\n    backgroundColor: \"#fff\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 5,\n    paddingBottom: 8\n  },\n  text: {\n    fontFamily: 'Poppins_600SemiBold',\n    fontSize: 30,\n    color: '#000000'\n  },\n  titleContainer: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'flex-start'\n  },\n  tinyLogo: {\n    width: 50,\n    height: 50,\n  },\n  predictionCard:{\n    backgroundColor: '#e9f0ff',\n    padding: 30,\n    height: '100%'\n  },\n  text: {\n    fontFamily: 'Poppins_600SemiBold',\n    fontSize: 30,\n    color: '#000000'\n  }\n})"]},"metadata":{},"sourceType":"module"}