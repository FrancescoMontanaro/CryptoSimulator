{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"/Users/francescomontanaro/Desktop/Universita\\u0300/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/Predictions.js\",\n    _this2 = this;\n\nimport 'react-native-gesture-handler';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport React, { useState, useEffect } from 'react';\nimport { useFonts, Poppins_300Light, Poppins_400Regular, Poppins_500Medium, Poppins_600SemiBold } from '@expo-google-fonts/poppins';\nimport { AppLoading } from 'expo';\nimport * as firebase from 'firebase';\nimport \"firebase/functions\";\nimport { AreaChart } from 'react-native-svg-charts';\nimport * as shape from 'd3-shape';\nimport { Defs, LinearGradient, Stop, Path } from 'react-native-svg';\nimport Tooltip from \"./Tooltip\";\nimport PriceViewer from \"./PriceViewer\";\nimport TouchHandler from \"./TouchHandler\";\nexport default function Predictions() {\n  var _this = this;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cryptoData = _useState4[0],\n      setCryptoData = _useState4[1];\n\n  var _useFonts = useFonts({\n    Poppins_300Light: Poppins_300Light,\n    Poppins_400Regular: Poppins_400Regular,\n    Poppins_500Medium: Poppins_500Medium,\n    Poppins_600SemiBold: Poppins_600SemiBold\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  var endDate = new Date();\n  endDate = endDate.getFullYear() + \"-\" + (endDate.getMonth() + 1) + \"-\" + endDate.getDate();\n  var startDate = new Date(new Date().getTime() - 5 * 365 * 24 * 60 * 60 * 1000);\n  startDate = startDate.getFullYear() + \"-\" + (startDate.getMonth() + 1) + \"-\" + startDate.getDate();\n  useEffect(function () {\n    if (loading && !fontsLoaded) {\n      firebase.functions().httpsCallable('getCryptoData')({\n        assets: ['BTC'],\n        start: startDate,\n        end: endDate,\n        interval: '1d'\n      }).then(function (response) {\n        if (response.data.statusCode == 200) {\n          setCryptoData(response.data.body);\n          setLoading(false);\n        } else {\n          console.error(response.data.body);\n        }\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, []);\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }\n    });\n  } else {\n    if (!loading) {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }\n      }, cryptoData.map(function (crypto) {\n        return React.createElement(Chart, {\n          name: crypto.name,\n          symbol: crypto.symbol,\n          data: crypto.values.map(function (x) {\n            return [x[0], x[4]];\n          }),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 35\n          }\n        });\n      }));\n    } else {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, \"LOADING...\"));\n    }\n  }\n}\n;\n\nvar Chart = function Chart(props) {\n  var allData = props.data;\n\n  var _useState5 = useState(allData.filter(function (sample) {\n    return sample[0] >= new Date().getTime() - 30 * 24 * 60 * 60 * 1000;\n  })),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  var _useState7 = useState(-1),\n      _useState8 = _slicedToArray(_useState7, 2),\n      swipeIndex = _useState8[0],\n      setSwipeIndex = _useState8[1];\n\n  var _useState9 = useState([0, 1, 0, 0, 0]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      period = _useState10[0],\n      setPeriod = _useState10[1];\n\n  var ChartLine = function ChartLine(_ref) {\n    var line = _ref.line;\n    return React.createElement(Path, {\n      key: 'line',\n      d: line,\n      stroke: 'rgb(41, 114, 255)',\n      fill: 'none',\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }\n    });\n  };\n\n  var Gradient = function Gradient(_ref2) {\n    var index = _ref2.index;\n    return React.createElement(Defs, {\n      key: index,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }\n    }, React.createElement(LinearGradient, {\n      id: 'gradient',\n      x1: '0%',\n      y1: '0%',\n      x2: '0%',\n      y2: '100%',\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, React.createElement(Stop, {\n      offset: '0%',\n      stopColor: 'rgb(41, 114, 255)',\n      stopOpacity: 0.2,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }), React.createElement(Stop, {\n      offset: '28%',\n      stopColor: 'rgb(41, 114, 255)',\n      stopOpacity: 0,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  function buttonCLicked(index) {\n    var newPeriod = [0, 0, 0, 0, 0];\n    newPeriod[index] = 1;\n    setPeriod(newPeriod);\n    var currentDate = new Date().getTime();\n    var newData;\n\n    if (index == 0) {\n      var end = currentDate - 7 * 24 * 60 * 60 * 1000;\n      newData = allData.filter(function (sample) {\n        return sample[0] >= end;\n      });\n    } else if (index == 1) {\n      var end = currentDate - 30 * 24 * 60 * 60 * 1000;\n      newData = allData.filter(function (sample) {\n        return sample[0] >= end;\n      });\n    } else if (index == 2) {\n      var end = currentDate - 90 * 24 * 60 * 60 * 1000;\n      newData = allData.filter(function (sample) {\n        return sample[0] >= end;\n      });\n    } else if (index == 3) {\n      var end = currentDate - 365 * 24 * 60 * 60 * 1000;\n      newData = allData.filter(function (sample) {\n        return sample[0] >= end;\n      });\n    } else if (index == 4) {\n      newData = allData;\n    }\n\n    setData(newData);\n  }\n\n  return React.createElement(View, {\n    style: styles.chartContainer,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      textAlign: 'left'\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.cryptoSymbol,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, props.symbol), React.createElement(Text, {\n    style: styles.cryptoName,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, props.name)), React.createElement(View, {\n    style: {\n      flex: 1,\n      height: 20,\n      textAlign: 'center',\n      marginTop: 10,\n      marginBottom: 20\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, React.createElement(PriceViewer, {\n    swipeIndex: swipeIndex,\n    data: data,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      height: 120,\n      flexDirection: 'row',\n      marginBottom: 15,\n      marginTop: 15\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchHandler, {\n    chart: React.createElement(AreaChart, {\n      style: {\n        flex: 1,\n        height: 120\n      },\n      data: data.map(function (x) {\n        return x[1];\n      }),\n      contentInset: {\n        top: 10,\n        bottom: 10\n      },\n      curve: shape.curveNatural,\n      svg: {\n        fill: 'url(#gradient)'\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, React.createElement(Tooltip, {\n      swipeIndex: swipeIndex,\n      data: data,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }), React.createElement(ChartLine, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }), React.createElement(Gradient, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    })),\n    setIndex: foo,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      marginTop: 20\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.buttonsContainer,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: period[0] == 1 ? [styles.button, {\n      backgroundColor: 'rgb(41, 114, 255)'\n    }] : styles.button,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      return buttonCLicked(0);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: period[0] == 1 ? [styles.buttonText, {\n      color: '#ffffff'\n    }] : styles.buttonText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, \"1W\")), React.createElement(View, {\n    style: period[1] == 1 ? [styles.button, {\n      backgroundColor: 'rgb(41, 114, 255)'\n    }] : styles.button,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      return buttonCLicked(1);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: period[1] == 1 ? [styles.buttonText, {\n      color: '#ffffff'\n    }] : styles.buttonText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"1M\")), React.createElement(View, {\n    style: period[2] == 1 ? [styles.button, {\n      backgroundColor: 'rgb(41, 114, 255)'\n    }] : styles.button,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      return buttonCLicked(2);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: period[2] == 1 ? [styles.buttonText, {\n      color: '#ffffff'\n    }] : styles.buttonText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, \"3M\")), React.createElement(View, {\n    style: period[3] == 1 ? [styles.button, {\n      backgroundColor: 'rgb(41, 114, 255)'\n    }] : styles.button,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      return buttonCLicked(3);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: period[3] == 1 ? [styles.buttonText, {\n      color: '#ffffff'\n    }] : styles.buttonText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, \"1Y\")), React.createElement(View, {\n    style: period[4] == 1 ? [styles.button, {\n      backgroundColor: 'rgb(41, 114, 255)'\n    }] : styles.button,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      return buttonCLicked(4);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: period[4] == 1 ? [styles.buttonText, {\n      color: '#ffffff'\n    }] : styles.buttonText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, \"5Y\")))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#e9f0ff',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    paddingTop: 30\n  },\n  chartContainer: {\n    backgroundColor: '#ffffff',\n    width: '90%',\n    borderRadius: 20,\n    padding: 20,\n    marginBottom: 20\n  },\n  cryptoSymbol: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 25,\n    color: '#000000'\n  },\n  cryptoName: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 20,\n    color: '#000000'\n  },\n  currentPrice: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 18,\n    color: '#000000',\n    margin: 0\n  },\n  currentDate: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 12,\n    color: '#000000',\n    margin: 0\n  },\n  text: {\n    fontFamily: 'Poppins_600SemiBold',\n    fontSize: 30,\n    color: '#000000'\n  },\n  buttonsContainer: {\n    width: '80%',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  button: {\n    paddingTop: 5,\n    paddingBottom: 5,\n    paddingLeft: 10,\n    paddingRight: 10,\n    borderRadius: 30\n  },\n  buttonText: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 12,\n    color: '#000000'\n  }\n});","map":{"version":3,"sources":["/Users/francescomontanaro/Desktop/Università/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/Predictions.js"],"names":["React","useState","useEffect","useFonts","Poppins_300Light","Poppins_400Regular","Poppins_500Medium","Poppins_600SemiBold","AppLoading","firebase","AreaChart","shape","Defs","LinearGradient","Stop","Path","Tooltip","PriceViewer","TouchHandler","Predictions","loading","setLoading","cryptoData","setCryptoData","fontsLoaded","endDate","Date","getFullYear","getMonth","getDate","startDate","getTime","functions","httpsCallable","assets","start","end","interval","then","response","data","statusCode","body","console","error","catch","styles","container","map","crypto","name","symbol","values","x","text","Chart","props","allData","filter","sample","setData","swipeIndex","setSwipeIndex","period","setPeriod","ChartLine","line","Gradient","index","buttonCLicked","newPeriod","currentDate","newData","chartContainer","flex","textAlign","cryptoSymbol","cryptoName","height","marginTop","marginBottom","flexDirection","top","bottom","curveNatural","fill","foo","alignItems","buttonsContainer","button","backgroundColor","buttonText","color","StyleSheet","create","justifyContent","paddingTop","width","borderRadius","padding","fontFamily","fontSize","currentPrice","margin","paddingBottom","paddingLeft","paddingRight"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\nimport { StyleSheet, Text, View, PanResponder } from 'react-native';\nimport React, {useState,useEffect} from 'react';\nimport { useFonts, Poppins_300Light, Poppins_400Regular, Poppins_500Medium, Poppins_600SemiBold} from '@expo-google-fonts/poppins';\nimport { AppLoading } from 'expo';\nimport * as firebase from 'firebase'\nimport \"firebase/functions\";\nimport { AreaChart} from 'react-native-svg-charts'\nimport * as shape from 'd3-shape'\nimport { Defs, LinearGradient, Stop, Path} from 'react-native-svg'\nimport Tooltip from './Tooltip'\nimport PriceViewer from './PriceViewer'\nimport TouchHandler from './TouchHandler'\n\n\nexport default function Predictions() {\n  const [loading, setLoading] = useState(true);\n  const [cryptoData, setCryptoData] = useState([]);\n  let [fontsLoaded] = useFonts({\n    Poppins_300Light,\n    Poppins_400Regular,\n    Poppins_500Medium,\n    Poppins_600SemiBold\n  });\n\n  var endDate = new Date();\n  endDate = endDate.getFullYear() + \"-\" + (endDate.getMonth() + 1) + \"-\" + endDate.getDate();\n\n  var startDate = new Date((new Date()).getTime() - 5*365*24*60*60*1000);\n  startDate = startDate.getFullYear() + \"-\" + (startDate.getMonth() + 1) + \"-\" + startDate.getDate();\n\n  useEffect(()=>{\n    if(loading && !fontsLoaded){\n    firebase.functions().httpsCallable('getCryptoData')({assets: ['BTC'], start: startDate, end: endDate, interval: '1d'}).then(response =>{\n      if(response.data.statusCode == 200){\n        setCryptoData(response.data.body);\n        setLoading(false);\n      }\n      else{\n        console.error(response.data.body);\n      }\n    }).catch(error =>{\n      console.error(error);\n    })\n  }},[])\n\n  if (!fontsLoaded) {\n    return <AppLoading/>;\n  }\n  else{\n    if(!loading){\n    return (\n      <View style={styles.container}>\n        {cryptoData.map((crypto)=><Chart name={crypto.name} symbol={crypto.symbol} data={(crypto.values).map(x => [x[0], x[4]])}></Chart>)}\n      </View>\n    );\n    }\n    else{\n      return(\n        <View style={styles.container}>\n          <Text style={styles.text}>\n              LOADING...\n          </Text>\n        </View>\n      );\n    }\n  }\n};\n\n\nconst Chart = (props) => {\n  const allData = props.data;\n  const [data, setData] = useState(allData.filter(sample => sample[0] >= ((new Date).getTime() - 30*24*60*60*1000)));\n  const [swipeIndex, setSwipeIndex] = useState(-1);\n  const [period, setPeriod] = useState([0,1,0,0,0]);\n  \n  const ChartLine = ({ line }) => (\n    <Path\n        key={'line'}\n        d={line}\n        stroke={'rgb(41, 114, 255)'}\n        fill={'none'}\n    />\n  )\n\n  const Gradient = ({ index }) => (\n    <Defs key={index}>\n        <LinearGradient id={'gradient'} x1={'0%'} y1={'0%'} x2={'0%'} y2={'100%'}>\n            <Stop offset={'0%'} stopColor={'rgb(41, 114, 255)'} stopOpacity={0.2}/>\n            <Stop offset={'28%'} stopColor={'rgb(41, 114, 255)'} stopOpacity={0}/>\n        </LinearGradient>\n    </Defs>\n  )\n\n  function buttonCLicked(index){\n    var newPeriod = [0,0,0,0,0];\n    newPeriod[index] = 1;\n    setPeriod(newPeriod);\n    var currentDate = (new Date()).getTime();\n    var newData;\n\n    if(index == 0){\n      var end = (currentDate - 7*24*60*60*1000);\n      newData = allData.filter(sample => sample[0] >= end);\n    }\n    else if(index == 1){\n      var end = (currentDate - 30*24*60*60*1000);\n      newData = allData.filter(sample => sample[0] >= end);\n    }\n    else if(index == 2){\n      var end = (currentDate - 90*24*60*60*1000);\n      newData = allData.filter(sample => sample[0] >= end);\n    }\n    else if(index == 3){\n      var end = (currentDate - 365*24*60*60*1000);\n      newData = allData.filter(sample => sample[0] >= end);\n    }\n    else if(index == 4){\n      newData = allData;\n    }\n    setData(newData);\n  }\n\n  return (\n    <View style={styles.chartContainer}>\n      <View style={{flex: 1, textAlign: 'left'}}>\n        <Text style={styles.cryptoSymbol}>{props.symbol}</Text>\n        <Text style={styles.cryptoName}>{props.name}</Text>\n      </View>\n\n      <View style={{flex: 1, height: 20, textAlign: 'center', marginTop: 10, marginBottom: 20}}>\n        <PriceViewer swipeIndex={swipeIndex} data={data}></PriceViewer>\n      </View>\n\n      <View style={{ height: 120, flexDirection: 'row', marginBottom: 15, marginTop: 15 }}>\n        <TouchHandler chart={\n          <AreaChart\n            style={{ flex:1, height: 120}}\n            data={data.map(x => x[1])}\n            contentInset={{ top: 10, bottom: 10 }}\n            curve={shape.curveNatural}\n            svg={{ fill: 'url(#gradient)' }}\n            >\n            <Tooltip swipeIndex={swipeIndex} data={data}/>\n            <ChartLine/>\n            <Gradient/>\n          </AreaChart>\n          } setIndex={foo}>\n        </TouchHandler>\n      </View>\n\n      <View style={{flex: 1, alignItems: 'center', marginTop: 20}}>\n        <View style={styles.buttonsContainer}>\n          <View style={period[0] == 1 ? [styles.button, {backgroundColor: 'rgb(41, 114, 255)'}]:styles.button} onStartShouldSetResponder={() => buttonCLicked(0)}>\n            <Text style={period[0] == 1 ? [styles.buttonText, {color: '#ffffff'}]:styles.buttonText}>\n              1W\n            </Text>\n          </View>\n          <View style={period[1] == 1 ? [styles.button, {backgroundColor: 'rgb(41, 114, 255)'}]:styles.button} onStartShouldSetResponder={() => buttonCLicked(1)}>\n            <Text style={period[1] == 1 ? [styles.buttonText, {color: '#ffffff'}]:styles.buttonText}>\n              1M\n            </Text>\n          </View>\n          <View style={period[2] == 1 ? [styles.button, {backgroundColor: 'rgb(41, 114, 255)'}]:styles.button} onStartShouldSetResponder={() => buttonCLicked(2)}>\n            <Text style={period[2] == 1 ? [styles.buttonText, {color: '#ffffff'}]:styles.buttonText}>\n              3M\n            </Text>\n          </View>\n          <View style={period[3] == 1 ? [styles.button, {backgroundColor: 'rgb(41, 114, 255)'}]:styles.button} onStartShouldSetResponder={() => buttonCLicked(3)}>\n            <Text style={period[3] == 1 ? [styles.buttonText, {color: '#ffffff'}]:styles.buttonText}>\n              1Y\n            </Text>\n          </View>\n          <View style={period[4] == 1 ? [styles.button, {backgroundColor: 'rgb(41, 114, 255)'}]:styles.button} onStartShouldSetResponder={() => buttonCLicked(4)}>\n            <Text style={period[4] == 1 ? [styles.buttonText, {color: '#ffffff'}]:styles.buttonText}>\n              5Y\n            </Text>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n};\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex:1,\n    backgroundColor: '#e9f0ff',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    paddingTop: 30\n  },\n  chartContainer: {\n    backgroundColor: '#ffffff',\n    width: '90%',\n    borderRadius: 20,\n    padding: 20,\n    marginBottom: 20\n  },\n  cryptoSymbol: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 25,\n    color: '#000000'\n  },\n  cryptoName: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 20,\n    color: '#000000'\n  },\n  currentPrice: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 18,\n    color: '#000000',\n    margin: 0\n  },\n  currentDate: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 12,\n    color: '#000000',\n    margin: 0\n  },\n  text: {\n    fontFamily: 'Poppins_600SemiBold',\n    fontSize: 30,\n    color: '#000000'\n  },\n  buttonsContainer: {\n    width: '80%', \n    flexDirection: 'row', \n    justifyContent: 'space-between'\n  },\n  button: {\n    paddingTop: 5,\n    paddingBottom: 5,\n    paddingLeft: 10,\n    paddingRight: 10,\n    borderRadius: 30\n  },\n  buttonText: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 12,\n    color: '#000000'\n  }\n});"]},"metadata":{},"sourceType":"module"}