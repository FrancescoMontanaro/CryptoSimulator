{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/francescomontanaro/Desktop/Universita\\u0300/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/Predictions.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport 'react-native-gesture-handler';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState, useEffect } from 'react';\nimport { useFonts, Poppins_300Light, Poppins_400Regular, Poppins_500Medium, Poppins_600SemiBold } from '@expo-google-fonts/poppins';\nimport { AppLoading } from 'expo';\nimport * as firebase from 'firebase';\nimport \"firebase/functions\";\nimport { AreaChart, Grid, YAxis } from 'react-native-svg-charts';\nimport * as shape from 'd3-shape';\nimport { Path } from 'react-native-svg';\nexport default function Predictions() {\n  var _this = this;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cryptoData = _useState4[0],\n      setCryptoData = _useState4[1];\n\n  var _useFonts = useFonts({\n    Poppins_300Light: Poppins_300Light,\n    Poppins_400Regular: Poppins_400Regular,\n    Poppins_500Medium: Poppins_500Medium,\n    Poppins_600SemiBold: Poppins_600SemiBold\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  var axesSvg = {\n    fontSize: 10,\n    fill: 'grey'\n  };\n  var verticalContentInset = {\n    top: 10,\n    bottom: 10\n  };\n  var xAxisHeight = 30;\n\n  var Line = function Line(_ref) {\n    var line = _ref.line;\n    return React.createElement(Path, {\n      key: 'line',\n      d: line,\n      stroke: 'rgb(41, 114, 255)',\n      fill: 'none',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }\n    });\n  };\n\n  useEffect(function () {\n    if (loading && !fontsLoaded) {\n      firebase.functions().httpsCallable('getCryptoData')({\n        asset: 'bitcoin',\n        start: '2020-01-01',\n        end: '2020-02-01',\n        interval: '1d'\n      }).then(function (response) {\n        if (response.data.statusCode == 200) {\n          setCryptoData(response.data.body);\n          setLoading(false);\n        } else {\n          console.error(response.data.body);\n        }\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, []);\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 12\n      }\n    });\n  } else {\n    if (!loading) {\n      var data = [];\n      cryptoData.values.forEach(function (sample) {\n        data.push(sample[4]);\n      });\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.chartContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.cryptoSymbol,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, cryptoData.symbol), React.createElement(Text, {\n        style: styles.cryptoName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, cryptoData.name), React.createElement(View, {\n        style: {\n          height: 200,\n          padding: 20,\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, React.createElement(YAxis, {\n        data: data,\n        style: {\n          marginBottom: xAxisHeight\n        },\n        contentInset: verticalContentInset,\n        svg: axesSvg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 1,\n          marginLeft: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, React.createElement(AreaChart, {\n        style: {\n          height: 200\n        },\n        data: data,\n        contentInset: {\n          top: 30,\n          bottom: 30\n        },\n        curve: shape.curveNatural,\n        svg: {\n          fill: 'rgba(41, 114, 255, 0.6)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }\n      }, React.createElement(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }), React.createElement(Line, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      })), React.createElement(XAxis, {\n        style: {\n          marginHorizontal: -10,\n          height: xAxisHeight\n        },\n        data: data,\n        formatLabel: function formatLabel(value, index) {\n          return index;\n        },\n        contentInset: {\n          left: 10,\n          right: 10\n        },\n        svg: axesSvg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }))), React.createElement(View, {\n        style: styles.buttonsContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }, \"Week\")), React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, \"Month\")), React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, \"Year\")))));\n    } else {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }\n      }, \"LOADING...\"));\n    }\n  }\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#e9f0ff',\n    alignItems: 'center',\n    justifyContent: 'from-start',\n    paddingTop: 30\n  },\n  chartContainer: {\n    backgroundColor: '#ffffff',\n    width: '90%',\n    borderRadius: 20,\n    padding: 20,\n    textAlign: 'left'\n  },\n  cryptoSymbol: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 25,\n    color: '#000000'\n  },\n  cryptoName: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 20,\n    color: '#000000'\n  },\n  text: {\n    fontFamily: 'Poppins_600SemiBold',\n    fontSize: 30,\n    color: '#000000'\n  },\n  buttonsContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginTop: 20\n  },\n  button: {\n    backgroundColor: '#2970ff',\n    borderRadius: 20,\n    padding: 10,\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  buttonText: {\n    fontFamily: 'Poppins_400Regular',\n    fontSize: 15,\n    color: '#ffffff'\n  }\n});","map":{"version":3,"sources":["/Users/francescomontanaro/Desktop/UniversitaÌ€/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/Predictions.js"],"names":["StatusBar","React","useState","useEffect","useFonts","Poppins_300Light","Poppins_400Regular","Poppins_500Medium","Poppins_600SemiBold","AppLoading","firebase","AreaChart","Grid","YAxis","shape","Path","Predictions","loading","setLoading","cryptoData","setCryptoData","fontsLoaded","axesSvg","fontSize","fill","verticalContentInset","top","bottom","xAxisHeight","Line","line","functions","httpsCallable","asset","start","end","interval","then","response","data","statusCode","body","console","error","catch","values","forEach","sample","push","styles","container","chartContainer","cryptoSymbol","symbol","cryptoName","name","height","padding","flexDirection","marginBottom","flex","marginLeft","curveNatural","marginHorizontal","value","index","left","right","buttonsContainer","button","buttonText","text","StyleSheet","create","backgroundColor","alignItems","justifyContent","paddingTop","width","borderRadius","textAlign","fontFamily","color","marginTop","paddingLeft","paddingRight"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport 'react-native-gesture-handler';\nimport { Button, StyleSheet, Text, View } from 'react-native';\nimport React, {useState,useEffect} from 'react';\nimport { useFonts, Poppins_300Light, Poppins_400Regular, Poppins_500Medium, Poppins_600SemiBold} from '@expo-google-fonts/poppins';\nimport { AppLoading } from 'expo';\nimport * as firebase from 'firebase'\nimport \"firebase/functions\";\nimport { AreaChart, Grid, YAxis} from 'react-native-svg-charts'\nimport * as shape from 'd3-shape'\nimport { Path } from 'react-native-svg'\n\nexport default function Predictions() {\n  const [loading, setLoading] = useState(true);\n  const [cryptoData, setCryptoData] = useState({});\n  let [fontsLoaded] = useFonts({\n    Poppins_300Light,\n    Poppins_400Regular,\n    Poppins_500Medium,\n    Poppins_600SemiBold\n  });\n\n  const axesSvg = { fontSize: 10, fill: 'grey' };\n  const verticalContentInset = { top: 10, bottom: 10 }\n  const xAxisHeight = 30\n\n  const Line = ({ line }) => (\n    <Path\n        key={'line'}\n        d={line}\n        stroke={'rgb(41, 114, 255)'}\n        fill={'none'}\n    />\n  )\n\n  useEffect(()=>{\n    if(loading && !fontsLoaded){\n    firebase.functions().httpsCallable('getCryptoData')({asset: 'bitcoin', start: '2020-01-01', end: '2020-02-01', interval: '1d'}).then(response =>{\n      if(response.data.statusCode == 200){\n        setCryptoData(response.data.body);\n        setLoading(false);\n      }\n      else{\n        console.error(response.data.body);\n      }\n    }).catch(error =>{\n      console.error(error);\n    })\n  }},[])\n\n  if (!fontsLoaded) {\n    return <AppLoading/>;\n  }\n  else{\n    if(!loading){\n      let data = [];\n      (cryptoData.values).forEach(sample =>{\n        data.push(sample[4]);\n      })\n      return (\n        <View style={styles.container}>\n          <View style={styles.chartContainer}>\n            <Text style={styles.cryptoSymbol}>{cryptoData.symbol}</Text>\n            <Text style={styles.cryptoName}>{cryptoData.name}</Text>\n\n            <View style={{ height: 200, padding: 20, flexDirection: 'row' }}>\n                <YAxis\n                    data={data}\n                    style={{ marginBottom: xAxisHeight }}\n                    contentInset={verticalContentInset}\n                    svg={axesSvg}\n                />\n                <View style={{ flex: 1, marginLeft: 10 }}>\n                  <AreaChart\n                    style={{ height: 200 }}\n                    data={data}\n                    contentInset={{ top: 30, bottom: 30 }}\n                    curve={shape.curveNatural}\n                    svg={{ fill: 'rgba(41, 114, 255, 0.6)' }}\n                    >\n                    <Grid/>\n                    <Line/>\n                  </AreaChart>\n                    <XAxis\n                        style={{ marginHorizontal: -10, height: xAxisHeight }}\n                        data={data}\n                        formatLabel={(value, index) => index}\n                        contentInset={{ left: 10, right: 10 }}\n                        svg={axesSvg}\n                    />\n                </View>\n            </View>\n            <View style={styles.buttonsContainer}>\n              <View style={styles.button}>\n                <Text style={styles.buttonText}>\n                  Week\n                </Text>\n              </View>\n              <View style={styles.button}>\n                <Text style={styles.buttonText}>\n                  Month\n                </Text>\n              </View>\n              <View style={styles.button}>\n                <Text style={styles.buttonText}>\n                  Year\n                </Text>\n              </View>\n            </View>\n          </View>\n        </View>\n      );\n    }\n    else{\n      return(\n        <View style={styles.container}>\n          <Text style={styles.text}>\n              LOADING...\n          </Text>\n        </View>\n      );\n    }\n  }\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex:1,\n    backgroundColor: '#e9f0ff',\n    alignItems: 'center',\n    justifyContent: 'from-start',\n    paddingTop: 30\n  },\n  chartContainer: {\n    backgroundColor: '#ffffff',\n    width: '90%',\n    borderRadius: 20,\n    padding: 20,\n    textAlign: 'left'\n  },\n  cryptoSymbol: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 25,\n    color: '#000000'\n  },\n  cryptoName: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 20,\n    color: '#000000'\n  },\n  text: {\n    fontFamily: 'Poppins_600SemiBold',\n    fontSize: 30,\n    color: '#000000'\n  },\n  buttonsContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginTop: 20\n  },\n  button: {\n    backgroundColor: '#2970ff',\n    borderRadius: 20,\n    padding: 10,\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  buttonText: {\n    fontFamily: 'Poppins_400Regular',\n    fontSize: 15,\n    color: '#ffffff'\n  }\n});"]},"metadata":{},"sourceType":"module"}