{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"/Users/francescomontanaro/Desktop/Universita\\u0300/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/Predictions.js\",\n    _this2 = this;\n\nimport 'react-native-gesture-handler';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport React, { useState, useEffect, useRef, Component } from 'react';\nimport { useFonts, Poppins_300Light, Poppins_400Regular, Poppins_500Medium, Poppins_600SemiBold } from '@expo-google-fonts/poppins';\nimport { AppLoading } from 'expo';\nimport * as firebase from 'firebase';\nimport \"firebase/functions\";\nimport { AreaChart } from 'react-native-svg-charts';\nimport * as shape from 'd3-shape';\nimport { Defs, LinearGradient, Stop, Path } from 'react-native-svg';\nimport Tooltip from \"./Tooltip\";\nimport PriceViewer from \"./PriceViewer\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport DraggableFlatList from 'react-native-draggable-dynamic-flatlist';\nexport default function Predictions() {\n  var _this = this;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cryptoData = _useState4[0],\n      setCryptoData = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      scrollable = _useState6[0],\n      setScrollable = _useState6[1];\n\n  var flatListRef = React.useRef();\n  var scrollPosition = 0;\n\n  var _useFonts = useFonts({\n    Poppins_300Light: Poppins_300Light,\n    Poppins_400Regular: Poppins_400Regular,\n    Poppins_500Medium: Poppins_500Medium,\n    Poppins_600SemiBold: Poppins_600SemiBold\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  var setScroll = function setScroll(scroll) {\n    setScrollable(scroll);\n  };\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    return React.createElement(Chart, {\n      name: item.name,\n      symbol: item.symbol,\n      index: index,\n      dataLength: cryptoData.length,\n      scroll: setScroll,\n      moveItem: moveItem,\n      data: item.values.map(function (x) {\n        return [x[0], x[4]];\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var endDate = new Date();\n  endDate = endDate.getFullYear() + \"-\" + (endDate.getMonth() + 1) + \"-\" + endDate.getDate();\n  var startDate = new Date(new Date().getTime() - 3 * 365 * 24 * 60 * 60 * 1000);\n  startDate = startDate.getFullYear() + \"-\" + (startDate.getMonth() + 1) + \"-\" + startDate.getDate();\n  useEffect(function () {\n    if (loading && !fontsLoaded) {\n      firebase.functions().httpsCallable('getCryptoData')({\n        assets: ['BTC', 'ETH', 'LTC', 'ADA', 'DOT', 'XLM'],\n        start: startDate,\n        end: endDate,\n        interval: '1d'\n      }).then(function (response) {\n        if (response.data.statusCode == 200) {\n          setCryptoData(response.data.body);\n          setLoading(false);\n        } else {\n          console.error(response.data.body);\n        }\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, []);\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 12\n      }\n    });\n  } else {\n    if (!loading) {\n      return React.createElement(SafeAreaView, {\n        style: {\n          flex: 1,\n          backgroundColor: '#e9f0ff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.topBar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: [styles.text, {\n          fontSize: 18\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, \"CryptoSimulator\")), React.createElement(FlatList, {\n        data: cryptoData,\n        renderItem: renderItem,\n        ref: flatListRef,\n        contentContainerStyle: styles.container,\n        onScroll: updateScrolPosition,\n        showsVerticalScrollIndicator: false,\n        scrollEnabled: scrollable,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }));\n    } else {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.topBar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: [styles.text, {\n          fontSize: 18\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, \"CryptoSimulator\")), React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, \"LOADING...\"));\n    }\n  }\n}\n;\n\nvar Chart = function Chart(props) {\n  var allData = props.data;\n\n  var _useState7 = useState(allData.filter(function (sample) {\n    return sample[0] >= new Date().getTime() - 30 * 24 * 60 * 60 * 1000;\n  })),\n      _useState8 = _slicedToArray(_useState7, 2),\n      data = _useState8[0],\n      setData = _useState8[1];\n\n  var _useState9 = useState([0, 1, 0, 0, 0]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      period = _useState10[0],\n      setPeriod = _useState10[1];\n\n  var _useState11 = useState(-1),\n      _useState12 = _slicedToArray(_useState11, 2),\n      touchX = _useState12[0],\n      setTouchX = _useState12[1];\n\n  var width = Math.ceil(0.92 * Dimensions.get('window').width - 40);\n  var pan = useRef(new Animated.ValueXY()).current;\n\n  var _useState13 = useState({\n    elevation: 1,\n    shadowRadius: 5,\n    zIndex: 1\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      dragging = _useState14[0],\n      setDragging = _useState14[1];\n\n  var ChartLine = function ChartLine(_ref2) {\n    var line = _ref2.line;\n    return React.createElement(Path, {\n      key: 'line',\n      d: line,\n      stroke: 'rgb(41, 114, 255)',\n      fill: 'none',\n      strokeWidth: 2,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }\n    });\n  };\n\n  var Gradient = function Gradient(_ref3) {\n    var index = _ref3.index;\n    return React.createElement(Defs, {\n      key: index,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }\n    }, React.createElement(LinearGradient, {\n      id: 'gradient',\n      x1: '0%',\n      y1: '0%',\n      x2: '0%',\n      y2: '100%',\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, React.createElement(Stop, {\n      offset: '0%',\n      stopColor: 'rgb(41, 114, 255)',\n      stopOpacity: 0.2,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }), React.createElement(Stop, {\n      offset: '50%',\n      stopColor: 'rgb(41, 114, 255)',\n      stopOpacity: 0,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  var panResponder = React.useRef(PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n      return true;\n    },\n    onPanResponderGrant: function onPanResponderGrant(evt) {\n      props.scroll(false);\n\n      if (evt.nativeEvent.locationX >= 0 && evt.nativeEvent.locationX <= width) {\n        setTouchX(evt.nativeEvent.locationX);\n      }\n    },\n    onPanResponderMove: function onPanResponderMove(evt) {\n      if (evt.nativeEvent.locationX >= 0 && evt.nativeEvent.locationX <= width) {\n        setTouchX(evt.nativeEvent.locationX);\n      }\n    },\n    onPanResponderRelease: function onPanResponderRelease() {\n      props.scroll(true);\n      setTouchX(-1);\n    },\n    onPanResponderTerminate: function onPanResponderTerminate() {\n      props.scroll(true);\n      setTouchX(-1);\n    }\n  })).current;\n\n  function stopDragging() {\n    var offset;\n\n    if (pan.y._value / 301 < 0) {\n      offset = Math.floor(Math.abs(pan.y._value / 301)) * -1;\n    } else {\n      offset = Math.floor(pan.y._value / 301);\n    }\n\n    var newIndex;\n\n    if (props.index == 0 && offset < 0) {\n      newIndex = props.index;\n    } else if (props.index == props.dataLength - 1 && offset > 0) {\n      newIndex = props.index;\n    } else {\n      newIndex = props.index + offset;\n\n      if (newIndex < 0) {\n        newIndex = 0;\n      } else if (newIndex > props.dataLength - 1) {\n        newIndex = props.dataLength - 1;\n      }\n    }\n\n    Animated.spring(pan, {\n      toValue: {\n        x: 0,\n        y: 0\n      },\n      useNativeDriver: false\n    }).start();\n    props.scroll(true);\n    setDragging({\n      elevation: 100,\n      shadowRadius: 5,\n      zIndex: 100\n    });\n    setTimeout(function () {\n      setDragging({\n        elevation: 1,\n        shadowRadius: 5,\n        zIndex: 1\n      });\n    }, 300);\n  }\n\n  var Drag = React.useRef(PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n      return true;\n    },\n    onPanResponderGrant: function onPanResponderGrant() {\n      props.scroll(false);\n      setDragging({\n        elevation: 100,\n        shadowRadius: 20,\n        zIndex: 100\n      });\n      pan.setOffset({\n        x: 0,\n        y: 0\n      });\n    },\n    onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n      if (Math.abs(pan.y._value) > 300) {\n        if (pan.y._value < 0) {\n          props.scrollTo(-0.1);\n        } else {\n          props.scrollTo(+0.1);\n        }\n      }\n\n      return Animated.event([null, {\n        dx: pan.x,\n        dy: pan.y\n      }], {\n        useNativeDriver: false\n      })(evt, gestureState);\n    },\n    onPanResponderRelease: function onPanResponderRelease() {\n      stopDragging();\n    },\n    onPanResponderTerminate: function onPanResponderTerminate() {\n      stopDragging();\n    }\n  })).current;\n\n  function buttonCLicked(index) {\n    var newPeriod = [0, 0, 0, 0, 0];\n    newPeriod[index] = 1;\n    setPeriod(newPeriod);\n    var currentDate = new Date().getTime();\n    var newData;\n\n    if (index == 0) {\n      var end = currentDate - 7 * 24 * 60 * 60 * 1000;\n      newData = allData.filter(function (sample) {\n        return sample[0] >= end;\n      });\n    } else if (index == 1) {\n      var end = currentDate - 30 * 24 * 60 * 60 * 1000;\n      newData = allData.filter(function (sample) {\n        return sample[0] >= end;\n      });\n    } else if (index == 2) {\n      var end = currentDate - 90 * 24 * 60 * 60 * 1000;\n      newData = allData.filter(function (sample) {\n        return sample[0] >= end;\n      });\n    } else if (index == 3) {\n      var end = currentDate - 365 * 24 * 60 * 60 * 1000;\n      newData = allData.filter(function (sample) {\n        return sample[0] >= end;\n      });\n    } else if (index == 4) {\n      newData = allData;\n    }\n\n    setData(newData);\n  }\n\n  return React.createElement(Animated.View, {\n    style: {\n      elevation: dragging.elevation,\n      zIndex: dragging.zIndex,\n      width: '100%',\n      alignItems: 'center',\n      transform: [{\n        translateX: 0\n      }, {\n        translateY: pan.y\n      }]\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: [{\n      shadowRadius: dragging.shadowRadius\n    }, styles.chartContainer],\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      textAlign: 'left'\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.cryptoSymbol,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }, props.symbol), React.createElement(View, _extends({\n    style: {\n      width: 20\n    }\n  }, Drag.panHandlers, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  }), React.createElement(Icon, {\n    name: \"grip-lines\",\n    size: 20,\n    color: \"#c0c0c7\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 15\n    }\n  }))), React.createElement(Text, {\n    style: styles.cryptoName,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, props.name)), React.createElement(View, {\n    style: {\n      flex: 1,\n      height: 20,\n      textAlign: 'center',\n      marginBottom: 20\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, React.createElement(PriceViewer, {\n    touchX: touchX,\n    deviceWidth: width,\n    data: data,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: {\n      height: 80,\n      flexDirection: 'row',\n      marginBottom: 15,\n      marginTop: 15\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }\n  }, React.createElement(View, _extends({\n    style: {\n      flex: 1\n    }\n  }, panResponder.panHandlers, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 11\n    }\n  }), React.createElement(AreaChart, {\n    style: {\n      flex: 1,\n      height: 80\n    },\n    data: data.map(function (x) {\n      return x[1];\n    }),\n    contentInset: {\n      top: 10,\n      bottom: 10\n    },\n    curve: shape.curveNatural,\n    svg: {\n      fill: 'url(#gradient)'\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, React.createElement(Tooltip, {\n    touchX: touchX,\n    deviceWidth: width,\n    data: data,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 15\n    }\n  }), React.createElement(ChartLine, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 15\n    }\n  }), React.createElement(Gradient, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 15\n    }\n  })))), React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center'\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.buttonsContainer,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: period[0] == 1 ? [styles.button, {\n      backgroundColor: 'rgb(41, 114, 255)'\n    }] : styles.button,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      return buttonCLicked(0);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: period[0] == 1 ? [styles.buttonText, {\n      color: '#ffffff'\n    }] : styles.buttonText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 15\n    }\n  }, \"1W\")), React.createElement(View, {\n    style: period[1] == 1 ? [styles.button, {\n      backgroundColor: 'rgb(41, 114, 255)'\n    }] : styles.button,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      return buttonCLicked(1);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: period[1] == 1 ? [styles.buttonText, {\n      color: '#ffffff'\n    }] : styles.buttonText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 15\n    }\n  }, \"1M\")), React.createElement(View, {\n    style: period[2] == 1 ? [styles.button, {\n      backgroundColor: 'rgb(41, 114, 255)'\n    }] : styles.button,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      return buttonCLicked(2);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: period[2] == 1 ? [styles.buttonText, {\n      color: '#ffffff'\n    }] : styles.buttonText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 15\n    }\n  }, \"3M\")), React.createElement(View, {\n    style: period[3] == 1 ? [styles.button, {\n      backgroundColor: 'rgb(41, 114, 255)'\n    }] : styles.button,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      return buttonCLicked(3);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: period[3] == 1 ? [styles.buttonText, {\n      color: '#ffffff'\n    }] : styles.buttonText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 15\n    }\n  }, \"1Y\")), React.createElement(View, {\n    style: period[4] == 1 ? [styles.button, {\n      backgroundColor: 'rgb(41, 114, 255)'\n    }] : styles.button,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      return buttonCLicked(4);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: period[4] == 1 ? [styles.buttonText, {\n      color: '#ffffff'\n    }] : styles.buttonText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 15\n    }\n  }, \"3Y\"))))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flexGrow: 0,\n    justifyContent: 'flex-start',\n    marginTop: 70,\n    paddingBottom: 100\n  },\n  topBar: {\n    position: 'absolute',\n    zIndex: 200,\n    top: 0,\n    height: 60,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    width: '100%',\n    flex: 1,\n    backgroundColor: \"#fff\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 5,\n    paddingBottom: 8\n  },\n  chartContainer: {\n    backgroundColor: '#ffffff',\n    width: '92%',\n    borderRadius: 20,\n    padding: 20,\n    marginBottom: 20,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25\n  },\n  cryptoSymbol: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 25,\n    color: '#000000'\n  },\n  cryptoName: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 20,\n    color: '#000000'\n  },\n  currentPrice: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 18,\n    color: '#000000',\n    margin: 0\n  },\n  currentDate: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 12,\n    color: '#000000',\n    margin: 0\n  },\n  text: {\n    fontFamily: 'Poppins_600SemiBold',\n    fontSize: 30,\n    color: '#000000'\n  },\n  buttonsContainer: {\n    width: '80%',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  button: {\n    paddingTop: 5,\n    paddingBottom: 5,\n    paddingLeft: 10,\n    paddingRight: 10,\n    borderRadius: 30\n  },\n  buttonText: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 12,\n    color: '#000000'\n  }\n});","map":{"version":3,"sources":["/Users/francescomontanaro/Desktop/Università/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/Predictions.js"],"names":["React","useState","useEffect","useRef","Component","useFonts","Poppins_300Light","Poppins_400Regular","Poppins_500Medium","Poppins_600SemiBold","AppLoading","firebase","AreaChart","shape","Defs","LinearGradient","Stop","Path","Tooltip","PriceViewer","Icon","DraggableFlatList","Predictions","loading","setLoading","cryptoData","setCryptoData","scrollable","setScrollable","flatListRef","scrollPosition","fontsLoaded","setScroll","scroll","renderItem","item","index","name","symbol","length","moveItem","values","map","x","endDate","Date","getFullYear","getMonth","getDate","startDate","getTime","functions","httpsCallable","assets","start","end","interval","then","response","data","statusCode","body","console","error","catch","flex","backgroundColor","styles","topBar","text","fontSize","container","updateScrolPosition","alignItems","justifyContent","Chart","props","allData","filter","sample","setData","period","setPeriod","touchX","setTouchX","width","Math","ceil","Dimensions","get","pan","Animated","ValueXY","current","elevation","shadowRadius","zIndex","dragging","setDragging","ChartLine","line","Gradient","panResponder","PanResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","evt","nativeEvent","locationX","onPanResponderMove","onPanResponderRelease","onPanResponderTerminate","stopDragging","offset","y","_value","floor","abs","newIndex","dataLength","spring","toValue","useNativeDriver","setTimeout","Drag","setOffset","gestureState","scrollTo","event","dx","dy","buttonCLicked","newPeriod","currentDate","newData","transform","translateX","translateY","chartContainer","textAlign","flexDirection","cryptoSymbol","panHandlers","cryptoName","height","marginBottom","marginTop","top","bottom","curveNatural","fill","buttonsContainer","button","buttonText","color","StyleSheet","flexGrow","paddingBottom","position","shadowColor","shadowOffset","shadowOpacity","borderRadius","padding","fontFamily","currentPrice","margin","paddingTop","paddingLeft","paddingRight"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\nimport { Animated, StyleSheet, Text, TouchableOpacity, ScrollView, FlatList, View, PanResponder, Dimensions, SafeAreaView} from 'react-native';\nimport React, {useState,useEffect,useRef,Component} from 'react';\nimport { useFonts, Poppins_300Light, Poppins_400Regular, Poppins_500Medium, Poppins_600SemiBold} from '@expo-google-fonts/poppins';\nimport { AppLoading } from 'expo';\nimport * as firebase from 'firebase'\nimport \"firebase/functions\";\nimport { AreaChart} from 'react-native-svg-charts'\nimport * as shape from 'd3-shape'\nimport { Defs, LinearGradient, Stop, Path} from 'react-native-svg'\nimport Tooltip from './Tooltip'\nimport PriceViewer from './PriceViewer'\nimport Icon from 'react-native-vector-icons/FontAwesome5'\nimport DraggableFlatList from 'react-native-draggable-dynamic-flatlist';\n\n\nexport default function Predictions() {\n  const [loading, setLoading] = useState(true);\n  const [cryptoData, setCryptoData] = useState([]);\n  const [scrollable, setScrollable] = useState(true);\n  const flatListRef = React.useRef();\n  let scrollPosition = 0;\n  let [fontsLoaded] = useFonts({\n    Poppins_300Light,\n    Poppins_400Regular,\n    Poppins_500Medium,\n    Poppins_600SemiBold\n  });\n\n  const setScroll = (scroll) => {\n    setScrollable(scroll);\n  }\n\n  const renderItem = ({ item, index }) => {\n    return (\n      <Chart name={item.name} symbol={item.symbol} index={index} dataLength={cryptoData.length} scroll={setScroll} moveItem={moveItem} data={(item.values).map(x => [x[0], x[4]])}/>\n    );\n  };\n\n  var endDate = new Date();\n  endDate = endDate.getFullYear() + \"-\" + (endDate.getMonth() + 1) + \"-\" + endDate.getDate();\n\n  var startDate = new Date((new Date()).getTime() - 3*365*24*60*60*1000);\n  startDate = startDate.getFullYear() + \"-\" + (startDate.getMonth() + 1) + \"-\" + startDate.getDate();\n\n  useEffect(()=>{\n    if(loading && !fontsLoaded){\n    firebase.functions().httpsCallable('getCryptoData')({assets: ['BTC', 'ETH', 'LTC', 'ADA', 'DOT', 'XLM'], start: startDate, end: endDate, interval: '1d'}).then(response =>{\n      if(response.data.statusCode == 200){\n        setCryptoData(response.data.body);\n        setLoading(false);\n      }\n      else{\n        console.error(response.data.body);\n      }\n    }).catch(error =>{\n      console.error(error);\n    })\n  }},[])\n\n  if (!fontsLoaded) {\n    return <AppLoading/>;\n  }\n  else{\n    if(!loading){\n    return (\n      <SafeAreaView style={{flex: 1, backgroundColor:'#e9f0ff'}}>\n        <View style={styles.topBar}>\n          <Text style={[styles.text, {fontSize: 18}]}>CryptoSimulator</Text>\n        </View>\n        <FlatList data={cryptoData} renderItem={renderItem} ref={flatListRef} contentContainerStyle={styles.container} onScroll={updateScrolPosition} showsVerticalScrollIndicator={false} scrollEnabled={scrollable}/>\n      </SafeAreaView>\n    );\n    }\n    else{\n      return(\n        <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n          <View style={styles.topBar}>\n            <Text style={[styles.text, {fontSize: 18}]}>CryptoSimulator</Text>\n          </View>\n          <Text style={styles.text}>\n              LOADING...\n          </Text>\n        </View>\n      );\n    }\n  }\n};\n\n\nconst Chart = (props) => {\n  const allData = props.data;\n  const [data, setData] = useState(allData.filter(sample => sample[0] >= ((new Date).getTime() - 30*24*60*60*1000)));\n  const [period, setPeriod] = useState([0,1,0,0,0]);\n  const [touchX, setTouchX] = useState(-1);\n  const width = Math.ceil(0.92 * Dimensions.get('window').width - 40);\n  const pan = useRef(new Animated.ValueXY()).current;\n  const [dragging, setDragging] = useState({elevation: 1, shadowRadius: 5, zIndex: 1});\n\n  \n  const ChartLine = ({ line }) => (\n    <Path\n        key={'line'}\n        d={line}\n        stroke={'rgb(41, 114, 255)'}\n        fill={'none'}\n        strokeWidth={2}\n    />\n  )\n\n  const Gradient = ({ index }) => (\n    <Defs key={index}>\n        <LinearGradient id={'gradient'} x1={'0%'} y1={'0%'} x2={'0%'} y2={'100%'}>\n            <Stop offset={'0%'} stopColor={'rgb(41, 114, 255)'} stopOpacity={0.2}/>\n            <Stop offset={'50%'} stopColor={'rgb(41, 114, 255)'} stopOpacity={0}/>\n        </LinearGradient>\n    </Defs>\n  )\n\n\n  const panResponder = React.useRef(\n    PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderGrant: (evt) => {\n        props.scroll(false);\n        if(evt.nativeEvent.locationX >= 0 && evt.nativeEvent.locationX <= width){\n          setTouchX(evt.nativeEvent.locationX);\n        }\n      },\n      onPanResponderMove: (evt) => {\n        if(evt.nativeEvent.locationX >= 0 && evt.nativeEvent.locationX <= width){\n          setTouchX(evt.nativeEvent.locationX);\n        }\n      },\n      onPanResponderRelease: () => {\n        props.scroll(true);\n        setTouchX(-1);\n      },\n      onPanResponderTerminate: () => {\n        props.scroll(true);\n        setTouchX(-1);\n      }\n    })\n  ).current;\n\n\n  function stopDragging(){\n    let offset;\n    if(pan.y._value / 301 < 0){\n      offset = Math.floor(Math.abs(pan.y._value / 301)) * -1;\n    }\n    else{\n      offset = Math.floor(pan.y._value / 301);\n    }\n    let newIndex;\n    if(props.index == 0 && offset < 0){\n      newIndex = props.index;\n    }\n    else if(props.index == props.dataLength - 1 && offset > 0){\n      newIndex = props.index;\n    }\n    else{\n      newIndex = props.index + offset;\n      if(newIndex < 0){\n        newIndex = 0;\n      }\n      else if(newIndex > props.dataLength - 1){\n        newIndex = props.dataLength - 1;\n      }\n    }\n    /*if(newIndex != props.index){\n      props.moveItem(props.index , newIndex);\n    }\n    else{\n      Animated.spring(\n        pan,\n        { toValue: { x: 0, y: 0 }, useNativeDriver: false }\n      ).start();\n    }*/\n    Animated.spring(\n      pan,\n      { toValue: { x: 0, y: 0 }, useNativeDriver: false }\n    ).start();\n    props.scroll(true);\n    setDragging({elevation: 100, shadowRadius: 5, zIndex: 100});\n    setTimeout(function(){\n      setDragging({elevation: 1, shadowRadius: 5, zIndex: 1});\n    },300);\n  }\n\n\n  const Drag = React.useRef(\n    PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderGrant: () => {\n        props.scroll(false);\n        setDragging({elevation: 100, shadowRadius: 20, zIndex: 100});\n        pan.setOffset({\n          x: 0,\n          y: 0\n        });\n      },\n      onPanResponderMove: (evt, gestureState) => {\n        if(Math.abs(pan.y._value) > 300){\n          if(pan.y._value < 0){\n            props.scrollTo(-0.1);\n          }\n          else{\n            props.scrollTo(+0.1);\n          }\n        }\n        return Animated.event(\n          [\n            null, \n            { dx: pan.x, dy: pan.y }\n          ],\n          {useNativeDriver: false}\n        )(evt, gestureState)\n      },\n      onPanResponderRelease: () => {\n        stopDragging();\n      },\n      onPanResponderTerminate: () => {\n        stopDragging();\n      }\n    })\n  ).current;\n\n  function buttonCLicked(index){\n    var newPeriod = [0,0,0,0,0];\n    newPeriod[index] = 1;\n    setPeriod(newPeriod);\n    var currentDate = (new Date()).getTime();\n    var newData;\n\n    if(index == 0){\n      var end = (currentDate - 7*24*60*60*1000);\n      newData = allData.filter(sample => sample[0] >= end);\n    }\n    else if(index == 1){\n      var end = (currentDate - 30*24*60*60*1000);\n      newData = allData.filter(sample => sample[0] >= end);\n    }\n    else if(index == 2){\n      var end = (currentDate - 90*24*60*60*1000);\n      newData = allData.filter(sample => sample[0] >= end);\n    }\n    else if(index == 3){\n      var end = (currentDate - 365*24*60*60*1000);\n      newData = allData.filter(sample => sample[0] >= end);\n    }\n    else if(index == 4){\n      newData = allData;\n    }\n    setData(newData);\n  }\n\n\n  return (\n    <Animated.View style={{elevation: dragging.elevation, zIndex: dragging.zIndex, width:'100%', alignItems: 'center', transform: [{ translateX: 0 }, { translateY: pan.y }]}}>\n      <View style={[{shadowRadius: dragging.shadowRadius}, styles.chartContainer]}>\n        <View style={{flex: 1, textAlign: 'left'}}>\n          <View style={{flex: 1, flexDirection: 'row', justifyContent: 'space-between'}}>\n            <Text style={styles.cryptoSymbol}>{props.symbol}</Text>\n            <View style={{width: 20}} {...Drag.panHandlers}>\n              <Icon name=\"grip-lines\" size={20} color=\"#c0c0c7\" />\n            </View>\n          </View>\n          <Text style={styles.cryptoName}>{props.name}</Text>\n        </View>\n\n        <View style={{flex: 1, height: 20, textAlign: 'center', marginBottom: 20}}>\n          <PriceViewer touchX={touchX} deviceWidth={width} data={data}></PriceViewer>\n        </View>\n\n        <View style={{ height: 80, flexDirection: 'row', marginBottom: 15, marginTop: 15 }}>\n          <View style={{ flex: 1}} {...panResponder.panHandlers}>\n            <AreaChart\n              style={{ flex:1, height: 80}}\n              data={data.map(x => x[1])}\n              contentInset={{ top: 10, bottom: 10 }}\n              curve={shape.curveNatural}\n              svg={{ fill: 'url(#gradient)' }}\n              >\n              <Tooltip touchX={touchX} deviceWidth={width} data={data}/>\n              <ChartLine/>\n              <Gradient/>\n            </AreaChart>\n          </View>\n        </View>\n\n        <View style={{flex: 1, alignItems: 'center'}}>\n          <View style={styles.buttonsContainer}>\n            <View style={period[0] == 1 ? [styles.button, {backgroundColor: 'rgb(41, 114, 255)'}]:styles.button} onStartShouldSetResponder={() => buttonCLicked(0)}>\n              <Text style={period[0] == 1 ? [styles.buttonText, {color: '#ffffff'}]:styles.buttonText}>\n                1W\n              </Text>\n            </View>\n            <View style={period[1] == 1 ? [styles.button, {backgroundColor: 'rgb(41, 114, 255)'}]:styles.button} onStartShouldSetResponder={() => buttonCLicked(1)}>\n              <Text style={period[1] == 1 ? [styles.buttonText, {color: '#ffffff'}]:styles.buttonText}>\n                1M\n              </Text>\n            </View>\n            <View style={period[2] == 1 ? [styles.button, {backgroundColor: 'rgb(41, 114, 255)'}]:styles.button} onStartShouldSetResponder={() => buttonCLicked(2)}>\n              <Text style={period[2] == 1 ? [styles.buttonText, {color: '#ffffff'}]:styles.buttonText}>\n                3M\n              </Text>\n            </View>\n            <View style={period[3] == 1 ? [styles.button, {backgroundColor: 'rgb(41, 114, 255)'}]:styles.button} onStartShouldSetResponder={() => buttonCLicked(3)}>\n              <Text style={period[3] == 1 ? [styles.buttonText, {color: '#ffffff'}]:styles.buttonText}>\n                1Y\n              </Text>\n            </View>\n            <View style={period[4] == 1 ? [styles.button, {backgroundColor: 'rgb(41, 114, 255)'}]:styles.button} onStartShouldSetResponder={() => buttonCLicked(4)}>\n              <Text style={period[4] == 1 ? [styles.buttonText, {color: '#ffffff'}]:styles.buttonText}>\n                3Y\n              </Text>\n            </View>\n          </View>\n        </View>\n      </View>\n    </Animated.View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 0,\n    justifyContent: 'flex-start',\n    marginTop: 70,\n    paddingBottom: 100,\n  },\n  topBar: {\n    position: 'absolute',\n    zIndex: 200,\n    top: 0,\n    height: 60,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    width: '100%',\n    flex: 1,\n    backgroundColor: \"#fff\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 5,\n    paddingBottom: 8\n  },\n  chartContainer: {\n    backgroundColor: '#ffffff',\n    width: '92%',\n    borderRadius: 20,\n    padding: 20,\n    marginBottom: 20,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25\n  },\n  cryptoSymbol: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 25,\n    color: '#000000'\n  },\n  cryptoName: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 20,\n    color: '#000000'\n  },\n  currentPrice: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 18,\n    color: '#000000',\n    margin: 0\n  },\n  currentDate: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 12,\n    color: '#000000',\n    margin: 0\n  },\n  text: {\n    fontFamily: 'Poppins_600SemiBold',\n    fontSize: 30,\n    color: '#000000'\n  },\n  buttonsContainer: {\n    width: '80%', \n    flexDirection: 'row', \n    justifyContent: 'space-between'\n  },\n  button: {\n    paddingTop: 5,\n    paddingBottom: 5,\n    paddingLeft: 10,\n    paddingRight: 10,\n    borderRadius: 30\n  },\n  buttonText: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 12,\n    color: '#000000'\n  },\n});"]},"metadata":{},"sourceType":"module"}