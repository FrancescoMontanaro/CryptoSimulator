{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/francescomontanaro/Desktop/Universita\\u0300/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/Predictions.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport 'react-native-gesture-handler';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useState, useEffect } from 'react';\nimport { useFonts, Poppins_300Light, Poppins_400Regular, Poppins_500Medium, Poppins_600SemiBold } from '@expo-google-fonts/poppins';\nimport { AppLoading } from 'expo';\nimport * as firebase from 'firebase';\nimport \"firebase/functions\";\nimport { AreaChart, Grid, LineChart } from 'react-native-svg-charts';\nimport * as shape from 'd3-shape';\nimport { Defs, LinearGradient, Stop, Path, G, Line, Circle } from 'react-native-svg';\nexport default function Predictions() {\n  var _this = this;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cryptoData = _useState4[0],\n      setCryptoData = _useState4[1];\n\n  var _useFonts = useFonts({\n    Poppins_300Light: Poppins_300Light,\n    Poppins_400Regular: Poppins_400Regular,\n    Poppins_500Medium: Poppins_500Medium,\n    Poppins_600SemiBold: Poppins_600SemiBold\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  useEffect(function () {\n    if (loading && !fontsLoaded) {\n      firebase.functions().httpsCallable('getCryptoData')({\n        asset: 'bitcoin',\n        start: '2020-01-01',\n        end: '2020-02-01',\n        interval: '1d'\n      }).then(function (response) {\n        if (response.data.statusCode == 200) {\n          setCryptoData(response.data.body);\n          setLoading(false);\n        } else {\n          console.error(response.data.body);\n        }\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, []);\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }\n    });\n  } else {\n    if (!loading) {\n      var data = [];\n      console.log(cryptoData);\n      cryptoData.values.forEach(function (sample) {\n        data.push(sample[4]);\n      });\n\n      var ChartLine = function ChartLine(_ref) {\n        var line = _ref.line;\n        return React.createElement(Path, {\n          key: 'line',\n          d: line,\n          stroke: 'rgb(41, 114, 255)',\n          fill: 'none',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 9\n          }\n        });\n      };\n\n      var Gradient = function Gradient(_ref2) {\n        var index = _ref2.index;\n        return React.createElement(Defs, {\n          key: index,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 9\n          }\n        }, React.createElement(LinearGradient, {\n          id: 'gradient',\n          x1: '0%',\n          y1: '0%',\n          x2: '0%',\n          y2: '100%',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }\n        }, React.createElement(Stop, {\n          offset: '0%',\n          stopColor: 'rgb(41, 114, 255)',\n          stopOpacity: 0.2,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }\n        }), React.createElement(Stop, {\n          offset: '28%',\n          stopColor: 'rgb(41, 114, 255)',\n          stopOpacity: 0,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }\n        })));\n      };\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.chartContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.cryptoSymbol,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }, cryptoData.symbol), React.createElement(View, {\n        style: styles.priceContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.currentPrice,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, \"17.000,00 $\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'Poppins_500Medium',\n          fontSize: 10,\n          color: '#000000'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, \"Current Price\"), React.createElement(Text, {\n        style: styles.cryptoSymbol,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, cryptoData.name))), React.createElement(View, {\n        style: {\n          height: 120,\n          flexDirection: 'row',\n          marginBottom: 15,\n          marginTop: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          marginLeft: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }, React.createElement(AreaChart, {\n        style: {\n          height: 120\n        },\n        data: data,\n        contentInset: {\n          top: 10,\n          bottom: 10\n        },\n        curve: shape.curveNatural,\n        svg: {\n          fill: 'url(#gradient)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, React.createElement(ChartLine, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 19\n        }\n      }), React.createElement(Gradient, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 19\n        }\n      })))), React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          marginTop: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.buttonsContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }, \"1D\"), React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }, \"1W\"), React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }, \"1M\"), React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, \"1Y\"), React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, \"ALWAYS\")))));\n    } else {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      }, \"LOADING...\"));\n    }\n  }\n}\n;\n\nvar MyComponent = function (_React$Component) {\n  _inherits(MyComponent, _React$Component);\n\n  var _super = _createSuper(MyComponent);\n\n  function MyComponent(props) {\n    var _this2;\n\n    _classCallCheck(this, MyComponent);\n\n    _this2 = _super.call(this, props);\n    _this2.state = {};\n    return _this2;\n  }\n\n  return MyComponent;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#e9f0ff',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    paddingTop: 30\n  },\n  chartContainer: {\n    backgroundColor: '#ffffff',\n    width: '90%',\n    borderRadius: 20,\n    padding: 20,\n    marginBottom: 20\n  },\n  cryptoSymbol: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 25,\n    color: '#000000'\n  },\n  cryptoName: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 20,\n    color: '#000000'\n  },\n  priceContainer: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  currentPrice: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 18,\n    color: '#000000',\n    margin: 0\n  },\n  text: {\n    fontFamily: 'Poppins_600SemiBold',\n    fontSize: 30,\n    color: '#000000'\n  },\n  buttonsContainer: {\n    width: '80%',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  buttonText: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 12,\n    color: '#000000'\n  }\n});","map":{"version":3,"sources":["/Users/francescomontanaro/Desktop/Università/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/Predictions.js"],"names":["React","useState","useEffect","useFonts","Poppins_300Light","Poppins_400Regular","Poppins_500Medium","Poppins_600SemiBold","AppLoading","firebase","AreaChart","Grid","LineChart","shape","Defs","LinearGradient","Stop","Path","G","Line","Circle","Predictions","loading","setLoading","cryptoData","setCryptoData","fontsLoaded","functions","httpsCallable","asset","start","end","interval","then","response","data","statusCode","body","console","error","catch","log","values","forEach","sample","push","ChartLine","line","Gradient","index","styles","container","chartContainer","flex","flexDirection","alignItems","justifyContent","cryptoSymbol","symbol","priceContainer","currentPrice","fontFamily","fontSize","color","name","height","marginBottom","marginTop","marginLeft","top","bottom","curveNatural","fill","buttonsContainer","buttonText","text","MyComponent","props","state","Component","StyleSheet","create","backgroundColor","paddingTop","width","borderRadius","padding","cryptoName","margin"],"mappings":";;;;;;;;;;;AAAA,OAAO,8BAAP;;;;;AAEA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAASC,QAAT,EAAmBC,gBAAnB,EAAqCC,kBAArC,EAAyDC,iBAAzD,EAA4EC,mBAA5E,QAAsG,4BAAtG;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAO,oBAAP;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,SAA1B,QAA0C,yBAA1C;AACA,OAAO,KAAKC,KAAZ,MAAuB,UAAvB;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,IAA/B,EAAqCC,IAArC,EAA2CC,CAA3C,EAA8CC,IAA9C,EAAoDC,MAApD,QAAkE,kBAAlE;AAGA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAAA,kBACNpB,QAAQ,CAAC,IAAD,CADF;AAAA;AAAA,MAC7BqB,OAD6B;AAAA,MACpBC,UADoB;;AAAA,mBAEAtB,QAAQ,CAAC,EAAD,CAFR;AAAA;AAAA,MAE7BuB,UAF6B;AAAA,MAEjBC,aAFiB;;AAAA,kBAGhBtB,QAAQ,CAAC;AAC3BC,IAAAA,gBAAgB,EAAhBA,gBAD2B;AAE3BC,IAAAA,kBAAkB,EAAlBA,kBAF2B;AAG3BC,IAAAA,iBAAiB,EAAjBA,iBAH2B;AAI3BC,IAAAA,mBAAmB,EAAnBA;AAJ2B,GAAD,CAHQ;AAAA;AAAA,MAG/BmB,WAH+B;;AAUpCxB,EAAAA,SAAS,CAAC,YAAI;AACZ,QAAGoB,OAAO,IAAI,CAACI,WAAf,EAA2B;AAC3BjB,MAAAA,QAAQ,CAACkB,SAAT,GAAqBC,aAArB,CAAmC,eAAnC,EAAoD;AAACC,QAAAA,KAAK,EAAE,SAAR;AAAmBC,QAAAA,KAAK,EAAE,YAA1B;AAAwCC,QAAAA,GAAG,EAAE,YAA7C;AAA2DC,QAAAA,QAAQ,EAAE;AAArE,OAApD,EAAgIC,IAAhI,CAAqI,UAAAC,QAAQ,EAAG;AAC9I,YAAGA,QAAQ,CAACC,IAAT,CAAcC,UAAd,IAA4B,GAA/B,EAAmC;AACjCX,UAAAA,aAAa,CAACS,QAAQ,CAACC,IAAT,CAAcE,IAAf,CAAb;AACAd,UAAAA,UAAU,CAAC,KAAD,CAAV;AACD,SAHD,MAII;AACFe,UAAAA,OAAO,CAACC,KAAR,CAAcL,QAAQ,CAACC,IAAT,CAAcE,IAA5B;AACD;AACF,OARD,EAQGG,KARH,CAQS,UAAAD,KAAK,EAAG;AACfD,QAAAA,OAAO,CAACC,KAAR,CAAcA,KAAd;AACD,OAVD;AAWD;AAAC,GAbO,EAaN,EAbM,CAAT;;AAeA,MAAI,CAACb,WAAL,EAAkB;AAChB,WAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAGI;AACF,QAAG,CAACJ,OAAJ,EAAY;AACV,UAAIa,IAAI,GAAG,EAAX;AACAG,MAAAA,OAAO,CAACG,GAAR,CAAYjB,UAAZ;AACCA,MAAAA,UAAU,CAACkB,MAAZ,CAAoBC,OAApB,CAA4B,UAAAC,MAAM,EAAG;AACnCT,QAAAA,IAAI,CAACU,IAAL,CAAUD,MAAM,CAAC,CAAD,CAAhB;AACD,OAFD;;AAIA,UAAME,SAAS,GAAG,SAAZA,SAAY;AAAA,YAAGC,IAAH,QAAGA,IAAH;AAAA,eAChB,oBAAC,IAAD;AACI,UAAA,GAAG,EAAE,MADT;AAEI,UAAA,CAAC,EAAEA,IAFP;AAGI,UAAA,MAAM,EAAE,mBAHZ;AAII,UAAA,IAAI,EAAE,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADgB;AAAA,OAAlB;;AASA,UAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,YAAGC,KAAH,SAAGA,KAAH;AAAA,eACf,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,cAAD;AAAgB,UAAA,EAAE,EAAE,UAApB;AAAgC,UAAA,EAAE,EAAE,IAApC;AAA0C,UAAA,EAAE,EAAE,IAA9C;AAAoD,UAAA,EAAE,EAAE,IAAxD;AAA8D,UAAA,EAAE,EAAE,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,MAAM,EAAE,IAAd;AAAoB,UAAA,SAAS,EAAE,mBAA/B;AAAoD,UAAA,WAAW,EAAE,GAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI,oBAAC,IAAD;AAAM,UAAA,MAAM,EAAE,KAAd;AAAqB,UAAA,SAAS,EAAE,mBAAhC;AAAqD,UAAA,WAAW,EAAE,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ,CADe;AAAA,OAAjB;;AASF,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAE,CAAP;AAAUC,UAAAA,aAAa,EAAE,KAAzB;AAAgCC,UAAAA,UAAU,EAAE,QAA5C;AAAsDC,UAAAA,cAAc,EAAE;AAAtE,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACO,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmCjC,UAAU,CAACkC,MAA9C,CADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACS,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAET,MAAM,CAACU,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,EAIA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE,mBAAd;AAAmCC,UAAAA,QAAQ,EAAE,EAA7C;AAAiDC,UAAAA,KAAK,EAAE;AAAxD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJA,EAOA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEb,MAAM,CAACO,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmCjC,UAAU,CAACwC,IAA9C,CAPA,CAFF,CAFF,EAgBE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,GAAV;AAAeX,UAAAA,aAAa,EAAE,KAA9B;AAAqCY,UAAAA,YAAY,EAAE,EAAnD;AAAuDC,UAAAA,SAAS,EAAE;AAAlE,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEd,UAAAA,IAAI,EAAE,CAAR;AAAWe,UAAAA,UAAU,EAAE;AAAvB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAE;AAAEH,UAAAA,MAAM,EAAE;AAAV,SADT;AAEE,QAAA,IAAI,EAAE9B,IAFR;AAGE,QAAA,YAAY,EAAE;AAAEkC,UAAAA,GAAG,EAAE,EAAP;AAAWC,UAAAA,MAAM,EAAE;AAAnB,SAHhB;AAIE,QAAA,KAAK,EAAEzD,KAAK,CAAC0D,YAJf;AAKE,QAAA,GAAG,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAQE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF,CADJ,CAhBF,EA+BE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACnB,UAAAA,IAAI,EAAE,CAAP;AAAUE,UAAAA,UAAU,EAAE,QAAtB;AAAgCY,UAAAA,SAAS,EAAE;AAA3C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEjB,MAAM,CAACuB,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEvB,MAAM,CAACwB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAIA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAExB,MAAM,CAACwB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,EAOA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAExB,MAAM,CAACwB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPA,EAUA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAExB,MAAM,CAACwB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVA,EAaA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAExB,MAAM,CAACwB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbA,CADF,CA/BF,CADF,CADF;AAuDC,KAhFD,MAiFI;AACF,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAExB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACyB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF;AAOD;AACF;AACF;AAAA;;IAEKC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+BAAMA,KAAN;AACA,WAAKC,KAAL,GAAa,EAAb;AAFiB;AAGlB;;;EAJuB9E,KAAK,CAAC+E,S;;AAQhC,IAAM7B,MAAM,GAAG8B,UAAU,CAACC,MAAX,CAAkB;AAC/B9B,EAAAA,SAAS,EAAE;AACTE,IAAAA,IAAI,EAAC,CADI;AAET6B,IAAAA,eAAe,EAAE,SAFR;AAGT3B,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE,YAJP;AAKT2B,IAAAA,UAAU,EAAE;AALH,GADoB;AAQ/B/B,EAAAA,cAAc,EAAE;AACd8B,IAAAA,eAAe,EAAE,SADH;AAEdE,IAAAA,KAAK,EAAE,KAFO;AAGdC,IAAAA,YAAY,EAAE,EAHA;AAIdC,IAAAA,OAAO,EAAE,EAJK;AAKdpB,IAAAA,YAAY,EAAE;AALA,GARe;AAe/BT,EAAAA,YAAY,EAAE;AACZI,IAAAA,UAAU,EAAE,mBADA;AAEZC,IAAAA,QAAQ,EAAE,EAFE;AAGZC,IAAAA,KAAK,EAAE;AAHK,GAfiB;AAoB/BwB,EAAAA,UAAU,EAAE;AACV1B,IAAAA,UAAU,EAAE,mBADF;AAEVC,IAAAA,QAAQ,EAAE,EAFA;AAGVC,IAAAA,KAAK,EAAE;AAHG,GApBmB;AAyB/BJ,EAAAA,cAAc,EAAE;AACdN,IAAAA,IAAI,EAAE,CADQ;AAEdE,IAAAA,UAAU,EAAE;AAFE,GAzBe;AA6B/BK,EAAAA,YAAY,EAAE;AACZC,IAAAA,UAAU,EAAE,mBADA;AAEZC,IAAAA,QAAQ,EAAE,EAFE;AAGZC,IAAAA,KAAK,EAAE,SAHK;AAIZyB,IAAAA,MAAM,EAAE;AAJI,GA7BiB;AAmC/Bb,EAAAA,IAAI,EAAE;AACJd,IAAAA,UAAU,EAAE,qBADR;AAEJC,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,KAAK,EAAE;AAHH,GAnCyB;AAwC/BU,EAAAA,gBAAgB,EAAE;AAChBW,IAAAA,KAAK,EAAE,KADS;AAEhB9B,IAAAA,aAAa,EAAE,KAFC;AAGhBE,IAAAA,cAAc,EAAE;AAHA,GAxCa;AA6C/BkB,EAAAA,UAAU,EAAE;AACVb,IAAAA,UAAU,EAAE,mBADF;AAEVC,IAAAA,QAAQ,EAAE,EAFA;AAGVC,IAAAA,KAAK,EAAE;AAHG;AA7CmB,CAAlB,CAAf","sourcesContent":["import 'react-native-gesture-handler';\nimport { StyleSheet, Text, View, ScrollView } from 'react-native';\nimport React, {useState,useEffect} from 'react';\nimport { useFonts, Poppins_300Light, Poppins_400Regular, Poppins_500Medium, Poppins_600SemiBold} from '@expo-google-fonts/poppins';\nimport { AppLoading } from 'expo';\nimport * as firebase from 'firebase'\nimport \"firebase/functions\";\nimport { AreaChart, Grid, LineChart} from 'react-native-svg-charts'\nimport * as shape from 'd3-shape'\nimport { Defs, LinearGradient, Stop, Path, G, Line, Circle } from 'react-native-svg'\n\n\nexport default function Predictions() {\n  const [loading, setLoading] = useState(true);\n  const [cryptoData, setCryptoData] = useState({});\n  let [fontsLoaded] = useFonts({\n    Poppins_300Light,\n    Poppins_400Regular,\n    Poppins_500Medium,\n    Poppins_600SemiBold\n  });\n\n  useEffect(()=>{\n    if(loading && !fontsLoaded){\n    firebase.functions().httpsCallable('getCryptoData')({asset: 'bitcoin', start: '2020-01-01', end: '2020-02-01', interval: '1d'}).then(response =>{\n      if(response.data.statusCode == 200){\n        setCryptoData(response.data.body);\n        setLoading(false);\n      }\n      else{\n        console.error(response.data.body);\n      }\n    }).catch(error =>{\n      console.error(error);\n    })\n  }},[])\n\n  if (!fontsLoaded) {\n    return <AppLoading/>;\n  }\n  else{\n    if(!loading){\n      let data = [];\n      console.log(cryptoData);\n      (cryptoData.values).forEach(sample =>{\n        data.push(sample[4]);\n      })\n\n      const ChartLine = ({ line }) => (\n        <Path\n            key={'line'}\n            d={line}\n            stroke={'rgb(41, 114, 255)'}\n            fill={'none'}\n        />\n      )\n    \n      const Gradient = ({ index }) => (\n        <Defs key={index}>\n            <LinearGradient id={'gradient'} x1={'0%'} y1={'0%'} x2={'0%'} y2={'100%'}>\n                <Stop offset={'0%'} stopColor={'rgb(41, 114, 255)'} stopOpacity={0.2}/>\n                <Stop offset={'28%'} stopColor={'rgb(41, 114, 255)'} stopOpacity={0}/>\n            </LinearGradient>\n        </Defs>\n      )\n\n    return (\n      <View style={styles.container}>\n        <View style={styles.chartContainer}>\n\n          <View style={{flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between'}}>\n            <Text style={styles.cryptoSymbol}>{cryptoData.symbol}</Text>\n            <View style={styles.priceContainer}>\n            <Text style={styles.currentPrice}>\n              17.000,00 $\n            </Text>\n            <Text style={{ fontFamily: 'Poppins_500Medium', fontSize: 10, color: '#000000'}}>\n              Current Price\n            </Text>\n            <Text style={styles.cryptoSymbol}>{cryptoData.name}</Text>\n            </View>\n          </View>\n\n\n          <View style={{ height: 120, flexDirection: 'row', marginBottom: 15, marginTop: 15 }}>\n              <View style={{ flex: 1, marginLeft: 10 }}>\n                <AreaChart\n                  style={{ height: 120 }}\n                  data={data}\n                  contentInset={{ top: 10, bottom: 10 }}\n                  curve={shape.curveNatural}\n                  svg={{ fill: 'url(#gradient)' }}\n                  >\n                  <ChartLine/>\n                  <Gradient/>\n                </AreaChart>\n              </View>\n          </View>\n\n          <View style={{flex: 1, alignItems: 'center', marginTop: 20}}>\n            <View style={styles.buttonsContainer}>\n            <Text style={styles.buttonText}>\n              1D\n            </Text>\n            <Text style={styles.buttonText}>\n              1W\n            </Text>\n            <Text style={styles.buttonText}>\n              1M\n            </Text>\n            <Text style={styles.buttonText}>\n              1Y\n            </Text>\n            <Text style={styles.buttonText}>\n              ALWAYS\n            </Text>\n            </View>\n          </View>\n        </View>\n      </View>\n    );\n    }\n    else{\n      return(\n        <View style={styles.container}>\n          <Text style={styles.text}>\n              LOADING...\n          </Text>\n        </View>\n      );\n    }\n  }\n};\n\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { /* initial state, this is ES6 syntax (classes) */ };\n  }\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex:1,\n    backgroundColor: '#e9f0ff',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    paddingTop: 30\n  },\n  chartContainer: {\n    backgroundColor: '#ffffff',\n    width: '90%',\n    borderRadius: 20,\n    padding: 20,\n    marginBottom: 20\n  },\n  cryptoSymbol: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 25,\n    color: '#000000'\n  },\n  cryptoName: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 20,\n    color: '#000000'\n  },\n  priceContainer: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  currentPrice: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 18,\n    color: '#000000',\n    margin: 0\n  },\n  text: {\n    fontFamily: 'Poppins_600SemiBold',\n    fontSize: 30,\n    color: '#000000'\n  },\n  buttonsContainer: {\n    width: '80%', \n    flexDirection: 'row', \n    justifyContent: 'space-between'\n  },\n  buttonText: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 12,\n    color: '#000000'\n  }\n});"]},"metadata":{},"sourceType":"module"}