{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"/Users/francescomontanaro/Desktop/Universita\\u0300/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/Predictions.js\",\n    _this2 = this;\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport { Defs, LinearGradient, Stop, Path } from 'react-native-svg';\nimport Carousel, { Pagination } from 'react-native-snap-carousel';\nimport Icon from \"@expo/vector-icons/Feather\";\nimport { AreaChart } from 'react-native-svg-charts';\nimport React, { useState } from 'react';\nimport Dash from 'react-native-dash';\nimport * as shape from 'd3-shape';\nimport Tooltip from \"./Tooltip\";\nvar dimensions = Dimensions.get(\"window\");\n\nfunction parsePrice(price) {\n  price = price.toFixed(2);\n  var integer = String(Math.trunc(price));\n  var decimal = price.split(\".\")[1];\n\n  if (integer.length > 3) {\n    integer = [integer.slice(0, integer.length - 3), \".\", integer.slice(integer.length - 3)].join('');\n  }\n\n  return integer + \",\" + decimal + \"$\";\n}\n\nexport default function Predictions(props) {\n  var _this = this;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeSlide = _useState2[0],\n      setActiveSlide = _useState2[1];\n\n  var _useState3 = useState(new Array(props.cryptoData.length).fill(1)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      period = _useState4[0],\n      setPeriod = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      scrollable = _useState6[0],\n      setScrollable = _useState6[1];\n\n  var iconColor = props.colorScheme === \"dark\" ? \"white\" : \"black\";\n\n  var changePeriod = function changePeriod(index, value) {\n    var newPeriod = period.slice();\n    newPeriod[index] = value;\n    setPeriod(newPeriod);\n  };\n\n  var setScroll = function setScroll(scroll) {\n    setScrollable(scroll);\n  };\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    var data;\n    var currentDate = new Date().getTime();\n\n    if (period[index] == 0) {\n      var end = currentDate - 7 * 24 * 60 * 60 * 1000;\n      data = item.values.filter(function (sample) {\n        return sample[0] >= end;\n      });\n    } else if (period[index] == 1) {\n      var end = currentDate - 30 * 24 * 60 * 60 * 1000;\n      data = item.values.filter(function (sample) {\n        return sample[0] >= end;\n      });\n    } else if (period[index] == 2) {\n      var end = currentDate - 90 * 24 * 60 * 60 * 1000;\n      data = item.values.filter(function (sample) {\n        return sample[0] >= end;\n      });\n    } else if (period[index] == 3) {\n      var end = currentDate - 365 * 24 * 60 * 60 * 1000;\n      data = item.values.filter(function (sample) {\n        return sample[0] >= end;\n      });\n    } else if (period[index] == 4) {\n      data = item.values;\n    }\n\n    var highestPrice = parsePrice(Math.max.apply(Math, _toConsumableArray(data.map(function (x) {\n      return x[4];\n    }))));\n    var lowestPrice = parsePrice(Math.min.apply(Math, _toConsumableArray(data.map(function (x) {\n      return x[4];\n    }))));\n    var symbol = item.symbol;\n    var name = item.name;\n    var icon = 'https://cryptoicons.org/api/' + iconColor + '/' + item.symbol.toLowerCase() + '/180';\n    return React.createElement(View, {\n      style: [styles.predictionCard, {\n        backgroundColor: props.colorScheme === 'dark' ? '#161730' : '#e9f0ff'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.additionalInfosContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: [styles.additionalInfo, {\n        backgroundColor: props.colorScheme === 'dark' ? '#212244' : '#fff'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, React.createElement(Image, {\n      style: styles.tinyLogo,\n      source: {\n        uri: icon\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: [styles.cryptoSymbol, {\n        color: props.colorScheme === \"dark\" ? '#fff' : '#000'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, symbol), React.createElement(Text, {\n      adjustsFontSizeToFit: true,\n      style: [styles.cryptoName, {\n        fontSize: name.length < 9 ? 20 : 16,\n        color: props.colorScheme === \"dark\" ? '#fff' : '#000'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, name))), React.createElement(View, {\n      style: {\n        width: '6%'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), React.createElement(View, {\n      style: [styles.additionalInfo, {\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        backgroundColor: props.colorScheme === 'dark' ? '#212244' : '#fff'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      style: {\n        width: '100%',\n        flexDirection: 'row',\n        alignItems: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, React.createElement(Icon, {\n      name: \"arrow-up-circle\",\n      size: 30,\n      color: \"green\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }), React.createElement(View, {\n      style: {\n        marginLeft: 8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: props.colorScheme === 'dark' ? '#fff' : '#000',\n        fontSize: 10,\n        fontFamily: 'Poppins_500Medium'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }, \"Highest Price\"), React.createElement(Text, {\n      style: {\n        color: props.colorScheme === 'dark' ? '#fff' : '#000',\n        fontFamily: 'Poppins_500Medium'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, highestPrice))), React.createElement(Dash, {\n      dashThickness: 1,\n      dashColor: props.colorScheme === 'dark' ? 'rgba(255,255,255,0.8)' : 'rgba(0,0,0,0.8)',\n      style: {\n        width: '100%',\n        height: 0.5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }), React.createElement(View, {\n      style: {\n        width: '100%',\n        flexDirection: 'row',\n        alignItems: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, React.createElement(Icon, {\n      name: \"arrow-down-circle\",\n      size: 30,\n      color: \"tomato\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }), React.createElement(View, {\n      style: {\n        marginLeft: 8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: props.colorScheme === 'dark' ? '#fff' : '#000',\n        fontSize: 10,\n        fontFamily: 'Poppins_500Medium'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }, \"Lowest Price\"), React.createElement(Text, {\n      style: {\n        color: props.colorScheme === 'dark' ? '#fff' : '#000',\n        fontFamily: 'Poppins_500Medium'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, lowestPrice))))), React.createElement(View, {\n      style: [styles.predictionChartContainer, {\n        backgroundColor: props.colorScheme === 'dark' ? '#212244' : '#fff'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, React.createElement(Chart, {\n      data: data.map(function (x) {\n        return [x[0], x[4]];\n      }),\n      color: '#2970ff',\n      period: period[index],\n      index: index,\n      colorScheme: props.colorScheme,\n      scroll: setScroll,\n      changePeriod: changePeriod,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    })), React.createElement(View, {\n      style: [styles.predictionChartContainer, {\n        backgroundColor: props.colorScheme === 'dark' ? '#212244' : '#fff'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var Pages = function Pages() {\n    return React.createElement(Pagination, {\n      dotsLength: props.cryptoData.length,\n      activeDotIndex: activeSlide,\n      containerStyle: {\n        paddingTop: 5,\n        paddingBottom: 5\n      },\n      dotStyle: {\n        width: 5,\n        height: 5,\n        borderRadius: 5,\n        marginHorizontal: -5,\n        backgroundColor: 'rgba(41, 114, 255, 0.92)'\n      },\n      inactiveDotStyle: {\n        backgroundColor: props.colorScheme === 'dark' ? 'rgba(255, 255, 255, 0.92)' : 'rgba(0, 0, 0, 0.92)'\n      },\n      inactiveDotOpacity: 0.4,\n      inactiveDotScale: 0.6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: props.colorScheme === 'dark' ? '#161730' : '#e9f0ff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: [styles.topBar, {\n      backgroundColor: props.colorScheme === 'dark' ? '#161730' : '#e9f0ff'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: [styles.text, {\n      fontSize: 18,\n      fontFamily: 'Poppins_600SemiBold',\n      color: props.colorScheme === 'dark' ? '#fff' : '#000'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, \"CryptoSimulator\")), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, React.createElement(Carousel, {\n    data: props.cryptoData,\n    renderItem: renderItem,\n    sliderWidth: dimensions.width,\n    itemWidth: dimensions.width,\n    onSnapToItem: function onSnapToItem(index) {\n      return setActiveSlide(index);\n    },\n    scrollEnabled: scrollable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }), React.createElement(Pages, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar Chart = function Chart(props) {\n  var _useState7 = useState(-1),\n      _useState8 = _slicedToArray(_useState7, 2),\n      touchX = _useState8[0],\n      setTouchX = _useState8[1];\n\n  var width = Math.ceil(0.92 * Dimensions.get('window').width - 40);\n\n  var ChartLine = function ChartLine(_ref2) {\n    var line = _ref2.line;\n    return React.createElement(Path, {\n      key: 'line',\n      d: line,\n      stroke: props.color,\n      fill: 'none',\n      strokeWidth: 2,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 5\n      }\n    });\n  };\n\n  var Gradient = function Gradient(_ref3) {\n    var index = _ref3.index;\n    return React.createElement(Defs, {\n      key: index,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 5\n      }\n    }, React.createElement(LinearGradient, {\n      id: 'gradient',\n      x1: '0%',\n      y1: '0%',\n      x2: '0%',\n      y2: '100%',\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }, React.createElement(Stop, {\n      offset: '0%',\n      stopColor: props.color,\n      stopOpacity: 0.2,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }), React.createElement(Stop, {\n      offset: '50%',\n      stopColor: props.color,\n      stopOpacity: 0,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  var panResponder = React.useRef(PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n      return true;\n    },\n    onPanResponderGrant: function onPanResponderGrant(evt) {\n      props.scroll(false);\n\n      if (evt.nativeEvent.locationX >= 0 && evt.nativeEvent.locationX <= width) {\n        setTouchX(evt.nativeEvent.locationX);\n      }\n    },\n    onPanResponderMove: function onPanResponderMove(evt) {\n      if (evt.nativeEvent.locationX >= 0 && evt.nativeEvent.locationX <= width) {\n        setTouchX(evt.nativeEvent.locationX);\n      }\n    },\n    onPanResponderRelease: function onPanResponderRelease() {\n      props.scroll(true);\n      setTouchX(-1);\n    },\n    onPanResponderTerminate: function onPanResponderTerminate() {\n      props.scroll(true);\n      setTouchX(-1);\n    }\n  })).current;\n\n  function changePeriod(newPeriod) {\n    props.changePeriod(props.index, newPeriod);\n  }\n\n  return React.createElement(View, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }\n  }, React.createElement(AreaChart, {\n    style: {\n      flex: 1,\n      height: 60\n    },\n    data: props.data.map(function (x) {\n      return x[1];\n    }),\n    contentInset: {\n      top: 10,\n      bottom: 10\n    },\n    curve: shape.curveNatural,\n    svg: {\n      fill: 'url(#gradient)'\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 40,\n    paddingBottom: 60\n  },\n  topBar: {\n    position: 'absolute',\n    zIndex: 200,\n    top: 0,\n    height: 60,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    width: '100%',\n    flex: 1,\n    paddingBottom: 8\n  },\n  cryptoSymbol: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 25,\n    marginTop: 8\n  },\n  cryptoName: {\n    fontFamily: 'Poppins_500Medium'\n  },\n  titleContainer: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'flex-start'\n  },\n  tinyLogo: {\n    width: 40,\n    height: 40\n  },\n  predictionCard: {\n    flex: 1,\n    alignItems: 'center',\n    padding: 20,\n    paddingTop: 0\n  },\n  predictionChartContainer: {\n    height: '30%',\n    width: '100%',\n    marginTop: 20,\n    borderRadius: 20,\n    padding: 20\n  },\n  additionalInfosContainer: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignContent: 'space-between',\n    marginTop: 30,\n    textAlign: 'left'\n  },\n  additionalInfo: {\n    width: '47%',\n    height: 150,\n    borderRadius: 20,\n    padding: 20,\n    justifyContent: 'flex-end'\n  },\n  buttonsContainer: {\n    width: '80%',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  button: {\n    paddingTop: 5,\n    paddingBottom: 5,\n    paddingLeft: 10,\n    paddingRight: 10,\n    borderRadius: 30\n  },\n  buttonText: {\n    fontFamily: 'Poppins_600SemiBold',\n    fontSize: 12\n  }\n});","map":{"version":3,"sources":["/Users/francescomontanaro/Desktop/Università/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/Predictions.js"],"names":["Defs","LinearGradient","Stop","Path","Carousel","Pagination","Icon","AreaChart","React","useState","Dash","shape","Tooltip","dimensions","Dimensions","get","parsePrice","price","toFixed","integer","String","Math","trunc","decimal","split","length","slice","join","Predictions","props","activeSlide","setActiveSlide","Array","cryptoData","fill","period","setPeriod","scrollable","setScrollable","iconColor","colorScheme","changePeriod","index","value","newPeriod","setScroll","scroll","renderItem","item","data","currentDate","Date","getTime","end","values","filter","sample","highestPrice","max","map","x","lowestPrice","min","symbol","name","icon","toLowerCase","styles","predictionCard","backgroundColor","additionalInfosContainer","additionalInfo","tinyLogo","uri","cryptoSymbol","color","cryptoName","fontSize","width","flexDirection","justifyContent","alignItems","marginLeft","fontFamily","height","predictionChartContainer","Pages","paddingTop","paddingBottom","borderRadius","marginHorizontal","flex","topBar","text","container","Chart","touchX","setTouchX","ceil","ChartLine","line","Gradient","panResponder","useRef","PanResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","evt","nativeEvent","locationX","onPanResponderMove","onPanResponderRelease","onPanResponderTerminate","current","top","bottom","curveNatural","StyleSheet","marginTop","position","zIndex","titleContainer","padding","alignContent","textAlign","buttonsContainer","button","paddingLeft","paddingRight","buttonText"],"mappings":"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","sourcesContent":["import {StyleSheet, Text, View, Dimensions, Image, PanResponder} from 'react-native';\nimport { Defs, LinearGradient, Stop, Path} from 'react-native-svg';\nimport Carousel, {Pagination} from 'react-native-snap-carousel';\nimport Icon from 'react-native-vector-icons/Feather';\nimport { AreaChart} from 'react-native-svg-charts';\nimport React, {useState} from 'react';\nimport Dash from 'react-native-dash';\nimport * as shape from 'd3-shape';\nimport Tooltip from './Tooltip';\n\nconst dimensions = Dimensions.get(\"window\");\n\nfunction parsePrice(price){\n  price = price.toFixed(2);\n  var integer = String(Math.trunc(price));\n  var decimal = price.split(\".\")[1];\n  if(integer.length > 3){\n      integer = [integer.slice(0, (integer.length - 3)), \".\", integer.slice((integer.length - 3))].join('');\n  }\n  return integer + \",\" + decimal + \"$\";\n}\n\nexport default function Predictions(props) {\n  const [activeSlide, setActiveSlide] = useState(0);\n  const [period, setPeriod] = useState(new Array(props.cryptoData.length).fill(1));\n  const [scrollable, setScrollable] = useState(true);\n  let iconColor = props.colorScheme === \"dark\" ? \"white\":\"black\";\n\n  const changePeriod = (index, value) => {\n    let newPeriod = period.slice();\n    newPeriod[index] = value;\n    setPeriod(newPeriod);\n  };\n\n  const setScroll = (scroll) => {\n    setScrollable(scroll);\n  }\n\n  const renderItem = ({item, index}) => {\n    let data;\n    let currentDate = (new Date()).getTime();\n    if(period[index] == 0){\n      var end = (currentDate - 7*24*60*60*1000);\n      data = item.values.filter(sample => sample[0] >= end);\n    }\n    else if(period[index] == 1){\n      var end = (currentDate - 30*24*60*60*1000);\n      data = item.values.filter(sample => sample[0] >= end);\n    }\n    else if(period[index] == 2){\n      var end = (currentDate - 90*24*60*60*1000);\n      data = item.values.filter(sample => sample[0] >= end);\n    }\n    else if(period[index] == 3){\n      var end = (currentDate - 365*24*60*60*1000);\n      data = item.values.filter(sample => sample[0] >= end);\n    }\n    else if(period[index] == 4){\n      data = item.values;\n    }\n\n/*     let estimatedData = item.values.filter(sample => sample[0] >= (currentDate - 20*24*60*60*1000) && sample[0] <= (currentDate - 3*24*60*60*1000));\n    let willGrow = estimatedData.map(x => x[4])[estimatedData.map(x => x[4]).length - 1] >= data.map(x => x[4])[data.map(x => x[4]).length - 1]; */\n\n    let highestPrice = parsePrice(Math.max(...data.map(x => x[4])));\n    let lowestPrice = parsePrice(Math.min(...data.map(x => x[4])));\n    let symbol = item.symbol;\n    let name = item.name;\n    let icon = 'https://cryptoicons.org/api/'+ iconColor + '/' + (item.symbol).toLowerCase() + '/180';\n\n    return (\n      <View style={[styles.predictionCard, {backgroundColor: props.colorScheme === 'dark' ? '#161730' : '#e9f0ff'}]}>\n        <View style={styles.additionalInfosContainer}>\n          <View style={[styles.additionalInfo, {backgroundColor: props.colorScheme === 'dark' ? '#212244' : '#fff'}]}>\n            <Image style={styles.tinyLogo} source={{uri: icon}}/>\n            <View>\n              <Text style={[styles.cryptoSymbol, {color: props.colorScheme === \"dark\" ? '#fff':'#000'}]}>{symbol}</Text>\n              <Text adjustsFontSizeToFit={true} style={[styles.cryptoName, {fontSize: name.length < 9 ? 20:16, color: props.colorScheme === \"dark\" ? '#fff':'#000'}]}>{name}</Text>\n            </View>\n          </View>\n          <View style={{width: '6%'}}/>\n          <View style={[styles.additionalInfo, {flexDirection: 'column', justifyContent:'space-between', backgroundColor: props.colorScheme === 'dark' ? '#212244' : '#fff'}]}>\n              <View style={{width: '100%', flexDirection: 'row', alignItems: 'center'}}>\n                <Icon name=\"arrow-up-circle\" size={30} color='green'/>\n                <View style={{marginLeft: 8}}>\n                  <Text style={{color: props.colorScheme === 'dark' ? '#fff' : '#000', fontSize: 10, fontFamily: 'Poppins_500Medium'}}>Highest Price</Text>\n                  <Text style={{color: props.colorScheme === 'dark' ? '#fff' : '#000', fontFamily: 'Poppins_500Medium'}}>{highestPrice}</Text>\n                </View>\n              </View>\n              <Dash dashThickness={1} dashColor={props.colorScheme === 'dark' ? 'rgba(255,255,255,0.8)' : 'rgba(0,0,0,0.8)'} style={{width:'100%', height:0.5}}/>\n              <View style={{width: '100%', flexDirection: 'row', alignItems: 'center'}}>\n                <Icon name=\"arrow-down-circle\" size={30} color='tomato'/>\n                <View style={{marginLeft: 8}}>\n                  <Text style={{color: props.colorScheme === 'dark' ? '#fff' : '#000', fontSize: 10, fontFamily: 'Poppins_500Medium'}}>Lowest Price</Text>\n                  <Text style={{color: props.colorScheme === 'dark' ? '#fff' : '#000', fontFamily: 'Poppins_500Medium'}}>{lowestPrice}</Text>\n                </View>\n              </View>\n          </View>\n        </View>\n        <View style={[styles.predictionChartContainer, {backgroundColor: props.colorScheme === 'dark' ? '#212244' : '#fff'}]}>\n          <Chart data={data.map(x => [x[0], x[4]])} color={'#2970ff'} period={period[index]} index={index} colorScheme={props.colorScheme} scroll={setScroll} changePeriod={changePeriod}/>\n        </View>\n        <View style={[styles.predictionChartContainer, {backgroundColor: props.colorScheme === 'dark' ? '#212244' : '#fff'}]}>\n          {/* <Chart data={estimatedData.map(x => [x[0], x[4]])} color={willGrow == true ? 'green':'tomato'} index={index} colorScheme={props.colorScheme} scroll={setScroll} changePeriod={changePeriod}/> */}\n        </View>\n      </View>\n    );\n  };\n\n\n  const Pages = () =>{\n    return(\n      <Pagination\n        dotsLength={props.cryptoData.length}\n        activeDotIndex={activeSlide}\n        containerStyle={{ paddingTop: 5, paddingBottom: 5}}\n        dotStyle={{\n            width: 5,\n            height: 5,\n            borderRadius: 5,\n            marginHorizontal: -5,\n            backgroundColor: 'rgba(41, 114, 255, 0.92)'\n        }}\n        inactiveDotStyle={{\n            backgroundColor: props.colorScheme === 'dark' ? 'rgba(255, 255, 255, 0.92)' : 'rgba(0, 0, 0, 0.92)'\n        }}\n        inactiveDotOpacity={0.4}\n        inactiveDotScale={0.6}\n      />\n    );\n  }\n\n\n  return (\n    <View style={{flex: 1, backgroundColor: props.colorScheme === 'dark' ? '#161730' : '#e9f0ff'}}>\n      <View style={[styles.topBar, {backgroundColor: props.colorScheme === 'dark' ? '#161730' : '#e9f0ff'}]}>\n          <Text style={[styles.text, {fontSize: 18, fontFamily: 'Poppins_600SemiBold',  color: props.colorScheme === 'dark' ? '#fff' : '#000'}]}>CryptoSimulator</Text>\n      </View>\n      <View style={styles.container}>\n        <Carousel\n          data={props.cryptoData}\n          renderItem={renderItem}\n          sliderWidth={dimensions.width}\n          itemWidth={dimensions.width}\n          onSnapToItem={(index) => setActiveSlide(index)}\n          scrollEnabled={scrollable}\n          />\n        <Pages/>\n      </View>\n    </View>\n  );\n}\n\n\nconst Chart = (props) =>{\n  const [touchX, setTouchX] = useState(-1);\n  const width = Math.ceil(0.92 * Dimensions.get('window').width - 40);\n\n  const ChartLine = ({ line }) => (\n    <Path\n        key={'line'}\n        d={line}\n        stroke={props.color}\n        fill={'none'}\n        strokeWidth={2}\n    />\n  );\n\n  const Gradient = ({ index }) => (\n    <Defs key={index}>\n        <LinearGradient id={'gradient'} x1={'0%'} y1={'0%'} x2={'0%'} y2={'100%'}>\n            <Stop offset={'0%'} stopColor={props.color} stopOpacity={0.2}/>\n            <Stop offset={'50%'} stopColor={props.color} stopOpacity={0}/>\n        </LinearGradient>\n    </Defs>\n  );\n\n  const panResponder = React.useRef(\n    PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderGrant: (evt) => {\n        props.scroll(false);\n        if(evt.nativeEvent.locationX >= 0 && evt.nativeEvent.locationX <= width){\n          setTouchX(evt.nativeEvent.locationX);\n        }\n      },\n      onPanResponderMove: (evt) => {\n        if(evt.nativeEvent.locationX >= 0 && evt.nativeEvent.locationX <= width){\n          setTouchX(evt.nativeEvent.locationX);\n        }\n      },\n      onPanResponderRelease: () => {\n        props.scroll(true);\n        setTouchX(-1);\n      },\n      onPanResponderTerminate: () => {\n        props.scroll(true);\n        setTouchX(-1);\n      }\n    })\n  ).current;\n\n  function changePeriod(newPeriod){\n    props.changePeriod(props.index, newPeriod);\n  }\n\n  return(\n    <View>\n          <AreaChart\n            style={{ flex:1, height: 60}}\n            data={props.data.map(x => x[1])}\n            contentInset={{ top: 10, bottom: 10 }}\n            curve={shape.curveNatural}\n            svg={{ fill: 'url(#gradient)' }}\n            >\n          </AreaChart>\n{/*       <View style={{ height: 95, flexDirection: 'row', paddingBottom: 15, marginTop: 8 }}>\n        <View {...panResponder.panHandlers}>\n          <AreaChart\n            style={{ flex:1, height: 60}}\n            data={props.data.map(x => x[1])}\n            contentInset={{ top: 10, bottom: 10 }}\n            curve={shape.curveNatural}\n            svg={{ fill: 'url(#gradient)' }}\n            >\n            <Tooltip touchX={touchX} deviceWidth={width} data={props.data}/>\n            <ChartLine/>\n            <Gradient/>\n          </AreaChart>\n        </View>\n      </View> */}\n\n{/*       <View style={{width: '100%', alignItems: 'center', marginBottom: 20}}>\n        <View style={styles.buttonsContainer}>\n          <View style={props.period == 0 ? [styles.button, {backgroundColor: 'rgb(41, 114, 255)'}]:styles.button} onStartShouldSetResponder={() => changePeriod(0)}>\n            <Text style={props.period == 0 ? [styles.buttonText, {color: '#ffffff'}]:[styles.buttonText, {color: props.colorScheme === \"dark\" ? '#fff':'#000'}]}>\n              1W\n            </Text>\n          </View>\n          <View style={props.period == 1 ? [styles.button, {backgroundColor: 'rgb(41, 114, 255)'}]:styles.button} onStartShouldSetResponder={() => changePeriod(1)}>\n            <Text style={props.period == 1 ? [styles.buttonText, {color: '#ffffff'}]:[styles.buttonText, {color: props.colorScheme === \"dark\" ? '#fff':'#000'}]}>\n              1M\n            </Text>\n          </View>\n          <View style={props.period == 2 ? [styles.button, {backgroundColor: 'rgb(41, 114, 255)'}]:styles.button} onStartShouldSetResponder={() => changePeriod(2)}>\n            <Text style={props.period == 2 ? [styles.buttonText, {color: '#ffffff'}]:[styles.buttonText, {color: props.colorScheme === \"dark\" ? '#fff':'#000'}]}>\n              3M\n            </Text>\n          </View>\n          <View style={props.period == 3 ? [styles.button, {backgroundColor: 'rgb(41, 114, 255)'}]:styles.button} onStartShouldSetResponder={() => changePeriod(3)}>\n            <Text style={props.period == 3 ? [styles.buttonText, {color: '#ffffff'}]:[styles.buttonText, {color: props.colorScheme === \"dark\" ? '#fff':'#000'}]}>\n              1Y\n            </Text>\n          </View>\n          <View style={props.period == 4 ? [styles.button, {backgroundColor: 'rgb(41, 114, 255)'}]:styles.button} onStartShouldSetResponder={() => changePeriod(4)}>\n            <Text style={props.period == 4 ? [styles.buttonText, {color: '#ffffff'}]:[styles.buttonText, {color: props.colorScheme === \"dark\" ? '#fff':'#000'}]}>\n              3Y\n            </Text>\n          </View>\n          </View>\n        </View> */}\n      </View>\n  );\n}\n\nconst styles = StyleSheet.create({ \n  container: {\n    flex: 1,\n    marginTop: 40,\n    paddingBottom: 60\n  },\n  topBar: {\n    position: 'absolute',\n    zIndex: 200,\n    top: 0,\n    height: 60,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    width: '100%',\n    flex: 1,\n    paddingBottom: 8,\n  },\n  cryptoSymbol: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 25,\n    marginTop: 8\n  },\n  cryptoName: {\n    fontFamily: 'Poppins_500Medium',\n  },\n  titleContainer: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'flex-start'\n  },\n  tinyLogo: {\n    width: 40,\n    height: 40,\n  },\n  predictionCard:{\n    flex:1,\n    alignItems: 'center',\n    padding: 20,\n    paddingTop: 0\n  },\n  predictionChartContainer: {\n    height: '30%',\n    width: '100%',\n    marginTop: 20,\n    borderRadius: 20,\n    padding: 20\n  },\n  additionalInfosContainer: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignContent: 'space-between',\n    marginTop: 30,\n    textAlign: 'left'\n  },\n  additionalInfo: {\n    width: '47%',\n    height: 150,\n    borderRadius: 20,\n    padding: 20,\n    justifyContent: 'flex-end'\n  },\n  buttonsContainer: {\n    width: '80%', \n    flexDirection: 'row', \n    justifyContent: 'space-between'\n  },\n  button: {\n    paddingTop: 5,\n    paddingBottom: 5,\n    paddingLeft: 10,\n    paddingRight: 10,\n    borderRadius: 30\n  },\n  buttonText: {\n    fontFamily: 'Poppins_600SemiBold',\n    fontSize: 12\n  },\n})"]},"metadata":{},"sourceType":"module"}