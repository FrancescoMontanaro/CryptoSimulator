{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/francescomontanaro/Desktop/Universita\\u0300/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/Statistics.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Carousel, { Pagination } from 'react-native-snap-carousel';\nvar dimensions = Dimensions.get(\"window\");\nexport default function Simulations() {\n  var _this = this;\n\n  var carouselRef = React.useRef();\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeSlide = _useState2[0],\n      setActiveSlide = _useState2[1];\n\n  var carouselItems = [{\n    title: \"Bitcoin\",\n    text: \"Text 1\",\n    icon: 'https://cryptoicons.org/api/icon/btc/1000'\n  }, {\n    title: \"Ethereum\",\n    text: \"Text 2\",\n    icon: 'https://cryptoicons.org/api/icon/eth/1000'\n  }, {\n    title: \"Litecoin\",\n    text: \"Text 3\",\n    icon: 'https://cryptoicons.org/api/icon/ltc/1000'\n  }, {\n    title: \"Caradano\",\n    text: \"Text 4\",\n    icon: 'https://cryptoicons.org/api/icon/ada/1000'\n  }, {\n    title: \"Stellar\",\n    text: \"Text 5\",\n    icon: 'https://cryptoicons.org/api/icon/xlm/1000'\n  }];\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    return React.createElement(View, {\n      style: styles.predictionCard,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.titleContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, React.createElement(Image, {\n      style: styles.tinyLogo,\n      source: {\n        uri: item.icon\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), React.createElement(Text, {\n      style: [styles.text, {\n        marginLeft: 10,\n        marginTop: 5\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, item.title)));\n  };\n\n  var Pages = function Pages() {\n    return React.createElement(Pagination, {\n      dotsLength: carouselItems.length,\n      activeDotIndex: activeSlide,\n      containerStyle: {\n        marginBottom: 0\n      },\n      dotStyle: {\n        width: 5,\n        height: 5,\n        borderRadius: 5,\n        marginHorizontal: -5,\n        backgroundColor: 'rgba(41, 114, 255, 0.92)'\n      },\n      inactiveDotStyle: {\n        backgroundColor: 'rgba(0, 0, 0, 0.92)'\n      },\n      inactiveDotOpacity: 0.4,\n      inactiveDotScale: 0.6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: '#e9f0ff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.topBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: [styles.text, {\n      fontSize: 18\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"CryptoSimulator\")), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, React.createElement(Pages, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), React.createElement(Carousel, {\n    ref: carouselRef,\n    data: carouselItems,\n    renderItem: renderItem,\n    sliderWidth: dimensions.width,\n    itemWidth: dimensions.width,\n    onSnapToItem: function onSnapToItem(index) {\n      return setActiveSlide(index);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 50\n  },\n  topBar: {\n    position: 'absolute',\n    zIndex: 200,\n    top: 0,\n    height: 60,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    width: '100%',\n    flex: 1,\n    backgroundColor: \"#fff\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 5,\n    paddingBottom: 8\n  },\n  text: {\n    fontFamily: 'Poppins_600SemiBold',\n    fontSize: 30,\n    color: '#000000'\n  },\n  titleContainer: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'flex-start'\n  },\n  tinyLogo: {\n    width: 50,\n    height: 50\n  },\n  predictionCard: {\n    backgroundColor: '#e9f0ff',\n    padding: 20,\n    paddingTop: 0,\n    height: '100%'\n  },\n  text: {\n    fontFamily: 'Poppins_600SemiBold',\n    fontSize: 30,\n    color: '#000000'\n  }\n});","map":{"version":3,"sources":["/Users/francescomontanaro/Desktop/UniversitaÌ€/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/Statistics.js"],"names":["React","useState","Carousel","Pagination","dimensions","Dimensions","get","Simulations","carouselRef","useRef","activeSlide","setActiveSlide","carouselItems","title","text","icon","renderItem","item","index","styles","predictionCard","titleContainer","tinyLogo","uri","marginLeft","marginTop","Pages","length","marginBottom","width","height","borderRadius","marginHorizontal","backgroundColor","flex","topBar","fontSize","container","StyleSheet","create","position","zIndex","top","justifyContent","alignItems","shadowColor","shadowOffset","shadowOpacity","shadowRadius","paddingBottom","fontFamily","color","flexDirection","padding","paddingTop"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {StyleSheet, Text, View, Dimensions, Image} from 'react-native';\nimport Carousel, {Pagination} from 'react-native-snap-carousel';\n\nconst dimensions = Dimensions.get(\"window\");\n\nexport default function Simulations() {\n  const carouselRef = React.useRef();\n  const [activeSlide, setActiveSlide] = useState(0);\n\n  const carouselItems = [\n    {\n        title:\"Bitcoin\",\n        text: \"Text 1\",\n        icon: 'https://cryptoicons.org/api/icon/btc/1000'\n    },\n    {\n        title:\"Ethereum\",\n        text: \"Text 2\",\n        icon: 'https://cryptoicons.org/api/icon/eth/1000'\n    },\n    {\n        title:\"Litecoin\",\n        text: \"Text 3\",\n        icon: 'https://cryptoicons.org/api/icon/ltc/1000'\n    },\n    {\n        title:\"Caradano\",\n        text: \"Text 4\",\n        icon: 'https://cryptoicons.org/api/icon/ada/1000'\n    },\n    {\n      title:\"Stellar\",\n      text: \"Text 5\",\n      icon: 'https://cryptoicons.org/api/icon/xlm/1000'\n  }\n  ]\n\n  const renderItem = ({item, index}) => {\n    return (\n      <View style={styles.predictionCard}>\n        <View style={styles.titleContainer}>\n          <Image style={styles.tinyLogo} source={{uri: item.icon}}/>\n          <Text style={[styles.text, {marginLeft: 10, marginTop: 5}]}>{item.title}</Text>\n        </View>\n      </View>\n    );\n  };\n\n\n  const Pages = () =>{\n    return(\n      <Pagination\n        dotsLength={carouselItems.length}\n        activeDotIndex={activeSlide}\n        containerStyle={{marginBottom: 0}}\n        dotStyle={{\n            width: 5,\n            height: 5,\n            borderRadius: 5,\n            marginHorizontal: -5,\n            backgroundColor: 'rgba(41, 114, 255, 0.92)'\n        }}\n        inactiveDotStyle={{\n            backgroundColor: 'rgba(0, 0, 0, 0.92)'\n        }}\n        inactiveDotOpacity={0.4}\n        inactiveDotScale={0.6}\n      />\n    );\n  }\n\n\n  return (\n    <View style={{flex: 1, backgroundColor: '#e9f0ff'}}>\n      <View style={styles.topBar}>\n          <Text style={[styles.text, {fontSize: 18}]}>CryptoSimulator</Text>\n      </View>\n      <View style={styles.container}>\n      <Pages/>\n      <Carousel\n          ref={carouselRef}\n          data={carouselItems}\n          renderItem={renderItem}\n          sliderWidth={dimensions.width}\n          itemWidth={dimensions.width}\n          onSnapToItem={(index) => setActiveSlide(index)}\n        />\n      </View>\n    </View>\n/*     <View style={styles.container}>\n      <View>\n        <Carousel\n          ref={carouselRef}\n          data={carouselItems}\n          renderItem={renderItem}\n          sliderWidth={dimensions.width}\n          itemWidth={dimensions.width}\n          style={{justifyContent: 'center', backgroundColor: '#e9f0ff'}}\n        />\n      </View>\n    </View> */\n);\n}\n\nconst styles = StyleSheet.create({ \n  container: {\n    flex: 1,\n    marginTop: 50,\n  },\n  topBar: {\n    position: 'absolute',\n    zIndex: 200,\n    top: 0,\n    height: 60,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    width: '100%',\n    flex: 1,\n    backgroundColor: \"#fff\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 5,\n    paddingBottom: 8\n  },\n  text: {\n    fontFamily: 'Poppins_600SemiBold',\n    fontSize: 30,\n    color: '#000000'\n  },\n  titleContainer: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'flex-start'\n  },\n  tinyLogo: {\n    width: 50,\n    height: 50,\n  },\n  predictionCard:{\n    backgroundColor: '#e9f0ff',\n    padding: 20,\n    paddingTop: 0,\n    height: '100%'\n  },\n  text: {\n    fontFamily: 'Poppins_600SemiBold',\n    fontSize: 30,\n    color: '#000000'\n  }\n})"]},"metadata":{},"sourceType":"module"}