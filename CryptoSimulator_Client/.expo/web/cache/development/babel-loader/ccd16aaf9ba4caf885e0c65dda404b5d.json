{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"/Users/francescomontanaro/Desktop/Universita\\u0300/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/Predictions.js\",\n    _this2 = this;\n\nimport 'react-native-gesture-handler';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useFonts, Poppins_300Light, Poppins_400Regular, Poppins_500Medium, Poppins_600SemiBold } from '@expo-google-fonts/poppins';\nimport { AppLoading } from 'expo';\nimport * as firebase from 'firebase';\nimport \"firebase/functions\";\nimport { AreaChart } from 'react-native-svg-charts';\nimport * as shape from 'd3-shape';\nimport { Defs, LinearGradient, Stop, Path } from 'react-native-svg';\nimport Tooltip from \"./Tooltip\";\nimport PriceViewer from \"./PriceViewer\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nexport default function Predictions() {\n  var _this = this;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cryptoData = _useState4[0],\n      setCryptoData = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      scrollable = _useState6[0],\n      setScrollable = _useState6[1];\n\n  var _useFonts = useFonts({\n    Poppins_300Light: Poppins_300Light,\n    Poppins_400Regular: Poppins_400Regular,\n    Poppins_500Medium: Poppins_500Medium,\n    Poppins_600SemiBold: Poppins_600SemiBold\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  var setScroll = function setScroll(scroll) {\n    setScrollable(scroll);\n  };\n\n  var endDate = new Date();\n  endDate = endDate.getFullYear() + \"-\" + (endDate.getMonth() + 1) + \"-\" + endDate.getDate();\n  var startDate = new Date(new Date().getTime() - 3 * 365 * 24 * 60 * 60 * 1000);\n  startDate = startDate.getFullYear() + \"-\" + (startDate.getMonth() + 1) + \"-\" + startDate.getDate();\n  useEffect(function () {\n    if (loading && !fontsLoaded) {\n      firebase.functions().httpsCallable('getCryptoData')({\n        assets: ['BTC', 'ETH', 'RPC'],\n        start: startDate,\n        end: endDate,\n        interval: '1d'\n      }).then(function (response) {\n        if (response.data.statusCode == 200) {\n          setCryptoData(response.data.body);\n          setLoading(false);\n        } else {\n          console.error(response.data.body);\n        }\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, []);\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }\n    });\n  } else {\n    if (!loading) {\n      return React.createElement(SafeAreaView, {\n        style: {\n          flex: 1,\n          backgroundColor: '#e9f0ff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }\n      }, React.createElement(ScrollView, {\n        contentContainerStyle: styles.container,\n        showsVerticalScrollIndicator: false,\n        scrollEnabled: scrollable,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, cryptoData.map(function (crypto) {\n        return React.createElement(Chart, {\n          name: crypto.name,\n          symbol: crypto.symbol,\n          scroll: setScroll,\n          data: crypto.values.map(function (x) {\n            return [x[0], x[4]];\n          }),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 37\n          }\n        });\n      })));\n    } else {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, \"LOADING...\"));\n    }\n  }\n}\n;\n\nvar Chart = function Chart(props) {\n  var allData = props.data;\n\n  var _useState7 = useState(allData.filter(function (sample) {\n    return sample[0] >= new Date().getTime() - 30 * 24 * 60 * 60 * 1000;\n  })),\n      _useState8 = _slicedToArray(_useState7, 2),\n      data = _useState8[0],\n      setData = _useState8[1];\n\n  var _useState9 = useState([0, 1, 0, 0, 0]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      period = _useState10[0],\n      setPeriod = _useState10[1];\n\n  var _useState11 = useState(-1),\n      _useState12 = _slicedToArray(_useState11, 2),\n      touchX = _useState12[0],\n      setTouchX = _useState12[1];\n\n  var width = Math.ceil(0.92 * Dimensions.get('window').width - 40);\n\n  var _useState13 = useState(new Animated.ValueXY()),\n      _useState14 = _slicedToArray(_useState13, 2),\n      pan = _useState14[0],\n      setPan = _useState14[1];\n\n  var _useState15 = useState(5),\n      _useState16 = _slicedToArray(_useState15, 2),\n      shadowRadius = _useState16[0],\n      setElevation = _useState16[1];\n\n  var _useState17 = useState([1, 1]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      zIndex = _useState18[0],\n      setZIndex = _useState18[1];\n\n  var ChartLine = function ChartLine(_ref) {\n    var line = _ref.line;\n    return React.createElement(Path, {\n      key: 'line',\n      d: line,\n      stroke: 'rgb(41, 114, 255)',\n      fill: 'none',\n      strokeWidth: 2,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }\n    });\n  };\n\n  var Gradient = function Gradient(_ref2) {\n    var index = _ref2.index;\n    return React.createElement(Defs, {\n      key: index,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }\n    }, React.createElement(LinearGradient, {\n      id: 'gradient',\n      x1: '0%',\n      y1: '0%',\n      x2: '0%',\n      y2: '100%',\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, React.createElement(Stop, {\n      offset: '0%',\n      stopColor: 'rgb(41, 114, 255)',\n      stopOpacity: 0.2,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }), React.createElement(Stop, {\n      offset: '50%',\n      stopColor: 'rgb(41, 114, 255)',\n      stopOpacity: 0,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  var panResponder = React.useRef(PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n      return true;\n    },\n    onPanResponderGrant: function onPanResponderGrant(evt) {\n      props.scroll(false);\n\n      if (evt.nativeEvent.locationX >= 0 && evt.nativeEvent.locationX <= width) {\n        setTouchX(evt.nativeEvent.locationX);\n      }\n    },\n    onPanResponderMove: function onPanResponderMove(evt) {\n      if (evt.nativeEvent.locationX >= 0 && evt.nativeEvent.locationX <= width) {\n        setTouchX(evt.nativeEvent.locationX);\n      }\n    },\n    onPanResponderRelease: function onPanResponderRelease() {\n      props.scroll(true);\n      setTouchX(-1);\n    },\n    onPanResponderTerminate: function onPanResponderTerminate() {\n      props.scroll(true);\n      setTouchX(-1);\n    }\n  })).current;\n  var Drag = React.useRef(PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n      return true;\n    },\n    onPanResponderGrant: function onPanResponderGrant() {\n      props.scroll(false);\n      setElevation(20);\n      setZIndex([100, 100]);\n      pan.setOffset({\n        x: 0,\n        y: 0\n      });\n    },\n    onPanResponderMove: Animated.event([null, {\n      dx: pan.x,\n      dy: pan.y\n    }], {\n      useNativeDriver: false\n    }),\n    onPanResponderRelease: function onPanResponderRelease() {\n      props.scroll(true);\n      setElevation(4);\n      setZIndex([1, 1]);\n      pan.flattenOffset();\n      setPan(new Animated.ValueXY());\n    },\n    onPanResponderTerminate: function onPanResponderTerminate() {\n      props.scroll(true);\n      setElevation(4);\n      setZIndex([1, 1]);\n      pan.flattenOffset();\n      setPan(new Animated.ValueXY());\n    }\n  })).current;\n\n  function buttonCLicked(index) {\n    var newPeriod = [0, 0, 0, 0, 0];\n    newPeriod[index] = 1;\n    setPeriod(newPeriod);\n    var currentDate = new Date().getTime();\n    var newData;\n\n    if (index == 0) {\n      var end = currentDate - 7 * 24 * 60 * 60 * 1000;\n      newData = allData.filter(function (sample) {\n        return sample[0] >= end;\n      });\n    } else if (index == 1) {\n      var end = currentDate - 30 * 24 * 60 * 60 * 1000;\n      newData = allData.filter(function (sample) {\n        return sample[0] >= end;\n      });\n    } else if (index == 2) {\n      var end = currentDate - 90 * 24 * 60 * 60 * 1000;\n      newData = allData.filter(function (sample) {\n        return sample[0] >= end;\n      });\n    } else if (index == 3) {\n      var end = currentDate - 365 * 24 * 60 * 60 * 1000;\n      newData = allData.filter(function (sample) {\n        return sample[0] >= end;\n      });\n    } else if (index == 4) {\n      newData = allData;\n    }\n\n    setData(newData);\n  }\n\n  return React.createElement(Animated.View, {\n    style: {\n      width: '100%',\n      alignItems: 'center',\n      transform: [{\n        translateX: 0\n      }, {\n        translateY: pan.y\n      }]\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: [{\n      shadowRadius: shadowRadius,\n      zIndex: zIndex[0],\n      elevation: zIndex[1]\n    }, styles.chartContainer],\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      textAlign: 'left'\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.cryptoSymbol,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, props.symbol), React.createElement(View, _extends({\n    style: {\n      width: 20\n    }\n  }, Drag.panHandlers, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }), React.createElement(Icon, {\n    name: \"grip-lines\",\n    size: 20,\n    color: \"#c0c0c7\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }))), React.createElement(Text, {\n    style: styles.cryptoName,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }, props.name)), React.createElement(View, {\n    style: {\n      flex: 1,\n      height: 20,\n      textAlign: 'center',\n      marginBottom: 20\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, React.createElement(PriceViewer, {\n    touchX: touchX,\n    deviceWidth: width,\n    data: data,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: {\n      height: 80,\n      flexDirection: 'row',\n      marginBottom: 15,\n      marginTop: 15\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, React.createElement(View, _extends({\n    style: {\n      flex: 1\n    }\n  }, panResponder.panHandlers, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }), React.createElement(AreaChart, {\n    style: {\n      flex: 1,\n      height: 80\n    },\n    data: data.map(function (x) {\n      return x[1];\n    }),\n    contentInset: {\n      top: 10,\n      bottom: 10\n    },\n    curve: shape.curveNatural,\n    svg: {\n      fill: 'url(#gradient)'\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, React.createElement(Tooltip, {\n    touchX: touchX,\n    deviceWidth: width,\n    data: data,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }), React.createElement(ChartLine, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }), React.createElement(Gradient, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  })))), React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center'\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.buttonsContainer,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: period[0] == 1 ? [styles.button, {\n      backgroundColor: 'rgb(41, 114, 255)'\n    }] : styles.button,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      return buttonCLicked(0);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: period[0] == 1 ? [styles.buttonText, {\n      color: '#ffffff'\n    }] : styles.buttonText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }, \"1W\")), React.createElement(View, {\n    style: period[1] == 1 ? [styles.button, {\n      backgroundColor: 'rgb(41, 114, 255)'\n    }] : styles.button,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      return buttonCLicked(1);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: period[1] == 1 ? [styles.buttonText, {\n      color: '#ffffff'\n    }] : styles.buttonText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }, \"1M\")), React.createElement(View, {\n    style: period[2] == 1 ? [styles.button, {\n      backgroundColor: 'rgb(41, 114, 255)'\n    }] : styles.button,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      return buttonCLicked(2);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: period[2] == 1 ? [styles.buttonText, {\n      color: '#ffffff'\n    }] : styles.buttonText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 15\n    }\n  }, \"3M\")), React.createElement(View, {\n    style: period[3] == 1 ? [styles.button, {\n      backgroundColor: 'rgb(41, 114, 255)'\n    }] : styles.button,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      return buttonCLicked(3);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: period[3] == 1 ? [styles.buttonText, {\n      color: '#ffffff'\n    }] : styles.buttonText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }\n  }, \"1Y\")), React.createElement(View, {\n    style: period[4] == 1 ? [styles.button, {\n      backgroundColor: 'rgb(41, 114, 255)'\n    }] : styles.button,\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      return buttonCLicked(4);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: period[4] == 1 ? [styles.buttonText, {\n      color: '#ffffff'\n    }] : styles.buttonText,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 15\n    }\n  }, \"3Y\"))))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    paddingTop: 30,\n    paddingBottom: 100\n  },\n  chartContainer: {\n    position: 'none',\n    backgroundColor: '#ffffff',\n    width: '92%',\n    borderRadius: 20,\n    padding: 20,\n    marginBottom: 20,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25\n  },\n  cryptoSymbol: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 25,\n    color: '#000000'\n  },\n  cryptoName: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 20,\n    color: '#000000'\n  },\n  currentPrice: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 18,\n    color: '#000000',\n    margin: 0\n  },\n  currentDate: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 12,\n    color: '#000000',\n    margin: 0\n  },\n  text: {\n    fontFamily: 'Poppins_600SemiBold',\n    fontSize: 30,\n    color: '#000000'\n  },\n  buttonsContainer: {\n    width: '80%',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  button: {\n    paddingTop: 5,\n    paddingBottom: 5,\n    paddingLeft: 10,\n    paddingRight: 10,\n    borderRadius: 30\n  },\n  buttonText: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 12,\n    color: '#000000'\n  },\n  addChart: {\n    width: '92%',\n    height: 300,\n    borderRadius: 20,\n    borderColor: '#000',\n    backgroundColor: 'red'\n  }\n});","map":{"version":3,"sources":["/Users/francescomontanaro/Desktop/Università/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/components/Predictions.js"],"names":["React","useState","useEffect","useRef","useFonts","Poppins_300Light","Poppins_400Regular","Poppins_500Medium","Poppins_600SemiBold","AppLoading","firebase","AreaChart","shape","Defs","LinearGradient","Stop","Path","Tooltip","PriceViewer","Icon","Predictions","loading","setLoading","cryptoData","setCryptoData","scrollable","setScrollable","fontsLoaded","setScroll","scroll","endDate","Date","getFullYear","getMonth","getDate","startDate","getTime","functions","httpsCallable","assets","start","end","interval","then","response","data","statusCode","body","console","error","catch","flex","backgroundColor","styles","container","map","crypto","name","symbol","values","x","text","Chart","props","allData","filter","sample","setData","period","setPeriod","touchX","setTouchX","width","Math","ceil","Dimensions","get","Animated","ValueXY","pan","setPan","shadowRadius","setElevation","zIndex","setZIndex","ChartLine","line","Gradient","index","panResponder","PanResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","evt","nativeEvent","locationX","onPanResponderMove","onPanResponderRelease","onPanResponderTerminate","current","Drag","setOffset","y","event","dx","dy","useNativeDriver","flattenOffset","buttonCLicked","newPeriod","currentDate","newData","alignItems","transform","translateX","translateY","elevation","chartContainer","textAlign","flexDirection","justifyContent","cryptoSymbol","panHandlers","cryptoName","height","marginBottom","marginTop","top","bottom","curveNatural","fill","buttonsContainer","button","buttonText","color","StyleSheet","flexGrow","paddingTop","paddingBottom","position","borderRadius","padding","shadowColor","shadowOffset","shadowOpacity","fontFamily","fontSize","currentPrice","margin","paddingLeft","paddingRight","addChart","borderColor"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\nimport { Animated, StyleSheet, Text, ScrollView, View, PanResponder, Dimensions, SafeAreaView} from 'react-native';\nimport React, {useState,useEffect,useRef} from 'react';\nimport { useFonts, Poppins_300Light, Poppins_400Regular, Poppins_500Medium, Poppins_600SemiBold} from '@expo-google-fonts/poppins';\nimport { AppLoading } from 'expo';\nimport * as firebase from 'firebase'\nimport \"firebase/functions\";\nimport { AreaChart} from 'react-native-svg-charts'\nimport * as shape from 'd3-shape'\nimport { Defs, LinearGradient, Stop, Path} from 'react-native-svg'\nimport Tooltip from './Tooltip'\nimport PriceViewer from './PriceViewer'\nimport Icon from 'react-native-vector-icons/FontAwesome5'\n\n\nexport default function Predictions() {\n  const [loading, setLoading] = useState(true);\n  const [cryptoData, setCryptoData] = useState([]);\n  const [scrollable, setScrollable] = useState(true);\n  let [fontsLoaded] = useFonts({\n    Poppins_300Light,\n    Poppins_400Regular,\n    Poppins_500Medium,\n    Poppins_600SemiBold\n  });\n\n  const setScroll = (scroll) => {\n    setScrollable(scroll);\n  }\n\n  var endDate = new Date();\n  endDate = endDate.getFullYear() + \"-\" + (endDate.getMonth() + 1) + \"-\" + endDate.getDate();\n\n  var startDate = new Date((new Date()).getTime() - 3*365*24*60*60*1000);\n  startDate = startDate.getFullYear() + \"-\" + (startDate.getMonth() + 1) + \"-\" + startDate.getDate();\n\n  useEffect(()=>{\n    if(loading && !fontsLoaded){\n    firebase.functions().httpsCallable('getCryptoData')({assets: ['BTC', 'ETH', 'RPC'], start: startDate, end: endDate, interval: '1d'}).then(response =>{\n      if(response.data.statusCode == 200){\n        setCryptoData(response.data.body);\n        setLoading(false);\n      }\n      else{\n        console.error(response.data.body);\n      }\n    }).catch(error =>{\n      console.error(error);\n    })\n  }},[])\n\n  if (!fontsLoaded) {\n    return <AppLoading/>;\n  }\n  else{\n    if(!loading){\n    return (\n      <SafeAreaView style={{flex: 1, backgroundColor:'#e9f0ff'}}>\n        <ScrollView contentContainerStyle={styles.container} showsVerticalScrollIndicator={false} scrollEnabled={scrollable}>\n          {cryptoData.map((crypto)=><Chart name={crypto.name} symbol={crypto.symbol} scroll={setScroll} data={(crypto.values).map(x => [x[0], x[4]])}></Chart>)}\n        </ScrollView>\n      </SafeAreaView>\n    );\n    }\n    else{\n      return(\n        <View style={styles.container}>\n          <Text style={styles.text}>\n              LOADING...\n          </Text>\n        </View>\n      );\n    }\n  }\n};\n\nconst Chart = (props) => {\n  const allData = props.data;\n  const [data, setData] = useState(allData.filter(sample => sample[0] >= ((new Date).getTime() - 30*24*60*60*1000)));\n  const [period, setPeriod] = useState([0,1,0,0,0]);\n  const [touchX, setTouchX] = useState(-1);\n  const width = Math.ceil(0.92 * Dimensions.get('window').width - 40);\n  //const pan = useRef(new Animated.ValueXY()).current;\n  const [pan, setPan] = useState(new Animated.ValueXY());\n  const [shadowRadius, setElevation] = useState(5);\n  const [zIndex, setZIndex] = useState([1,1]);\n  \n  const ChartLine = ({ line }) => (\n    <Path\n        key={'line'}\n        d={line}\n        stroke={'rgb(41, 114, 255)'}\n        fill={'none'}\n        strokeWidth={2}\n    />\n  )\n\n  const Gradient = ({ index }) => (\n    <Defs key={index}>\n        <LinearGradient id={'gradient'} x1={'0%'} y1={'0%'} x2={'0%'} y2={'100%'}>\n            <Stop offset={'0%'} stopColor={'rgb(41, 114, 255)'} stopOpacity={0.2}/>\n            <Stop offset={'50%'} stopColor={'rgb(41, 114, 255)'} stopOpacity={0}/>\n        </LinearGradient>\n    </Defs>\n  )\n\n\n  const panResponder = React.useRef(\n    PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderGrant: (evt) => {\n        props.scroll(false);\n        if(evt.nativeEvent.locationX >= 0 && evt.nativeEvent.locationX <= width){\n          setTouchX(evt.nativeEvent.locationX);\n        }\n      },\n      onPanResponderMove: (evt) => {\n        if(evt.nativeEvent.locationX >= 0 && evt.nativeEvent.locationX <= width){\n          setTouchX(evt.nativeEvent.locationX);\n        }\n      },\n      onPanResponderRelease: () => {\n        props.scroll(true);\n        setTouchX(-1);\n      },\n      onPanResponderTerminate: () => {\n        props.scroll(true);\n        setTouchX(-1);\n      }\n    })\n  ).current;\n\n\n  const Drag = React.useRef(\n    PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderGrant: () => {\n        props.scroll(false);\n        setElevation(20);\n        setZIndex([100,100]);\n        pan.setOffset({\n          x: 0,\n          y: 0\n        });\n      },\n      onPanResponderMove: Animated.event(\n        [\n          null,\n          { dx: pan.x, dy: pan.y }\n        ],\n        {useNativeDriver: false}\n      ),\n      onPanResponderRelease: () => {\n        props.scroll(true);\n        setElevation(4);\n        setZIndex([1,1]);\n        pan.flattenOffset();\n        setPan(new Animated.ValueXY());\n      },\n      onPanResponderTerminate: () => {\n        props.scroll(true);\n        setElevation(4);\n        setZIndex([1,1]);\n        pan.flattenOffset();\n        setPan(new Animated.ValueXY());\n      }\n    })\n  ).current;\n\n  function buttonCLicked(index){\n    var newPeriod = [0,0,0,0,0];\n    newPeriod[index] = 1;\n    setPeriod(newPeriod);\n    var currentDate = (new Date()).getTime();\n    var newData;\n\n    if(index == 0){\n      var end = (currentDate - 7*24*60*60*1000);\n      newData = allData.filter(sample => sample[0] >= end);\n    }\n    else if(index == 1){\n      var end = (currentDate - 30*24*60*60*1000);\n      newData = allData.filter(sample => sample[0] >= end);\n    }\n    else if(index == 2){\n      var end = (currentDate - 90*24*60*60*1000);\n      newData = allData.filter(sample => sample[0] >= end);\n    }\n    else if(index == 3){\n      var end = (currentDate - 365*24*60*60*1000);\n      newData = allData.filter(sample => sample[0] >= end);\n    }\n    else if(index == 4){\n      newData = allData;\n    }\n    setData(newData);\n  }\n\n\n  return (\n    <Animated.View style={{width:'100%', alignItems: 'center', transform: [{ translateX: 0 }, { translateY: pan.y }]}}>\n      <View style={[{shadowRadius: shadowRadius, zIndex: zIndex[0], elevation: zIndex[1]}, styles.chartContainer]}>\n        <View style={{flex: 1, textAlign: 'left'}}>\n          <View style={{flex: 1, flexDirection: 'row', justifyContent: 'space-between'}}>\n            <Text style={styles.cryptoSymbol}>{props.symbol}</Text>\n            <View style={{width: 20}} {...Drag.panHandlers}>\n              <Icon name=\"grip-lines\" size={20} color=\"#c0c0c7\" />\n            </View>\n          </View>\n          <Text style={styles.cryptoName}>{props.name}</Text>\n        </View>\n\n        <View style={{flex: 1, height: 20, textAlign: 'center', marginBottom: 20}}>\n          <PriceViewer touchX={touchX} deviceWidth={width} data={data}></PriceViewer>\n        </View>\n\n        <View style={{ height: 80, flexDirection: 'row', marginBottom: 15, marginTop: 15 }}>\n          <View style={{ flex: 1}} {...panResponder.panHandlers}>\n            <AreaChart\n              style={{ flex:1, height: 80}}\n              data={data.map(x => x[1])}\n              contentInset={{ top: 10, bottom: 10 }}\n              curve={shape.curveNatural}\n              svg={{ fill: 'url(#gradient)' }}\n              >\n              <Tooltip touchX={touchX} deviceWidth={width} data={data}/>\n              <ChartLine/>\n              <Gradient/>\n            </AreaChart>\n          </View>\n        </View>\n\n        <View style={{flex: 1, alignItems: 'center'}}>\n          <View style={styles.buttonsContainer}>\n            <View style={period[0] == 1 ? [styles.button, {backgroundColor: 'rgb(41, 114, 255)'}]:styles.button} onStartShouldSetResponder={() => buttonCLicked(0)}>\n              <Text style={period[0] == 1 ? [styles.buttonText, {color: '#ffffff'}]:styles.buttonText}>\n                1W\n              </Text>\n            </View>\n            <View style={period[1] == 1 ? [styles.button, {backgroundColor: 'rgb(41, 114, 255)'}]:styles.button} onStartShouldSetResponder={() => buttonCLicked(1)}>\n              <Text style={period[1] == 1 ? [styles.buttonText, {color: '#ffffff'}]:styles.buttonText}>\n                1M\n              </Text>\n            </View>\n            <View style={period[2] == 1 ? [styles.button, {backgroundColor: 'rgb(41, 114, 255)'}]:styles.button} onStartShouldSetResponder={() => buttonCLicked(2)}>\n              <Text style={period[2] == 1 ? [styles.buttonText, {color: '#ffffff'}]:styles.buttonText}>\n                3M\n              </Text>\n            </View>\n            <View style={period[3] == 1 ? [styles.button, {backgroundColor: 'rgb(41, 114, 255)'}]:styles.button} onStartShouldSetResponder={() => buttonCLicked(3)}>\n              <Text style={period[3] == 1 ? [styles.buttonText, {color: '#ffffff'}]:styles.buttonText}>\n                1Y\n              </Text>\n            </View>\n            <View style={period[4] == 1 ? [styles.button, {backgroundColor: 'rgb(41, 114, 255)'}]:styles.button} onStartShouldSetResponder={() => buttonCLicked(4)}>\n              <Text style={period[4] == 1 ? [styles.buttonText, {color: '#ffffff'}]:styles.buttonText}>\n                3Y\n              </Text>\n            </View>\n          </View>\n        </View>\n      </View>\n    </Animated.View>\n  );\n};\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    paddingTop: 30,\n    paddingBottom: 100,\n  },\n  chartContainer: {\n    position: 'none',\n    backgroundColor: '#ffffff',\n    width: '92%',\n    borderRadius: 20,\n    padding: 20,\n    marginBottom: 20,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25\n  },\n  cryptoSymbol: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 25,\n    color: '#000000'\n  },\n  cryptoName: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 20,\n    color: '#000000'\n  },\n  currentPrice: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 18,\n    color: '#000000',\n    margin: 0\n  },\n  currentDate: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 12,\n    color: '#000000',\n    margin: 0\n  },\n  text: {\n    fontFamily: 'Poppins_600SemiBold',\n    fontSize: 30,\n    color: '#000000'\n  },\n  buttonsContainer: {\n    width: '80%', \n    flexDirection: 'row', \n    justifyContent: 'space-between'\n  },\n  button: {\n    paddingTop: 5,\n    paddingBottom: 5,\n    paddingLeft: 10,\n    paddingRight: 10,\n    borderRadius: 30\n  },\n  buttonText: {\n    fontFamily: 'Poppins_500Medium',\n    fontSize: 12,\n    color: '#000000'\n  },\n  addChart: {\n    width: '92%',\n    height: 300,\n    borderRadius: 20,\n    borderColor: '#000',\n    backgroundColor: 'red'\n  }\n});"]},"metadata":{},"sourceType":"module"}