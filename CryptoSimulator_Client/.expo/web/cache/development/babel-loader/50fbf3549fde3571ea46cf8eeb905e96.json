{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport * as firebase from 'firebase';\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/functions\";\nimport \"firebase/storage\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyB2OVyz8NfVJNn013TSEOr_V3YsIBeNRzY\",\n  authDomain: \"cryptosimulator-2020.firebaseapp.com\",\n  projectId: \"cryptosimulator-2020\",\n  storageBucket: \"cryptosimulator-2020.appspot.com\",\n  messagingSenderId: \"923198596355\",\n  appId: \"1:923198596355:web:0795e3fd85aeb627d1b536\",\n  measurementId: \"G-77RHN7PBGX\"\n};\nfirebase.initializeApp(firebaseConfig);\nvar getCryptoList = firebase.functions().httpsCallable('getCryptoList');\ngetCryptoList().then(function (response) {\n  resolve(response);\n}).catch(function (error) {\n  reject(error);\n});\n\nvar Firebase = function () {\n  function Firebase() {\n    _classCallCheck(this, Firebase);\n  }\n\n  _createClass(Firebase, null, [{\n    key: \"init\",\n    value: function init() {\n      firebase.initializeApp(firebaseConfig);\n      Firebase.auth = firebase.auth();\n      Firebase.auth.setPersistence(firebase.auth.Auth.Persistence.LOCAL);\n      Firebase.firestore = firebase.firestore();\n      Firebase.storage = firebase.storage();\n      Firebase.functions = firebase.functions();\n    }\n  }]);\n\n  return Firebase;\n}();\n\nexport { Firebase as default };","map":{"version":3,"sources":["/Users/francescomontanaro/Desktop/UniversitaÌ€/Corsi/Design and Implementation of Mobile Applications/CryptoSimulator_Client/APIs/Firebase.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","getCryptoList","functions","httpsCallable","then","response","resolve","catch","error","reject","Firebase","auth","setPersistence","Auth","Persistence","LOCAL","firestore","storage"],"mappings":";;AAAA,OAAO,KAAKA,QAAZ,MAA0B,UAA1B;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AACA,OAAO,oBAAP;AACA,OAAO,kBAAP;AAEA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,sCAFO;AAGnBC,EAAAA,SAAS,EAAE,sBAHQ;AAInBC,EAAAA,aAAa,EAAE,kCAJI;AAKnBC,EAAAA,iBAAiB,EAAE,cALA;AAMnBC,EAAAA,KAAK,EAAE,2CANY;AAOnBC,EAAAA,aAAa,EAAE;AAPI,CAAvB;AAUAR,QAAQ,CAACS,aAAT,CAAuBR,cAAvB;AAEA,IAAIS,aAAa,GAAGV,QAAQ,CAACW,SAAT,GAAqBC,aAArB,CAAmC,eAAnC,CAApB;AACAF,aAAa,GAAGG,IAAhB,CAAqB,UAAAC,QAAQ,EAAG;AAC5BC,EAAAA,OAAO,CAACD,QAAD,CAAP;AACH,CAFD,EAEGE,KAFH,CAES,UAAAC,KAAK,EAAG;AACbC,EAAAA,MAAM,CAACD,KAAD,CAAN;AACH,CAJD;;IAMqBE,Q;;;;;;;2BAMH;AACZnB,MAAAA,QAAQ,CAACS,aAAT,CAAuBR,cAAvB;AACAkB,MAAAA,QAAQ,CAACC,IAAT,GAAgBpB,QAAQ,CAACoB,IAAT,EAAhB;AACAD,MAAAA,QAAQ,CAACC,IAAT,CAAcC,cAAd,CAA6BrB,QAAQ,CAACoB,IAAT,CAAcE,IAAd,CAAmBC,WAAnB,CAA+BC,KAA5D;AACAL,MAAAA,QAAQ,CAACM,SAAT,GAAqBzB,QAAQ,CAACyB,SAAT,EAArB;AACAN,MAAAA,QAAQ,CAACO,OAAT,GAAmB1B,QAAQ,CAAC0B,OAAT,EAAnB;AACAP,MAAAA,QAAQ,CAACR,SAAT,GAAqBX,QAAQ,CAACW,SAAT,EAArB;AACD;;;;;;SAbgBQ,Q","sourcesContent":["import * as firebase from 'firebase'\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/functions\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyB2OVyz8NfVJNn013TSEOr_V3YsIBeNRzY\",\n    authDomain: \"cryptosimulator-2020.firebaseapp.com\",\n    projectId: \"cryptosimulator-2020\",\n    storageBucket: \"cryptosimulator-2020.appspot.com\",\n    messagingSenderId: \"923198596355\",\n    appId: \"1:923198596355:web:0795e3fd85aeb627d1b536\",\n    measurementId: \"G-77RHN7PBGX\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nvar getCryptoList = firebase.functions().httpsCallable('getCryptoList');\ngetCryptoList().then(response =>{\n    resolve(response);\n}).catch(error =>{\n    reject(error);\n})\n\nexport default class Firebase{\n    static auth;\n    static firestore;\n    static storage;\n    static functions;\n  \n    static init() {\n      firebase.initializeApp(firebaseConfig);\n      Firebase.auth = firebase.auth();\n      Firebase.auth.setPersistence(firebase.auth.Auth.Persistence.LOCAL);\n      Firebase.firestore = firebase.firestore();\n      Firebase.storage = firebase.storage();\n      Firebase.functions = firebase.functions();\n    }\n}"]},"metadata":{},"sourceType":"module"}